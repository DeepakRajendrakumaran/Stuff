****** START compiling (dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref) (MethodHash=972eb5ce)
Generating code for Windows x64
OPTIONS: compCodeOpt = BLENDED_CODE
OPTIONS: compDbgCode = false
OPTIONS: compDbgInfo = false
OPTIONS: compDbgEnC  = false
OPTIONS: compProcedureSplitting   = false
OPTIONS: compProcedureSplittingEH = false
OPTIONS: optimizer should use profile data
IL to import:
IL_0000  14                ldnull      
IL_0001  0b                stloc.1     
IL_0002  00                nop         
IL_0003  00                nop         
IL_0004  02                ldarg.0     
IL_0005  25                dup         
IL_0006  39 02 00 00 00    brfalse      2 (IL_000d)
IL_000b  1e                ldc.i4.8    
IL_000c  58                add         
IL_000d  0c                stloc.2     
IL_000e  00                nop         
IL_000f  00                nop         
IL_0010  03                ldarg.1     
IL_0011  16                ldc.i4.0    
IL_0012  58                add         
IL_0013  0d                stloc.3     
IL_0014  00                nop         
IL_0015  00                nop         
IL_0016  00                nop         
IL_0017  00                nop         
IL_0018  02                ldarg.0     
IL_0019  25                dup         
IL_001a  39 03 00 00 00    brfalse      3 (IL_0022)
IL_001f  1f 0c             ldc.i4.s     0xC
IL_0021  58                add         
IL_0022  13 06             stloc.s      0x6
IL_0024  00                nop         
IL_0025  00                nop         
IL_0026  03                ldarg.1     
IL_0027  1a                ldc.i4.4    
IL_0028  58                add         
IL_0029  13 07             stloc.s      0x7
IL_002b  00                nop         
IL_002c  00                nop         
IL_002d  00                nop         
IL_002e  00                nop         
IL_002f  02                ldarg.0     
IL_0030  25                dup         
IL_0031  39 03 00 00 00    brfalse      3 (IL_0039)
IL_0036  1f 10             ldc.i4.s     0x10
IL_0038  58                add         
IL_0039  13 0a             stloc.s      0xA
IL_003b  00                nop         
IL_003c  00                nop         
IL_003d  03                ldarg.1     
IL_003e  1e                ldc.i4.8    
IL_003f  58                add         
IL_0040  13 0b             stloc.s      0xB
IL_0042  00                nop         
IL_0043  00                nop         
IL_0044  00                nop         
IL_0045  00                nop         
IL_0046  02                ldarg.0     
IL_0047  25                dup         
IL_0048  39 03 00 00 00    brfalse      3 (IL_0050)
IL_004d  1f 18             ldc.i4.s     0x18
IL_004f  58                add         
IL_0050  13 0e             stloc.s      0xE
IL_0052  00                nop         
IL_0053  00                nop         
IL_0054  03                ldarg.1     
IL_0055  1f 10             ldc.i4.s     0x10
IL_0057  58                add         
IL_0058  13 0f             stloc.s      0xF
IL_005a  00                nop         
IL_005b  00                nop         
IL_005c  00                nop         
IL_005d  00                nop         
IL_005e  02                ldarg.0     
IL_005f  25                dup         
IL_0060  39 02 00 00 00    brfalse      2 (IL_0067)
IL_0065  16                ldc.i4.0    
IL_0066  58                add         
IL_0067  13 12             stloc.s      0x12
IL_0069  00                nop         
IL_006a  00                nop         
IL_006b  03                ldarg.1     
IL_006c  1f 30             ldc.i4.s     0x30
IL_006e  58                add         
IL_006f  13 13             stloc.s      0x13
IL_0071  00                nop         
IL_0072  00                nop         
IL_0073  00                nop         
IL_0074  04                ldarg.2     
IL_0075  16                ldc.i4.0    
IL_0076  3b 11 00 00 00    beq          17 (IL_008c)
IL_007b  04                ldarg.2     
IL_007c  17                ldc.i4.1    
IL_007d  3b 82 00 00 00    beq          130 (IL_0104)
IL_0082  04                ldarg.2     
IL_0083  18                ldc.i4.2    
IL_0084  3b de 00 00 00    beq          222 (IL_0167)
IL_0089  00                nop         
IL_008a  16                ldc.i4.0    
IL_008b  0a                stloc.0     
IL_008c  03                ldarg.1     
IL_008d  16                ldc.i4.0    
IL_008e  1f 48             ldc.i4.s     0x48
IL_0090  fe 18             initblk     
IL_0092  00                nop         
IL_0093  08                ldloc.2     
IL_0094  fe 12 01          unaligned.   0x1
IL_0097  4a                ldind.i4    
IL_0098  13 04             stloc.s      0x4
IL_009a  09                ldloc.3     
IL_009b  11 04             ldloc.s      0x4
IL_009d  fe 12 01          unaligned.   0x1
IL_00a0  54                stind.i4    
IL_00a1  00                nop         
IL_00a2  00                nop         
IL_00a3  11 06             ldloc.s      0x6
IL_00a5  fe 12 01          unaligned.   0x1
IL_00a8  4a                ldind.i4    
IL_00a9  13 08             stloc.s      0x8
IL_00ab  11 07             ldloc.s      0x7
IL_00ad  11 08             ldloc.s      0x8
IL_00af  fe 12 01          unaligned.   0x1
IL_00b2  54                stind.i4    
IL_00b3  00                nop         
IL_00b4  00                nop         
IL_00b5  11 0a             ldloc.s      0xA
IL_00b7  fe 12 01          unaligned.   0x1
IL_00ba  4a                ldind.i4    
IL_00bb  13 0c             stloc.s      0xC
IL_00bd  11 0b             ldloc.s      0xB
IL_00bf  11 0c             ldloc.s      0xC
IL_00c1  fe 12 01          unaligned.   0x1
IL_00c4  54                stind.i4    
IL_00c5  00                nop         
IL_00c6  00                nop         
IL_00c7  11 0e             ldloc.s      0xE
IL_00c9  fe 12 01          unaligned.   0x1
IL_00cc  71 01 00 00 02    ldobj        0x2000001
IL_00d1  13 10             stloc.s      0x10
IL_00d3  11 0f             ldloc.s      0xF
IL_00d5  11 10             ldloc.s      0x10
IL_00d7  fe 12 01          unaligned.   0x1
IL_00da  81 02 00 00 02    stobj        0x2000002
IL_00df  00                nop         
IL_00e0  00                nop         
IL_00e1  11 13             ldloc.s      0x13
IL_00e3  16                ldc.i4.0    
IL_00e4  53                stind.i2    
IL_00e5  11 12             ldloc.s      0x12
IL_00e7  fe 12 01          unaligned.   0x1
IL_00ea  50                ldind.ref   
IL_00eb  11 13             ldloc.s      0x13
IL_00ed  28 05 00 00 06    call         0x6000005
IL_00f2  00                nop         
IL_00f3  dd 0b 00 00 00    leave        11 (IL_0103)
IL_00f8  28 08 00 00 06    call         0x6000008
IL_00fd  0b                stloc.1     
IL_00fe  dd 64 00 00 00    leave        100 (IL_0167)
IL_0103  2a                ret         
IL_0104  00                nop         
IL_0105  09                ldloc.3     
IL_0106  fe 12 01          unaligned.   0x1
IL_0109  4a                ldind.i4    
IL_010a  13 05             stloc.s      0x5
IL_010c  08                ldloc.2     
IL_010d  11 05             ldloc.s      0x5
IL_010f  fe 12 01          unaligned.   0x1
IL_0112  54                stind.i4    
IL_0113  00                nop         
IL_0114  00                nop         
IL_0115  11 07             ldloc.s      0x7
IL_0117  fe 12 01          unaligned.   0x1
IL_011a  4a                ldind.i4    
IL_011b  13 09             stloc.s      0x9
IL_011d  11 06             ldloc.s      0x6
IL_011f  11 09             ldloc.s      0x9
IL_0121  fe 12 01          unaligned.   0x1
IL_0124  54                stind.i4    
IL_0125  00                nop         
IL_0126  00                nop         
IL_0127  11 0b             ldloc.s      0xB
IL_0129  fe 12 01          unaligned.   0x1
IL_012c  4a                ldind.i4    
IL_012d  13 0d             stloc.s      0xD
IL_012f  11 0a             ldloc.s      0xA
IL_0131  11 0d             ldloc.s      0xD
IL_0133  fe 12 01          unaligned.   0x1
IL_0136  54                stind.i4    
IL_0137  00                nop         
IL_0138  00                nop         
IL_0139  11 0f             ldloc.s      0xF
IL_013b  fe 12 01          unaligned.   0x1
IL_013e  71 03 00 00 02    ldobj        0x2000003
IL_0143  13 11             stloc.s      0x11
IL_0145  11 0e             ldloc.s      0xE
IL_0147  11 11             ldloc.s      0x11
IL_0149  fe 12 01          unaligned.   0x1
IL_014c  81 04 00 00 02    stobj        0x2000004
IL_0151  00                nop         
IL_0152  00                nop         
IL_0153  11 13             ldloc.s      0x13
IL_0155  28 06 00 00 06    call         0x6000006
IL_015a  13 14             stloc.s      0x14
IL_015c  11 12             ldloc.s      0x12
IL_015e  11 14             ldloc.s      0x14
IL_0160  fe 12 01          unaligned.   0x1
IL_0163  51                stind.ref   
IL_0164  00                nop         
IL_0165  2a                ret         
IL_0166  2a                ret         
IL_0167  11 13             ldloc.s      0x13
IL_0169  28 07 00 00 06    call         0x6000007
IL_016e  03                ldarg.1     
IL_016f  16                ldc.i4.0    
IL_0170  1f 48             ldc.i4.s     0x48
IL_0172  fe 18             initblk     
IL_0174  07                ldloc.1     
IL_0175  39 89 ff ff ff    brfalse      -119 (IL_0103)
IL_017a  07                ldloc.1     
IL_017b  28 09 00 00 06    call         0x6000009
IL_0180  2a                ret         
Arg #0    passed in register(s) rcx
Arg #1    passed in register(s) rdx
Arg #2    passed in register(s) r8
Arg #3    passed in register(s) r9
Parameter V00 ABI info: [00..08) reg rcx
Parameter V01 ABI info: [00..08) reg rdx
Parameter V02 ABI info: [00..04) reg r8
Parameter V03 ABI info: [00..08) reg r9

lvaSetClass: setting class for V05 to (00007FFF6D2DD580) System.Runtime.ExceptionServices.ExceptionDispatchInfo 
Notify VM instruction set (AVX512F) must be supported.

lvaSetClass: setting class for V24 to (00007FFF6C5E4BC0) <unknown class> 

lvaGrabTemp returning 25 (V25 tmp0) (a long lifetime temp) called for OutgoingArgSpace.

Local V25 should not be enregistered because: it is address exposed
; Initial local variable assignments
;
;  V00 arg0            byref 
;  V01 arg1             long 
;  V02 arg2              int 
;  V03 arg3            byref 
;  V04 loc0              int 
;  V05 loc1              ref  class-hnd <System.Runtime.ExceptionServices.ExceptionDispatchInfo>
;  V06 loc2            byref 
;  V07 loc3            byref 
;  V08 loc4              int 
;  V09 loc5              int 
;  V10 loc6            byref 
;  V11 loc7            byref 
;  V12 loc8              int 
;  V13 loc9              int 
;  V14 loc10           byref 
;  V15 loc11           byref 
;  V16 loc12             int 
;  V17 loc13             int 
;  V18 loc14           byref 
;  V19 loc15           byref 
;  V20 loc16          struct <System.Data.OleDb.tagDBIDX, 32> <System.Data.OleDb.tagDBIDX>
;  V21 loc17          struct <System.Data.OleDb.tagDBIDX, 32> <System.Data.OleDb.tagDBIDX>
;  V22 loc18           byref 
;  V23 loc19           byref 
;  V24 loc20             ref  class-hnd <<unknown class>>
;  V25 OutArgs        struct <0> do-not-enreg[XS] addr-exposed "OutgoingArgSpace"
*************** In compInitDebuggingInfo() for (dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)
*************** In fgFindBasicBlocks() for (dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)
Marked V04 as a single def local
Marked V06 as a single def local
Marked V07 as a single def local
Marked V08 as a single def local
Marked V09 as a single def local
Marked V10 as a single def local
Marked V11 as a single def local
Marked V12 as a single def local
Marked V13 as a single def local
Marked V14 as a single def local
Marked V15 as a single def local
Marked V16 as a single def local
Marked V17 as a single def local
Marked V18 as a single def local
Marked V19 as a single def local
Marked V20 as a single def local
Marked V21 as a single def local
Marked V22 as a single def local
Marked V23 as a single def local
Marked V24 as a single def local
Jump targets:
  IL_000d
  IL_0022
  IL_0039
  IL_0050
  IL_0067
  IL_008c
  IL_00f8
  IL_0103
  IL_0104
  IL_0167
New Basic Block BB01 [0000] created.
BB01 [0000] [000..00B)
New Basic Block BB02 [0001] created.
BB02 [0001] [00B..00D)
New Basic Block BB03 [0002] created.
BB03 [0002] [00D..01F)
New Basic Block BB04 [0003] created.
BB04 [0003] [01F..022)
New Basic Block BB05 [0004] created.
BB05 [0004] [022..036)
New Basic Block BB06 [0005] created.
BB06 [0005] [036..039)
New Basic Block BB07 [0006] created.
BB07 [0006] [039..04D)
New Basic Block BB08 [0007] created.
BB08 [0007] [04D..050)
New Basic Block BB09 [0008] created.
BB09 [0008] [050..065)
New Basic Block BB10 [0009] created.
BB10 [0009] [065..067)
New Basic Block BB11 [0010] created.
BB11 [0010] [067..07B)
New Basic Block BB12 [0011] created.
BB12 [0011] [07B..082)
New Basic Block BB13 [0012] created.
BB13 [0012] [082..089)
New Basic Block BB14 [0013] created.
BB14 [0013] [089..08C)
New Basic Block BB15 [0014] created.
BB15 [0014] [08C..0F8)
New Basic Block BB16 [0015] created.
BB16 [0015] [0F8..103)
New Basic Block BB17 [0016] created.
BB17 [0016] [103..104)
New Basic Block BB18 [0017] created.
BB18 [0017] [104..166)
New Basic Block BB19 [0018] created.
BB19 [0018] [166..167)
New Basic Block BB20 [0019] created.
BB20 [0019] [167..17A)
New Basic Block BB21 [0020] created.
BB21 [0020] [17A..181)
setting likelihood of BB01 -> BB03 to 0.5
setting likelihood of BB01 -> BB02 to 0.5
setting likelihood of BB02 -> BB03 to 1
setting likelihood of BB03 -> BB05 to 0.5
setting likelihood of BB03 -> BB04 to 0.5
setting likelihood of BB04 -> BB05 to 1
setting likelihood of BB05 -> BB07 to 0.5
setting likelihood of BB05 -> BB06 to 0.5
setting likelihood of BB06 -> BB07 to 1
setting likelihood of BB07 -> BB09 to 0.5
setting likelihood of BB07 -> BB08 to 0.5
setting likelihood of BB08 -> BB09 to 1
setting likelihood of BB09 -> BB11 to 0.5
setting likelihood of BB09 -> BB10 to 0.5
setting likelihood of BB10 -> BB11 to 1
setting likelihood of BB11 -> BB15 to 0.5
setting likelihood of BB11 -> BB12 to 0.5
setting likelihood of BB12 -> BB18 to 0.5
setting likelihood of BB12 -> BB13 to 0.5
setting likelihood of BB13 -> BB20 to 0.5
setting likelihood of BB13 -> BB14 to 0.5
setting likelihood of BB14 -> BB15 to 1
setting likelihood of BB15 -> BB17 to 1
setting likelihood of BB16 -> BB20 to 1
setting likelihood of BB20 -> BB17 to 0.5
setting likelihood of BB20 -> BB21 to 0.5
EH clause #0:
  Flags:         0x0 (catch)
  TryOffset:     0x8c
  TryLength:     0x6c
  HandlerOffset: 0xf8
  HandlerLength: 0xb
  ClassToken:    0x200000a
*************** After fgFindBasicBlocks() has created the EH table

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)
*************** In fgNormalizeEH()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..00B)-> BB03(0.5),BB02(0.5)     ( cond )                     
BB02 [0001]  1       BB01                  1    [00B..00D)-> BB03(1)                 (always)                     
BB03 [0002]  2       BB01,BB02             1    [00D..01F)-> BB05(0.5),BB04(0.5)     ( cond )                     
BB04 [0003]  1       BB03                  1    [01F..022)-> BB05(1)                 (always)                     
BB05 [0004]  2       BB03,BB04             1    [022..036)-> BB07(0.5),BB06(0.5)     ( cond )                     
BB06 [0005]  1       BB05                  1    [036..039)-> BB07(1)                 (always)                     
BB07 [0006]  2       BB05,BB06             1    [039..04D)-> BB09(0.5),BB08(0.5)     ( cond )                     
BB08 [0007]  1       BB07                  1    [04D..050)-> BB09(1)                 (always)                     
BB09 [0008]  2       BB07,BB08             1    [050..065)-> BB11(0.5),BB10(0.5)     ( cond )                     
BB10 [0009]  1       BB09                  1    [065..067)-> BB11(1)                 (always)                     
BB11 [0010]  2       BB09,BB10             1    [067..07B)-> BB15(0.5),BB12(0.5)     ( cond )                     
BB12 [0011]  1       BB11                  1    [07B..082)-> BB18(0.5),BB13(0.5)     ( cond )                     
BB13 [0012]  1       BB12                  1    [082..089)-> BB20(0.5),BB14(0.5)     ( cond )                     
BB14 [0013]  1       BB13                  1    [089..08C)-> BB15(1)                 (always)                     
BB15 [0014]  2  0    BB11,BB14             1    [08C..0F8)-> BB17(1)                 (leave ) T0      try { }     keep
BB16 [0015]  1     0                       1    [0F8..103)-> BB20(1)                 (leave )    H0   catch { }   keep
BB17 [0016]  2       BB15,BB20             1    [103..104)                           (return)                     bwd-target
BB18 [0017]  1       BB12                  1    [104..166)                           (return)                     
BB19 [0018]  0                             1    [166..167)                           (return)                     
BB20 [0019]  2       BB13,BB16             1    [167..17A)-> BB17(0.5),BB21(0.5)     ( cond )                     bwd bwd-src
BB21 [0020]  1       BB20                  1    [17A..181)                           (return)                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)
No EH normalization performed.
IL Code Size,Instr  385, 198, Basic Block count  21, Local Variable Num,Ref count  26, 70 for method (dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)
OPTIONS: opts.MinOpts() == false
Basic block list for '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..00B)-> BB03(0.5),BB02(0.5)     ( cond )                     
BB02 [0001]  1       BB01                  1    [00B..00D)-> BB03(1)                 (always)                     
BB03 [0002]  2       BB01,BB02             1    [00D..01F)-> BB05(0.5),BB04(0.5)     ( cond )                     
BB04 [0003]  1       BB03                  1    [01F..022)-> BB05(1)                 (always)                     
BB05 [0004]  2       BB03,BB04             1    [022..036)-> BB07(0.5),BB06(0.5)     ( cond )                     
BB06 [0005]  1       BB05                  1    [036..039)-> BB07(1)                 (always)                     
BB07 [0006]  2       BB05,BB06             1    [039..04D)-> BB09(0.5),BB08(0.5)     ( cond )                     
BB08 [0007]  1       BB07                  1    [04D..050)-> BB09(1)                 (always)                     
BB09 [0008]  2       BB07,BB08             1    [050..065)-> BB11(0.5),BB10(0.5)     ( cond )                     
BB10 [0009]  1       BB09                  1    [065..067)-> BB11(1)                 (always)                     
BB11 [0010]  2       BB09,BB10             1    [067..07B)-> BB15(0.5),BB12(0.5)     ( cond )                     
BB12 [0011]  1       BB11                  1    [07B..082)-> BB18(0.5),BB13(0.5)     ( cond )                     
BB13 [0012]  1       BB12                  1    [082..089)-> BB20(0.5),BB14(0.5)     ( cond )                     
BB14 [0013]  1       BB13                  1    [089..08C)-> BB15(1)                 (always)                     
BB15 [0014]  2  0    BB11,BB14             1    [08C..0F8)-> BB17(1)                 (leave ) T0      try { }     keep
BB16 [0015]  1     0                       1    [0F8..103)-> BB20(1)                 (leave )    H0   catch { }   keep
BB17 [0016]  2       BB15,BB20             1    [103..104)                           (return)                     bwd-target
BB18 [0017]  1       BB12                  1    [104..166)                           (return)                     
BB19 [0018]  0                             1    [166..167)                           (return)                     
BB20 [0019]  2       BB13,BB16             1    [167..17A)-> BB17(0.5),BB21(0.5)     ( cond )                     bwd bwd-src
BB21 [0020]  1       BB20                  1    [17A..181)                           (return)                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Pre-import

*************** Finishing PHASE Pre-import
Trees after Pre-import

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..00B)-> BB03(0.5),BB02(0.5)     ( cond )                     
BB02 [0001]  1       BB01                  1    [00B..00D)-> BB03(1)                 (always)                     
BB03 [0002]  2       BB01,BB02             1    [00D..01F)-> BB05(0.5),BB04(0.5)     ( cond )                     
BB04 [0003]  1       BB03                  1    [01F..022)-> BB05(1)                 (always)                     
BB05 [0004]  2       BB03,BB04             1    [022..036)-> BB07(0.5),BB06(0.5)     ( cond )                     
BB06 [0005]  1       BB05                  1    [036..039)-> BB07(1)                 (always)                     
BB07 [0006]  2       BB05,BB06             1    [039..04D)-> BB09(0.5),BB08(0.5)     ( cond )                     
BB08 [0007]  1       BB07                  1    [04D..050)-> BB09(1)                 (always)                     
BB09 [0008]  2       BB07,BB08             1    [050..065)-> BB11(0.5),BB10(0.5)     ( cond )                     
BB10 [0009]  1       BB09                  1    [065..067)-> BB11(1)                 (always)                     
BB11 [0010]  2       BB09,BB10             1    [067..07B)-> BB15(0.5),BB12(0.5)     ( cond )                     
BB12 [0011]  1       BB11                  1    [07B..082)-> BB18(0.5),BB13(0.5)     ( cond )                     
BB13 [0012]  1       BB12                  1    [082..089)-> BB20(0.5),BB14(0.5)     ( cond )                     
BB14 [0013]  1       BB13                  1    [089..08C)-> BB15(1)                 (always)                     
BB15 [0014]  2  0    BB11,BB14             1    [08C..0F8)-> BB17(1)                 (leave ) T0      try { }     keep
BB16 [0015]  1     0                       1    [0F8..103)-> BB20(1)                 (leave )    H0   catch { }   keep
BB17 [0016]  2       BB15,BB20             1    [103..104)                           (return)                     bwd-target
BB18 [0017]  1       BB12                  1    [104..166)                           (return)                     
BB19 [0018]  0                             1    [166..167)                           (return)                     
BB20 [0019]  2       BB13,BB16             1    [167..17A)-> BB17(0.5),BB21(0.5)     ( cond )                     bwd bwd-src
BB21 [0020]  1       BB20                  1    [17A..181)                           (return)                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.5),BB02(0.5) (cond), preds={} succs={BB02,BB03}

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

------------ BB03 [0002] [00D..01F) -> BB05(0.5),BB04(0.5) (cond), preds={BB01,BB02} succs={BB04,BB05}

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

------------ BB05 [0004] [022..036) -> BB07(0.5),BB06(0.5) (cond), preds={BB03,BB04} succs={BB06,BB07}

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

------------ BB07 [0006] [039..04D) -> BB09(0.5),BB08(0.5) (cond), preds={BB05,BB06} succs={BB08,BB09}

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

------------ BB09 [0008] [050..065) -> BB11(0.5),BB10(0.5) (cond), preds={BB07,BB08} succs={BB10,BB11}

------------ BB10 [0009] [065..067) -> BB11(1) (always), preds={BB09} succs={BB11}

------------ BB11 [0010] [067..07B) -> BB15(0.5),BB12(0.5) (cond), preds={BB09,BB10} succs={BB12,BB15}

------------ BB12 [0011] [07B..082) -> BB18(0.5),BB13(0.5) (cond), preds={BB11} succs={BB13,BB18}

------------ BB13 [0012] [082..089) -> BB20(0.5),BB14(0.5) (cond), preds={BB12} succs={BB14,BB20}

------------ BB14 [0013] [089..08C) -> BB15(1) (always), preds={BB13} succs={BB15}

------------ BB15 [0014] [08C..0F8) -> BB17(1) (leave), preds={BB11,BB14} succs={BB17}

------------ BB16 [0015] [0F8..103) -> BB20(1) (leave), preds={} succs={BB20}

------------ BB17 [0016] [103..104) (return), preds={BB15,BB20} succs={}

------------ BB18 [0017] [104..166) (return), preds={BB12} succs={}

------------ BB19 [0018] [166..167) (return), preds={} succs={}

------------ BB20 [0019] [167..17A) -> BB17(0.5),BB21(0.5) (cond), preds={BB13,BB16} succs={BB21,BB17}

------------ BB21 [0020] [17A..181) (return), preds={BB20} succs={}

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Profile incorporation
BBOPT set, but no profile data available (hr=80004001)
Dynamic PGO active, synthesizing profile data
Identifying loops in DFS tree with following reverse post order:
RPO -> BB [pre, post]
00 -> BB01[0, 19]
01 -> BB02[1, 18]
02 -> BB03[2, 17]
03 -> BB04[3, 16]
04 -> BB05[4, 15]
05 -> BB06[5, 14]
06 -> BB07[6, 13]
07 -> BB08[7, 12]
08 -> BB09[8, 11]
09 -> BB10[9, 10]
10 -> BB11[10, 9]
11 -> BB12[11, 8]
12 -> BB18[19, 7]
13 -> BB13[12, 6]
14 -> BB14[13, 5]
15 -> BB15[14, 4]
16 -> BB16[16, 3]
17 -> BB20[17, 2]
18 -> BB21[18, 1]
19 -> BB17[15, 0]
Flow graph has no cycles; skipping identification of natural loops
Assigning edge likelihoods based on heuristics
setting likelihood of BB01 -> BB03 from 0.5 to 0.48
setting likelihood of BB01 -> BB02 from 0.5 to 0.52
setting likelihood of BB02 -> BB03 from 1 to 1
setting likelihood of BB03 -> BB05 from 0.5 to 0.48
setting likelihood of BB03 -> BB04 from 0.5 to 0.52
setting likelihood of BB04 -> BB05 from 1 to 1
setting likelihood of BB05 -> BB07 from 0.5 to 0.48
setting likelihood of BB05 -> BB06 from 0.5 to 0.52
setting likelihood of BB06 -> BB07 from 1 to 1
setting likelihood of BB07 -> BB09 from 0.5 to 0.48
setting likelihood of BB07 -> BB08 from 0.5 to 0.52
setting likelihood of BB08 -> BB09 from 1 to 1
setting likelihood of BB09 -> BB11 from 0.5 to 0.48
setting likelihood of BB09 -> BB10 from 0.5 to 0.52
setting likelihood of BB10 -> BB11 from 1 to 1
setting likelihood of BB11 -> BB15 from 0.5 to 0.48
setting likelihood of BB11 -> BB12 from 0.5 to 0.52
setting likelihood of BB12 -> BB18 from 0.5 to 0.2
setting likelihood of BB12 -> BB13 from 0.5 to 0.8
setting likelihood of BB13 -> BB20 from 0.5 to 0.48
setting likelihood of BB13 -> BB14 from 0.5 to 0.52
setting likelihood of BB14 -> BB15 from 1 to 1
setting likelihood of BB15 -> BB17 from 1 to 1
setting likelihood of BB16 -> BB20 from 1 to 1
setting likelihood of BB20 -> BB17 from 0.5 to 0.48
setting likelihood of BB20 -> BB21 from 0.5 to 0.52
Synthesis: entry BB01 has input weight 100
Synthesis: exception weight 1e-05
Computing block weights
Synthesis solver: flow graph has 0 improper loop headers
converged at iteration 0 rel residual inf eigenvalue 0
Checking Profile Weights (flags:0x14)
Profile is self-consistent (21 profiled blocks, 0 unprofiled)

*************** Finishing PHASE Profile incorporation [no changes]

*************** Starting PHASE Importation

impImportBlockPending for BB01

Importing BB01 (PC=000) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 0]   0 (0x000) ldnull
    [ 1]   1 (0x001) stloc.1

STMT00000 ( 0x000[E-] ... ??? )
               [000001] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----------                         \--*  CNS_INT   ref    null

    [ 0]   2 (0x002) nop
    [ 0]   3 (0x003) nop
    [ 0]   4 (0x004) ldarg.0
    [ 1]   5 (0x005) dup
    [ 2]   6 (0x006) brfalse

STMT00001 ( ??? ... ??? )
               [000006] -----------                         *  JTRUE     void  
               [000005] -----------                         \--*  EQ        int   
               [000003] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----------                            \--*  CNS_INT   byref  0

*************** In impGetSpillTmpBase(BB01)

lvaGrabTemps(1) returning 26..26 (long lifetime temps) called for IL Stack Entries
Spilling stack entries into temps


STMT00002 ( ??? ... ??? )
               [000007] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----------                         \--*  LCL_VAR   byref  V00 arg0         


STMT00001 ( ??? ... 0x006 )
               [000006] -----------                         *  JTRUE     void  
               [000005] -----------                         \--*  EQ        int   
               [000003] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----------                            \--*  CNS_INT   byref  0

impImportBlockPending for BB02

impImportBlockPending for BB03

Importing BB03 (PC=013) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 1]  13 (0x00d) stloc.2

STMT00003 ( ??? ... ??? )
               [000011] DA---------                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----------                         \--*  LCL_VAR   byref  V26 tmp1         

    [ 0]  14 (0x00e) nop
    [ 0]  15 (0x00f) nop
    [ 0]  16 (0x010) ldarg.1
    [ 1]  17 (0x011) ldc.i4.0 0
    [ 2]  18 (0x012) add
Folding long operator with constant nodes into a constant:
               [000014] -----------                         *  CAST      long <- int
               [000013] -----------                         \--*  CNS_INT   int    0
Bashed to long constant:
               [000014] -----------                         *  CNS_INT   long   0

    [ 1]  19 (0x013) stloc.3

STMT00004 ( ??? ... ??? )
               [000015] DA---------                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----------                         \--*  LCL_VAR   long   V01 arg1         

    [ 0]  20 (0x014) nop
    [ 0]  21 (0x015) nop
    [ 0]  22 (0x016) nop
    [ 0]  23 (0x017) nop
    [ 0]  24 (0x018) ldarg.0
    [ 1]  25 (0x019) dup
    [ 2]  26 (0x01a) brfalse

STMT00005 ( ??? ... ??? )
               [000020] -----------                         *  JTRUE     void  
               [000019] -----------                         \--*  EQ        int   
               [000017] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----------                            \--*  CNS_INT   byref  0

*************** In impGetSpillTmpBase(BB03)

lvaGrabTemps(1) returning 27..27 (long lifetime temps) called for IL Stack Entries
Spilling stack entries into temps


STMT00006 ( ??? ... ??? )
               [000021] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----------                         \--*  LCL_VAR   byref  V00 arg0         


STMT00005 ( ??? ... 0x01A )
               [000020] -----------                         *  JTRUE     void  
               [000019] -----------                         \--*  EQ        int   
               [000017] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----------                            \--*  CNS_INT   byref  0

impImportBlockPending for BB04

impImportBlockPending for BB05

Importing BB05 (PC=034) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 1]  34 (0x022) stloc.s 6

STMT00007 ( ??? ... ??? )
               [000025] DA---------                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----------                         \--*  LCL_VAR   byref  V27 tmp2         

    [ 0]  36 (0x024) nop
    [ 0]  37 (0x025) nop
    [ 0]  38 (0x026) ldarg.1
    [ 1]  39 (0x027) ldc.i4.4 4
    [ 2]  40 (0x028) add
Folding long operator with constant nodes into a constant:
               [000028] -----------                         *  CAST      long <- int
               [000027] -----------                         \--*  CNS_INT   int    4
Bashed to long constant:
               [000028] -----------                         *  CNS_INT   long   4

    [ 1]  41 (0x029) stloc.s 7

STMT00008 ( ??? ... ??? )
               [000030] DA---------                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----------                         \--*  ADD       long  
               [000026] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----------                            \--*  CNS_INT   long   4

    [ 0]  43 (0x02b) nop
    [ 0]  44 (0x02c) nop
    [ 0]  45 (0x02d) nop
    [ 0]  46 (0x02e) nop
    [ 0]  47 (0x02f) ldarg.0
    [ 1]  48 (0x030) dup
    [ 2]  49 (0x031) brfalse

STMT00009 ( ??? ... ??? )
               [000035] -----------                         *  JTRUE     void  
               [000034] -----------                         \--*  EQ        int   
               [000032] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----------                            \--*  CNS_INT   byref  0

*************** In impGetSpillTmpBase(BB05)

lvaGrabTemps(1) returning 28..28 (long lifetime temps) called for IL Stack Entries
Spilling stack entries into temps


STMT00010 ( ??? ... ??? )
               [000036] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----------                         \--*  LCL_VAR   byref  V00 arg0         


STMT00009 ( ??? ... 0x031 )
               [000035] -----------                         *  JTRUE     void  
               [000034] -----------                         \--*  EQ        int   
               [000032] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----------                            \--*  CNS_INT   byref  0

impImportBlockPending for BB06

impImportBlockPending for BB07

Importing BB07 (PC=057) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 1]  57 (0x039) stloc.s 10

STMT00011 ( ??? ... ??? )
               [000040] DA---------                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----------                         \--*  LCL_VAR   byref  V28 tmp3         

    [ 0]  59 (0x03b) nop
    [ 0]  60 (0x03c) nop
    [ 0]  61 (0x03d) ldarg.1
    [ 1]  62 (0x03e) ldc.i4.8 8
    [ 2]  63 (0x03f) add
Folding long operator with constant nodes into a constant:
               [000043] -----------                         *  CAST      long <- int
               [000042] -----------                         \--*  CNS_INT   int    8
Bashed to long constant:
               [000043] -----------                         *  CNS_INT   long   8

    [ 1]  64 (0x040) stloc.s 11

STMT00012 ( ??? ... ??? )
               [000045] DA---------                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----------                         \--*  ADD       long  
               [000041] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----------                            \--*  CNS_INT   long   8

    [ 0]  66 (0x042) nop
    [ 0]  67 (0x043) nop
    [ 0]  68 (0x044) nop
    [ 0]  69 (0x045) nop
    [ 0]  70 (0x046) ldarg.0
    [ 1]  71 (0x047) dup
    [ 2]  72 (0x048) brfalse

STMT00013 ( ??? ... ??? )
               [000050] -----------                         *  JTRUE     void  
               [000049] -----------                         \--*  EQ        int   
               [000047] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----------                            \--*  CNS_INT   byref  0

*************** In impGetSpillTmpBase(BB07)

lvaGrabTemps(1) returning 29..29 (long lifetime temps) called for IL Stack Entries
Spilling stack entries into temps


STMT00014 ( ??? ... ??? )
               [000051] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----------                         \--*  LCL_VAR   byref  V00 arg0         


STMT00013 ( ??? ... 0x048 )
               [000050] -----------                         *  JTRUE     void  
               [000049] -----------                         \--*  EQ        int   
               [000047] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----------                            \--*  CNS_INT   byref  0

impImportBlockPending for BB08

impImportBlockPending for BB09

Importing BB09 (PC=080) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 1]  80 (0x050) stloc.s 14

STMT00015 ( ??? ... ??? )
               [000055] DA---------                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----------                         \--*  LCL_VAR   byref  V29 tmp4         

    [ 0]  82 (0x052) nop
    [ 0]  83 (0x053) nop
    [ 0]  84 (0x054) ldarg.1
    [ 1]  85 (0x055) ldc.i4.s 16
    [ 2]  87 (0x057) add
Folding long operator with constant nodes into a constant:
               [000058] -----------                         *  CAST      long <- int
               [000057] -----------                         \--*  CNS_INT   int    16
Bashed to long constant:
               [000058] -----------                         *  CNS_INT   long   16

    [ 1]  88 (0x058) stloc.s 15

STMT00016 ( ??? ... ??? )
               [000060] DA---------                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----------                         \--*  ADD       long  
               [000056] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----------                            \--*  CNS_INT   long   16

    [ 0]  90 (0x05a) nop
    [ 0]  91 (0x05b) nop
    [ 0]  92 (0x05c) nop
    [ 0]  93 (0x05d) nop
    [ 0]  94 (0x05e) ldarg.0
    [ 1]  95 (0x05f) dup
    [ 2]  96 (0x060) brfalse

STMT00017 ( ??? ... ??? )
               [000065] -----------                         *  JTRUE     void  
               [000064] -----------                         \--*  EQ        int   
               [000062] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000063] -----------                            \--*  CNS_INT   byref  0

*************** In impGetSpillTmpBase(BB09)

lvaGrabTemps(1) returning 30..30 (long lifetime temps) called for IL Stack Entries
Spilling stack entries into temps


STMT00018 ( ??? ... ??? )
               [000066] DA---------                         *  STORE_LCL_VAR byref  V30 tmp5         
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0         


STMT00017 ( ??? ... 0x060 )
               [000065] -----------                         *  JTRUE     void  
               [000064] -----------                         \--*  EQ        int   
               [000062] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000063] -----------                            \--*  CNS_INT   byref  0

impImportBlockPending for BB10

impImportBlockPending for BB11

Importing BB11 (PC=103) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 1] 103 (0x067) stloc.s 18

STMT00019 ( ??? ... ??? )
               [000070] DA---------                         *  STORE_LCL_VAR byref  V22 loc18        
               [000069] -----------                         \--*  LCL_VAR   byref  V30 tmp5         

    [ 0] 105 (0x069) nop
    [ 0] 106 (0x06a) nop
    [ 0] 107 (0x06b) ldarg.1
    [ 1] 108 (0x06c) ldc.i4.s 48
    [ 2] 110 (0x06e) add
Folding long operator with constant nodes into a constant:
               [000073] -----------                         *  CAST      long <- int
               [000072] -----------                         \--*  CNS_INT   int    48
Bashed to long constant:
               [000073] -----------                         *  CNS_INT   long   48

    [ 1] 111 (0x06f) stloc.s 19

STMT00020 ( ??? ... ??? )
               [000075] DA---------                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----------                         \--*  ADD       long  
               [000071] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----------                            \--*  CNS_INT   long   48

    [ 0] 113 (0x071) nop
    [ 0] 114 (0x072) nop
    [ 0] 115 (0x073) nop
    [ 0] 116 (0x074) ldarg.2
    [ 1] 117 (0x075) ldc.i4.0 0
    [ 2] 118 (0x076) beq

STMT00021 ( ??? ... ??? )
               [000079] -----------                         *  JTRUE     void  
               [000078] -----------                         \--*  EQ        int   
               [000076] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----------                            \--*  CNS_INT   int    0

impImportBlockPending for BB12

impImportBlockPending for BB15

impImportBlockPending for BB16

Importing BB15 (PC=140) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 0] 140 (0x08c) ldarg.1
    [ 1] 141 (0x08d) ldc.i4.0 0
    [ 2] 142 (0x08e) ldc.i4.s 72
    [ 3] 144 (0x090) initblk

STMT00022 ( ??? ... ??? )
               [000085] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000082] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -------N---                         \--*  CNS_INT   int    0

    [ 0] 146 (0x092) nop
    [ 0] 147 (0x093) ldloc.2
    [ 1] 148 (0x094) unaligned. 1ldind.i4
    [ 1] 152 (0x098) stloc.s 4

STMT00023 ( ??? ... ??? )
               [000088] DA-XG------                         *  STORE_LCL_VAR int    V08 loc4         
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2         

    [ 0] 154 (0x09a) ldloc.3
    [ 1] 155 (0x09b) ldloc.s 4
    [ 2] 157 (0x09d) unaligned. 1stind.i4

STMT00024 ( ??? ... ??? )
               [000091] UA-XG------                         *  STOREIND  int   
               [000089] -----------                         +--*  LCL_VAR   byref  V07 loc3         
               [000090] -----------                         \--*  LCL_VAR   int    V08 loc4         

    [ 0] 161 (0x0a1) nop
    [ 0] 162 (0x0a2) nop
    [ 0] 163 (0x0a3) ldloc.s 6
    [ 1] 165 (0x0a5) unaligned. 1ldind.i4
    [ 1] 169 (0x0a9) stloc.s 8

STMT00025 ( ??? ... ??? )
               [000094] DA-XG------                         *  STORE_LCL_VAR int    V12 loc8         
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6         

    [ 0] 171 (0x0ab) ldloc.s 7
    [ 1] 173 (0x0ad) ldloc.s 8
    [ 2] 175 (0x0af) unaligned. 1stind.i4

STMT00026 ( ??? ... ??? )
               [000097] UA-XG------                         *  STOREIND  int   
               [000095] -----------                         +--*  LCL_VAR   byref  V11 loc7         
               [000096] -----------                         \--*  LCL_VAR   int    V12 loc8         

    [ 0] 179 (0x0b3) nop
    [ 0] 180 (0x0b4) nop
    [ 0] 181 (0x0b5) ldloc.s 10
    [ 1] 183 (0x0b7) unaligned. 1ldind.i4
    [ 1] 187 (0x0bb) stloc.s 12

STMT00027 ( ??? ... ??? )
               [000100] DA-XG------                         *  STORE_LCL_VAR int    V16 loc12        
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10        

    [ 0] 189 (0x0bd) ldloc.s 11
    [ 1] 191 (0x0bf) ldloc.s 12
    [ 2] 193 (0x0c1) unaligned. 1stind.i4

STMT00028 ( ??? ... ??? )
               [000103] UA-XG------                         *  STOREIND  int   
               [000101] -----------                         +--*  LCL_VAR   byref  V15 loc11        
               [000102] -----------                         \--*  LCL_VAR   int    V16 loc12        

    [ 0] 197 (0x0c5) nop
    [ 0] 198 (0x0c6) nop
    [ 0] 199 (0x0c7) ldloc.s 14
    [ 1] 201 (0x0c9) unaligned. 1ldobj 02000001
    [ 1] 209 (0x0d1) stloc.s 16

STMT00029 ( ??? ... ??? )
               [000106] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14        

    [ 0] 211 (0x0d3) ldloc.s 15
    [ 1] 213 (0x0d5) ldloc.s 16
    [ 2] 215 (0x0d7) unaligned. 1stobj 02000002

STMT00030 ( ??? ... ??? )
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----------                         +--*  LCL_VAR   byref  V19 loc15        
               [000108] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        

    [ 0] 223 (0x0df) nop
    [ 0] 224 (0x0e0) nop
    [ 0] 225 (0x0e1) ldloc.s 19
    [ 1] 227 (0x0e3) ldc.i4.0 0
    [ 2] 228 (0x0e4) stind.i2

STMT00031 ( ??? ... ??? )
               [000112] -A-XG------                         *  STOREIND  short 
               [000110] -----------                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----------                         \--*  CNS_INT   int    0

    [ 0] 229 (0x0e5) ldloc.s 18
    [ 1] 231 (0x0e7) unaligned. 1ldind.ref
    [ 1] 235 (0x0eb) ldloc.s 19
    [ 2] 237 (0x0ed) call 06000005
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0

CheckCanInline: fetching method info for inline candidate <unknown method> -- context 00007FFF6EFE56A1
Class context: <unknown class>
INLINER: during 'impMarkInlineCandidate' result 'CheckCanInline Success' reason 'CheckCanInline Success' for '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)' calling '<unknown method>'
INLINER: during 'impMarkInlineCandidate' result 'CheckCanInline Success' reason 'CheckCanInline Success'


STMT00032 ( ??? ... ??? )
               [000116] I-CXG------                         *  CALL      void   <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000114] U--XG------ arg0                    +--*  IND       ref   
               [000113] -----------                         |  \--*  LCL_VAR   byref  V22 loc18        
               [000115] ----------- arg1                    \--*  LCL_VAR   byref  V23 loc19        

    [ 0] 242 (0x0f2) nop
    [ 0] 243 (0x0f3) leave 0103
Before import CEE_LEAVE in BB15 (targeting BB17):

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB20(0.48),BB14(0.52)   ( cond )                     IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (leave ) T0      try { }     IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB20(1)                 (leave )    H0   catch { }   IBC keep
BB17 [0016]  2       BB15,BB20            79.22  79 [103..104)                           (return)                     IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     IBC
BB19 [0018]  0                             0      0 [166..167)                           (return)                     IBC rare
BB20 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB21(0.52)   ( cond )                     IBC bwd bwd-src
BB21 [0020]  1       BB20                 10.38  10 [17A..181)                           (return)                     IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)
impImportLeave - no enclosing finally-protected try blocks or catch handlers; convert CEE_LEAVE block BB15 to BBJ_ALWAYS

After import CEE_LEAVE:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB20(0.48),BB14(0.52)   ( cond )                     IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB20(1)                 (leave )    H0   catch { }   IBC keep
BB17 [0016]  2       BB15,BB20            79.22  79 [103..104)                           (return)                     IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     IBC
BB19 [0018]  0                             0      0 [166..167)                           (return)                     IBC rare
BB20 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB21(0.52)   ( cond )                     IBC bwd bwd-src
BB21 [0020]  1       BB20                 10.38  10 [17A..181)                           (return)                     IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)

impImportBlockPending for BB17

Importing BB17 (PC=259) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 0] 259 (0x103) ret

STMT00033 ( ??? ... ??? )
               [000117] -----------                         *  RETURN    void  

Importing BB16 (PC=248) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
lvaGrabTemp returning 31 (V31 tmp6) called for impSpillSpecialSideEff.


STMT00034 ( ??? ... ??? )
               [000118] DA---O-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----O-----                         \--*  CATCH_ARG ref   
Marked V31 as a single def temp

lvaSetClass: setting class for V31 to (00007FFF6C5E4BC0) <unknown class> 

    [ 1] 248 (0x0f8) call 06000008
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

Will not inline blocks that are in the catch handler region
INLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'within catch region' for '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)' calling '<unknown method>'
INLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'within catch region'

    [ 1] 253 (0x0fd) stloc.1

STMT00035 ( ??? ... ??? )
               [000121] DAC-G------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --C-G------                         \--*  CALL      ref    <unknown method>
               [000119] ----------- arg0                       \--*  LCL_VAR   ref    V31 tmp6         

    [ 0] 254 (0x0fe) leave 0167
Before import CEE_LEAVE in BB16 (targeting BB20):

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB20(0.48),BB14(0.52)   ( cond )                     IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB20(1)                 (leave )    H0   catch { }   IBC keep
BB17 [0016]  2       BB15,BB20            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     IBC
BB19 [0018]  0                             0      0 [166..167)                           (return)                     IBC rare
BB20 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB21(0.52)   ( cond )                     IBC bwd bwd-src
BB21 [0020]  1       BB20                 10.38  10 [17A..181)                           (return)                     IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)
impImportLeave - jumping out of a catch (EH#0), convert block BB16 to BBJ_EHCATCHRET block
impImportLeave - final destination of step blocks set to BB20

impImportBlockPending for BB20

After import CEE_LEAVE:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB20(0.48),BB14(0.52)   ( cond )                     IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB20(1)                 ( cret )    H0   catch { }   IBC keep
BB17 [0016]  2       BB15,BB20            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     IBC
BB19 [0018]  0                             0      0 [166..167)                           (return)                     IBC rare
BB20 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB21(0.52)   ( cond )                     IBC bwd bwd-src
BB21 [0020]  1       BB20                 10.38  10 [17A..181)                           (return)                     IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)

impImportBlockPending for BB20

Importing BB20 (PC=359) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 0] 359 (0x167) ldloc.s 19
    [ 1] 361 (0x169) call 06000007
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0

CheckCanInline: fetching method info for inline candidate <unknown method> -- context 00007FFF6EFE56A1
Class context: <unknown class>
INLINER: during 'impMarkInlineCandidate' result 'CheckCanInline Success' reason 'CheckCanInline Success' for '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)' calling '<unknown method>'
INLINER: during 'impMarkInlineCandidate' result 'CheckCanInline Success' reason 'CheckCanInline Success'


STMT00036 ( ??? ... ??? )
               [000123] I-C-G------                         *  CALL      void   <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000122] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

    [ 0] 366 (0x16e) ldarg.1
    [ 1] 367 (0x16f) ldc.i4.0 0
    [ 2] 368 (0x170) ldc.i4.s 72
    [ 3] 370 (0x172) initblk

STMT00037 ( ??? ... ??? )
               [000127] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000124] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -------N---                         \--*  CNS_INT   int    0

    [ 0] 372 (0x174) ldloc.1
    [ 1] 373 (0x175) brfalse

STMT00038 ( ??? ... ??? )
               [000131] -----------                         *  JTRUE     void  
               [000130] -----------                         \--*  EQ        int   
               [000128] -----------                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----------                            \--*  CNS_INT   ref    null

impImportBlockPending for BB21

impImportBlockPending for BB17

Importing BB21 (PC=378) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 0] 378 (0x17a) ldloc.1
    [ 1] 379 (0x17b) call 06000009
 (Implicit Tail call: prefixFlags |= PREFIX_TAILCALL_IMPLICIT)
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0

GTF_CALL_M_IMPLICIT_TAILCALL set for call [000133]

CheckCanInline: fetching method info for inline candidate Throw -- context 00007FFF6D2DD581
Class context: System.Runtime.ExceptionServices.ExceptionDispatchInfo
INLINER: during 'impMarkInlineCandidate' result 'CheckCanInline Success' reason 'CheckCanInline Success' for '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)' calling 'System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this'
INLINER: during 'impMarkInlineCandidate' result 'CheckCanInline Success' reason 'CheckCanInline Success'


STMT00039 ( ??? ... ??? )
               [000133] I-C-G------                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this (exactContextHandle=0x00007FFF6D2DD581)
               [000132] ----------- this                    \--*  LCL_VAR   ref    V05 loc1         

    [ 0] 384 (0x180) ret

STMT00040 ( ??? ... ??? )
               [000134] -----------                         *  RETURN    void  

Importing BB12 (PC=123) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 0] 123 (0x07b) ldarg.2
    [ 1] 124 (0x07c) ldc.i4.1 1
    [ 2] 125 (0x07d) beq

STMT00041 ( ??? ... ??? )
               [000138] -----------                         *  JTRUE     void  
               [000137] -----------                         \--*  EQ        int   
               [000135] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----------                            \--*  CNS_INT   int    1

impImportBlockPending for BB13

impImportBlockPending for BB18

Importing BB18 (PC=260) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 0] 260 (0x104) nop
    [ 0] 261 (0x105) ldloc.3
    [ 1] 262 (0x106) unaligned. 1ldind.i4
    [ 1] 266 (0x10a) stloc.s 5

STMT00042 ( ??? ... ??? )
               [000141] DA-XG------                         *  STORE_LCL_VAR int    V09 loc5         
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3         

    [ 0] 268 (0x10c) ldloc.2
    [ 1] 269 (0x10d) ldloc.s 5
    [ 2] 271 (0x10f) unaligned. 1stind.i4

STMT00043 ( ??? ... ??? )
               [000144] UA-XG------                         *  STOREIND  int   
               [000142] -----------                         +--*  LCL_VAR   byref  V06 loc2         
               [000143] -----------                         \--*  LCL_VAR   int    V09 loc5         

    [ 0] 275 (0x113) nop
    [ 0] 276 (0x114) nop
    [ 0] 277 (0x115) ldloc.s 7
    [ 1] 279 (0x117) unaligned. 1ldind.i4
    [ 1] 283 (0x11b) stloc.s 9

STMT00044 ( ??? ... ??? )
               [000147] DA-XG------                         *  STORE_LCL_VAR int    V13 loc9         
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7         

    [ 0] 285 (0x11d) ldloc.s 6
    [ 1] 287 (0x11f) ldloc.s 9
    [ 2] 289 (0x121) unaligned. 1stind.i4

STMT00045 ( ??? ... ??? )
               [000150] UA-XG------                         *  STOREIND  int   
               [000148] -----------                         +--*  LCL_VAR   byref  V10 loc6         
               [000149] -----------                         \--*  LCL_VAR   int    V13 loc9         

    [ 0] 293 (0x125) nop
    [ 0] 294 (0x126) nop
    [ 0] 295 (0x127) ldloc.s 11
    [ 1] 297 (0x129) unaligned. 1ldind.i4
    [ 1] 301 (0x12d) stloc.s 13

STMT00046 ( ??? ... ??? )
               [000153] DA-XG------                         *  STORE_LCL_VAR int    V17 loc13        
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11        

    [ 0] 303 (0x12f) ldloc.s 10
    [ 1] 305 (0x131) ldloc.s 13
    [ 2] 307 (0x133) unaligned. 1stind.i4

STMT00047 ( ??? ... ??? )
               [000156] UA-XG------                         *  STOREIND  int   
               [000154] -----------                         +--*  LCL_VAR   byref  V14 loc10        
               [000155] -----------                         \--*  LCL_VAR   int    V17 loc13        

    [ 0] 311 (0x137) nop
    [ 0] 312 (0x138) nop
    [ 0] 313 (0x139) ldloc.s 15
    [ 1] 315 (0x13b) unaligned. 1ldobj 02000003
    [ 1] 323 (0x143) stloc.s 17

STMT00048 ( ??? ... ??? )
               [000159] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15        

    [ 0] 325 (0x145) ldloc.s 14
    [ 1] 327 (0x147) ldloc.s 17
    [ 2] 329 (0x149) unaligned. 1stobj 02000004

STMT00049 ( ??? ... ??? )
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----------                         +--*  LCL_VAR   byref  V18 loc14        
               [000161] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        

    [ 0] 337 (0x151) nop
    [ 0] 338 (0x152) nop
    [ 0] 339 (0x153) ldloc.s 19
    [ 1] 341 (0x155) call 06000006
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

CheckCanInline: fetching method info for inline candidate <unknown method> -- context 00007FFF6EFE56A1
Class context: <unknown class>
INLINER: during 'impMarkInlineCandidate' result 'CheckCanInline Success' reason 'CheckCanInline Success' for '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)' calling '<unknown method>'
INLINER: during 'impMarkInlineCandidate' result 'CheckCanInline Success' reason 'CheckCanInline Success'


STMT00050 ( ??? ... ??? )
               [000164] I-C-G------                         *  CALL      ref    <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000163] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

    [ 1] 346 (0x15a) stloc.s 20

STMT00051 ( ??? ... ??? )
               [000166] DAC--------                         *  STORE_LCL_VAR ref    V24 loc20        
               [000165] --C--------                         \--*  RET_EXPR  ref   (for [000164])

    [ 0] 348 (0x15c) ldloc.s 18
    [ 1] 350 (0x15e) ldloc.s 20
    [ 2] 352 (0x160) unaligned. 1stind.ref

STMT00052 ( ??? ... ??? )
               [000169] UA-XG------                         *  STOREIND  ref   
               [000167] -----------                         +--*  LCL_VAR   byref  V22 loc18        
               [000168] -----------                         \--*  LCL_VAR   ref    V24 loc20        

    [ 0] 356 (0x164) nop
    [ 0] 357 (0x165) ret

STMT00053 ( ??? ... ??? )
               [000170] -----------                         *  RETURN    void  

Importing BB13 (PC=130) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 0] 130 (0x082) ldarg.2
    [ 1] 131 (0x083) ldc.i4.2 2
    [ 2] 132 (0x084) beq

STMT00054 ( ??? ... ??? )
               [000174] -----------                         *  JTRUE     void  
               [000173] -----------                         \--*  EQ        int   
               [000171] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----------                            \--*  CNS_INT   int    2

impImportBlockPending for BB14

impImportBlockPending for BB20

Importing BB14 (PC=137) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 0] 137 (0x089) nop
    [ 0] 138 (0x08a) ldc.i4.0 0
    [ 1] 139 (0x08b) stloc.0

STMT00055 ( ??? ... ??? )
               [000176] DA---------                         *  STORE_LCL_VAR int    V04 loc0         
               [000175] -----------                         \--*  CNS_INT   int    0

impImportBlockPending for BB15

Importing BB10 (PC=101) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 1] 101 (0x065) ldc.i4.0 0
    [ 2] 102 (0x066) add
Spilling stack entries into temps

impImportBlockPending for BB11

Importing BB08 (PC=077) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 1]  77 (0x04d) ldc.i4.s 24
    [ 2]  79 (0x04f) add
Spilling stack entries into temps


STMT00056 ( ??? ... ??? )
               [000182] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----------                         \--*  ADD       byref 
               [000053] -----------                            +--*  LCL_VAR   byref  V29 tmp4         
               [000180] -----------                            \--*  CNS_INT   long   24

impImportBlockPending for BB09

Importing BB06 (PC=054) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 1]  54 (0x036) ldc.i4.s 16
    [ 2]  56 (0x038) add
Spilling stack entries into temps


STMT00057 ( ??? ... ??? )
               [000186] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----------                         \--*  ADD       byref 
               [000038] -----------                            +--*  LCL_VAR   byref  V28 tmp3         
               [000184] -----------                            \--*  CNS_INT   long   16

impImportBlockPending for BB07

Importing BB04 (PC=031) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 1]  31 (0x01f) ldc.i4.s 12
    [ 2]  33 (0x021) add
Spilling stack entries into temps


STMT00058 ( ??? ... ??? )
               [000190] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----------                         \--*  ADD       byref 
               [000023] -----------                            +--*  LCL_VAR   byref  V27 tmp2         
               [000188] -----------                            \--*  CNS_INT   long   12

impImportBlockPending for BB05

Importing BB02 (PC=011) of '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)'
    [ 1]  11 (0x00b) ldc.i4.8 8
    [ 2]  12 (0x00c) add
Spilling stack entries into temps


STMT00059 ( ??? ... ??? )
               [000194] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----------                         \--*  ADD       byref 
               [000009] -----------                            +--*  LCL_VAR   byref  V26 tmp1         
               [000192] -----------                            \--*  CNS_INT   long   8

impImportBlockPending for BB03

After impImport() added blocks for try,catch,finally
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB20(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB20(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB20            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0018]  0                             0      0 [166..167)                           (return)                     IBC rare
BB20 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB21(0.52)   ( cond )                     i IBC bwd bwd-src
BB21 [0020]  1       BB20                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

** Note: root method IL was partially imported -- imported 382 of 385 bytes of method IL

*************** Finishing PHASE Importation
Trees after Importation

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB20(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB20(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB20            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0018]  0                             0      0 [166..167)                           (return)                     IBC rare
BB20 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB21(0.52)   ( cond )                     i IBC bwd bwd-src
BB21 [0020]  1       BB20                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----------                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----------                         *  JTRUE     void  
               [000005] -----------                         \--*  EQ        int   
               [000003] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----------                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----------                         \--*  ADD       byref 
               [000009] -----------                            +--*  LCL_VAR   byref  V26 tmp1         
               [000192] -----------                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---------                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----------                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---------                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----------                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----------                         *  JTRUE     void  
               [000019] -----------                         \--*  EQ        int   
               [000017] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----------                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----------                         \--*  ADD       byref 
               [000023] -----------                            +--*  LCL_VAR   byref  V27 tmp2         
               [000188] -----------                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---------                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----------                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---------                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----------                         \--*  ADD       long  
               [000026] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----------                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----------                         *  JTRUE     void  
               [000034] -----------                         \--*  EQ        int   
               [000032] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----------                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----------                         \--*  ADD       byref 
               [000038] -----------                            +--*  LCL_VAR   byref  V28 tmp3         
               [000184] -----------                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---------                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----------                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---------                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----------                         \--*  ADD       long  
               [000041] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----------                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----------                         *  JTRUE     void  
               [000049] -----------                         \--*  EQ        int   
               [000047] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----------                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----------                         \--*  ADD       byref 
               [000053] -----------                            +--*  LCL_VAR   byref  V29 tmp4         
               [000180] -----------                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..065) -> BB11(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB11}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---------                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----------                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---------                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----------                         \--*  ADD       long  
               [000056] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----------                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00018 ( ??? ... 0x060 )
               [000066] DA---------                         *  STORE_LCL_VAR byref  V30 tmp5         
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00017 ( ??? ... 0x060 )
               [000065] -----------                         *  JTRUE     void  
               [000064] -----------                         \--*  EQ        int   
               [000062] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000063] -----------                            \--*  CNS_INT   byref  0

------------ BB10 [0009] [065..067) -> BB11(1) (always), preds={BB09} succs={BB11}

------------ BB11 [0010] [067..07B) -> BB15(0.48),BB12(0.52) (cond), preds={BB09,BB10} succs={BB12,BB15}

***** BB11 [0010]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---------                         *  STORE_LCL_VAR byref  V22 loc18        
               [000069] -----------                         \--*  LCL_VAR   byref  V30 tmp5         

***** BB11 [0010]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---------                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----------                         \--*  ADD       long  
               [000071] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----------                            \--*  CNS_INT   long   48

***** BB11 [0010]
STMT00021 ( ??? ... 0x076 )
               [000079] -----------                         *  JTRUE     void  
               [000078] -----------                         \--*  EQ        int   
               [000076] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----------                            \--*  CNS_INT   int    0

------------ BB12 [0011] [07B..082) -> BB18(0.2),BB13(0.8) (cond), preds={BB11} succs={BB13,BB18}

***** BB12 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----------                         *  JTRUE     void  
               [000137] -----------                         \--*  EQ        int   
               [000135] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----------                            \--*  CNS_INT   int    1

------------ BB13 [0012] [082..089) -> BB20(0.48),BB14(0.52) (cond), preds={BB12} succs={BB14,BB20}

***** BB13 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----------                         *  JTRUE     void  
               [000173] -----------                         \--*  EQ        int   
               [000171] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----------                            \--*  CNS_INT   int    2

------------ BB14 [0013] [089..08C) -> BB15(1) (always), preds={BB13} succs={BB15}

***** BB14 [0013]
STMT00055 ( ??? ... 0x08B )
               [000176] DA---------                         *  STORE_LCL_VAR int    V04 loc0         
               [000175] -----------                         \--*  CNS_INT   int    0

------------ BB15 [0014] [08C..0F8) -> BB17(1) (always), preds={BB11,BB14} succs={BB17}

***** BB15 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000082] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -------N---                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00023 ( ??? ... 0x098 )
               [000088] DA-XG------                         *  STORE_LCL_VAR int    V08 loc4         
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2         

***** BB15 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG------                         *  STOREIND  int   
               [000089] -----------                         +--*  LCL_VAR   byref  V07 loc3         
               [000090] -----------                         \--*  LCL_VAR   int    V08 loc4         

***** BB15 [0014]
STMT00025 ( ??? ... 0x0A9 )
               [000094] DA-XG------                         *  STORE_LCL_VAR int    V12 loc8         
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6         

***** BB15 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG------                         *  STOREIND  int   
               [000095] -----------                         +--*  LCL_VAR   byref  V11 loc7         
               [000096] -----------                         \--*  LCL_VAR   int    V12 loc8         

***** BB15 [0014]
STMT00027 ( ??? ... 0x0BB )
               [000100] DA-XG------                         *  STORE_LCL_VAR int    V16 loc12        
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10        

***** BB15 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG------                         *  STOREIND  int   
               [000101] -----------                         +--*  LCL_VAR   byref  V15 loc11        
               [000102] -----------                         \--*  LCL_VAR   int    V16 loc12        

***** BB15 [0014]
STMT00029 ( ??? ... 0x0D1 )
               [000106] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14        

***** BB15 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----------                         +--*  LCL_VAR   byref  V19 loc15        
               [000108] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        

***** BB15 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG------                         *  STOREIND  short 
               [000110] -----------                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----------                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] I-CXG------                         *  CALL      void   <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000114] U--XG------ arg0                    +--*  IND       ref   
               [000113] -----------                         |  \--*  LCL_VAR   byref  V22 loc18        
               [000115] ----------- arg1                    \--*  LCL_VAR   byref  V23 loc19        

------------ BB16 [0015] [0F8..103) -> BB20(1) (cret), preds={} succs={BB20}

***** BB16 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---O-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----O-----                         \--*  CATCH_ARG ref   

***** BB16 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DAC-G------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --C-G------                         \--*  CALL      ref    <unknown method>
               [000119] ----------- arg0                       \--*  LCL_VAR   ref    V31 tmp6         

------------ BB17 [0016] [103..104) (return), preds={BB15,BB20} succs={}

***** BB17 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----------                         *  RETURN    void  

------------ BB18 [0017] [104..166) (return), preds={BB12} succs={}

***** BB18 [0017]
STMT00042 ( ??? ... 0x10A )
               [000141] DA-XG------                         *  STORE_LCL_VAR int    V09 loc5         
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3         

***** BB18 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG------                         *  STOREIND  int   
               [000142] -----------                         +--*  LCL_VAR   byref  V06 loc2         
               [000143] -----------                         \--*  LCL_VAR   int    V09 loc5         

***** BB18 [0017]
STMT00044 ( ??? ... 0x11B )
               [000147] DA-XG------                         *  STORE_LCL_VAR int    V13 loc9         
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7         

***** BB18 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG------                         *  STOREIND  int   
               [000148] -----------                         +--*  LCL_VAR   byref  V10 loc6         
               [000149] -----------                         \--*  LCL_VAR   int    V13 loc9         

***** BB18 [0017]
STMT00046 ( ??? ... 0x12D )
               [000153] DA-XG------                         *  STORE_LCL_VAR int    V17 loc13        
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11        

***** BB18 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG------                         *  STOREIND  int   
               [000154] -----------                         +--*  LCL_VAR   byref  V14 loc10        
               [000155] -----------                         \--*  LCL_VAR   int    V17 loc13        

***** BB18 [0017]
STMT00048 ( ??? ... 0x143 )
               [000159] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15        

***** BB18 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----------                         +--*  LCL_VAR   byref  V18 loc14        
               [000161] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        

***** BB18 [0017]
STMT00050 ( ??? ... 0x15A )
               [000164] I-C-G------                         *  CALL      ref    <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000163] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

***** BB18 [0017]
STMT00051 ( ??? ... ??? )
               [000166] DAC--------                         *  STORE_LCL_VAR ref    V24 loc20        
               [000165] --C--------                         \--*  RET_EXPR  ref   (for [000164])

***** BB18 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UA-XG------                         *  STOREIND  ref   
               [000167] -----------                         +--*  LCL_VAR   byref  V22 loc18        
               [000168] -----------                         \--*  LCL_VAR   ref    V24 loc20        

***** BB18 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----------                         *  RETURN    void  

------------ BB19 [0018] [166..167) (return), preds={} succs={}

------------ BB20 [0019] [167..17A) -> BB17(0.48),BB21(0.52) (cond), preds={BB13,BB16} succs={BB21,BB17}

***** BB20 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] I-C-G------                         *  CALL      void   <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000122] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

***** BB20 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000124] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -------N---                         \--*  CNS_INT   int    0

***** BB20 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----------                         *  JTRUE     void  
               [000130] -----------                         \--*  EQ        int   
               [000128] -----------                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----------                            \--*  CNS_INT   ref    null

------------ BB21 [0020] [17A..181) (return), preds={BB20} succs={}

***** BB21 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] I-C-G------                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this (exactContextHandle=0x00007FFF6D2DD581)
               [000132] ----------- this                    \--*  LCL_VAR   ref    V05 loc1         

***** BB21 [0020]
STMT00040 ( ??? ... ??? )
               [000134] -----------                         *  RETURN    void  

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xc)
Profile is self-consistent (21 profiled blocks, 0 unprofiled)

*************** Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Finishing PHASE Expand patchpoints [no changes]

*************** Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Finishing PHASE Indirect call transform [no changes]

*************** Starting PHASE Post-import
BB19 was not imported, marking as removed (0)

Renumbering the basic blocks for fgPostImportationCleanup

*************** Before renumbering the basic blocks

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB20(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB20(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB20            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB20 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB21(0.52)   ( cond )                     i IBC bwd bwd-src
BB21 [0020]  1       BB20                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)
Renumber BB20 to BB19
Renumber BB21 to BB20

*************** After renumbering the basic blocks

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)

New BlockSet epoch 1, # of blocks (including unused BB00): 21, bitset array size: 1 (short)

*************** Finishing PHASE Post-import
Trees after Post-import

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----------                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----------                         *  JTRUE     void  
               [000005] -----------                         \--*  EQ        int   
               [000003] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----------                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----------                         \--*  ADD       byref 
               [000009] -----------                            +--*  LCL_VAR   byref  V26 tmp1         
               [000192] -----------                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---------                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----------                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---------                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----------                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----------                         *  JTRUE     void  
               [000019] -----------                         \--*  EQ        int   
               [000017] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----------                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----------                         \--*  ADD       byref 
               [000023] -----------                            +--*  LCL_VAR   byref  V27 tmp2         
               [000188] -----------                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---------                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----------                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---------                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----------                         \--*  ADD       long  
               [000026] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----------                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----------                         *  JTRUE     void  
               [000034] -----------                         \--*  EQ        int   
               [000032] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----------                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----------                         \--*  ADD       byref 
               [000038] -----------                            +--*  LCL_VAR   byref  V28 tmp3         
               [000184] -----------                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---------                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----------                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---------                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----------                         \--*  ADD       long  
               [000041] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----------                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----------                         *  JTRUE     void  
               [000049] -----------                         \--*  EQ        int   
               [000047] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----------                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----------                         \--*  ADD       byref 
               [000053] -----------                            +--*  LCL_VAR   byref  V29 tmp4         
               [000180] -----------                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..065) -> BB11(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB11}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---------                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----------                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---------                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----------                         \--*  ADD       long  
               [000056] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----------                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00018 ( ??? ... 0x060 )
               [000066] DA---------                         *  STORE_LCL_VAR byref  V30 tmp5         
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00017 ( ??? ... 0x060 )
               [000065] -----------                         *  JTRUE     void  
               [000064] -----------                         \--*  EQ        int   
               [000062] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000063] -----------                            \--*  CNS_INT   byref  0

------------ BB10 [0009] [065..067) -> BB11(1) (always), preds={BB09} succs={BB11}

------------ BB11 [0010] [067..07B) -> BB15(0.48),BB12(0.52) (cond), preds={BB09,BB10} succs={BB12,BB15}

***** BB11 [0010]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---------                         *  STORE_LCL_VAR byref  V22 loc18        
               [000069] -----------                         \--*  LCL_VAR   byref  V30 tmp5         

***** BB11 [0010]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---------                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----------                         \--*  ADD       long  
               [000071] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----------                            \--*  CNS_INT   long   48

***** BB11 [0010]
STMT00021 ( ??? ... 0x076 )
               [000079] -----------                         *  JTRUE     void  
               [000078] -----------                         \--*  EQ        int   
               [000076] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----------                            \--*  CNS_INT   int    0

------------ BB12 [0011] [07B..082) -> BB18(0.2),BB13(0.8) (cond), preds={BB11} succs={BB13,BB18}

***** BB12 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----------                         *  JTRUE     void  
               [000137] -----------                         \--*  EQ        int   
               [000135] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----------                            \--*  CNS_INT   int    1

------------ BB13 [0012] [082..089) -> BB19(0.48),BB14(0.52) (cond), preds={BB12} succs={BB14,BB19}

***** BB13 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----------                         *  JTRUE     void  
               [000173] -----------                         \--*  EQ        int   
               [000171] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----------                            \--*  CNS_INT   int    2

------------ BB14 [0013] [089..08C) -> BB15(1) (always), preds={BB13} succs={BB15}

***** BB14 [0013]
STMT00055 ( ??? ... 0x08B )
               [000176] DA---------                         *  STORE_LCL_VAR int    V04 loc0         
               [000175] -----------                         \--*  CNS_INT   int    0

------------ BB15 [0014] [08C..0F8) -> BB17(1) (always), preds={BB11,BB14} succs={BB17}

***** BB15 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000082] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -------N---                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00023 ( ??? ... 0x098 )
               [000088] DA-XG------                         *  STORE_LCL_VAR int    V08 loc4         
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2         

***** BB15 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG------                         *  STOREIND  int   
               [000089] -----------                         +--*  LCL_VAR   byref  V07 loc3         
               [000090] -----------                         \--*  LCL_VAR   int    V08 loc4         

***** BB15 [0014]
STMT00025 ( ??? ... 0x0A9 )
               [000094] DA-XG------                         *  STORE_LCL_VAR int    V12 loc8         
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6         

***** BB15 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG------                         *  STOREIND  int   
               [000095] -----------                         +--*  LCL_VAR   byref  V11 loc7         
               [000096] -----------                         \--*  LCL_VAR   int    V12 loc8         

***** BB15 [0014]
STMT00027 ( ??? ... 0x0BB )
               [000100] DA-XG------                         *  STORE_LCL_VAR int    V16 loc12        
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10        

***** BB15 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG------                         *  STOREIND  int   
               [000101] -----------                         +--*  LCL_VAR   byref  V15 loc11        
               [000102] -----------                         \--*  LCL_VAR   int    V16 loc12        

***** BB15 [0014]
STMT00029 ( ??? ... 0x0D1 )
               [000106] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14        

***** BB15 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----------                         +--*  LCL_VAR   byref  V19 loc15        
               [000108] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        

***** BB15 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG------                         *  STOREIND  short 
               [000110] -----------                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----------                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] I-CXG------                         *  CALL      void   <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000114] U--XG------ arg0                    +--*  IND       ref   
               [000113] -----------                         |  \--*  LCL_VAR   byref  V22 loc18        
               [000115] ----------- arg1                    \--*  LCL_VAR   byref  V23 loc19        

------------ BB16 [0015] [0F8..103) -> BB19(1) (cret), preds={} succs={BB19}

***** BB16 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---O-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----O-----                         \--*  CATCH_ARG ref   

***** BB16 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DAC-G------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --C-G------                         \--*  CALL      ref    <unknown method>
               [000119] ----------- arg0                       \--*  LCL_VAR   ref    V31 tmp6         

------------ BB17 [0016] [103..104) (return), preds={BB15,BB19} succs={}

***** BB17 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----------                         *  RETURN    void  

------------ BB18 [0017] [104..166) (return), preds={BB12} succs={}

***** BB18 [0017]
STMT00042 ( ??? ... 0x10A )
               [000141] DA-XG------                         *  STORE_LCL_VAR int    V09 loc5         
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3         

***** BB18 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG------                         *  STOREIND  int   
               [000142] -----------                         +--*  LCL_VAR   byref  V06 loc2         
               [000143] -----------                         \--*  LCL_VAR   int    V09 loc5         

***** BB18 [0017]
STMT00044 ( ??? ... 0x11B )
               [000147] DA-XG------                         *  STORE_LCL_VAR int    V13 loc9         
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7         

***** BB18 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG------                         *  STOREIND  int   
               [000148] -----------                         +--*  LCL_VAR   byref  V10 loc6         
               [000149] -----------                         \--*  LCL_VAR   int    V13 loc9         

***** BB18 [0017]
STMT00046 ( ??? ... 0x12D )
               [000153] DA-XG------                         *  STORE_LCL_VAR int    V17 loc13        
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11        

***** BB18 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG------                         *  STOREIND  int   
               [000154] -----------                         +--*  LCL_VAR   byref  V14 loc10        
               [000155] -----------                         \--*  LCL_VAR   int    V17 loc13        

***** BB18 [0017]
STMT00048 ( ??? ... 0x143 )
               [000159] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15        

***** BB18 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----------                         +--*  LCL_VAR   byref  V18 loc14        
               [000161] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        

***** BB18 [0017]
STMT00050 ( ??? ... 0x15A )
               [000164] I-C-G------                         *  CALL      ref    <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000163] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

***** BB18 [0017]
STMT00051 ( ??? ... ??? )
               [000166] DAC--------                         *  STORE_LCL_VAR ref    V24 loc20        
               [000165] --C--------                         \--*  RET_EXPR  ref   (for [000164])

***** BB18 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UA-XG------                         *  STOREIND  ref   
               [000167] -----------                         +--*  LCL_VAR   byref  V22 loc18        
               [000168] -----------                         \--*  LCL_VAR   ref    V24 loc20        

***** BB18 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----------                         *  RETURN    void  

------------ BB19 [0019] [167..17A) -> BB17(0.48),BB20(0.52) (cond), preds={BB13,BB16} succs={BB20,BB17}

***** BB19 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] I-C-G------                         *  CALL      void   <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000122] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

***** BB19 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000124] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -------N---                         \--*  CNS_INT   int    0

***** BB19 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----------                         *  JTRUE     void  
               [000130] -----------                         \--*  EQ        int   
               [000128] -----------                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----------                            \--*  CNS_INT   ref    null

------------ BB20 [0020] [17A..181) (return), preds={BB19} succs={}

***** BB20 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] I-C-G------                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this (exactContextHandle=0x00007FFF6D2DD581)
               [000132] ----------- this                    \--*  LCL_VAR   ref    V05 loc1         

***** BB20 [0020]
STMT00040 ( ??? ... ??? )
               [000134] -----------                         *  RETURN    void  

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xc)
Profile is self-consistent (20 profiled blocks, 0 unprofiled)

*************** Starting PHASE Morph - Init

New BlockSet epoch 2, # of blocks (including unused BB00): 21, bitset array size: 1 (short)

*************** Finishing PHASE Morph - Init [no changes]

*************** Starting PHASE Morph - Inlining
Expanding INLINE_CANDIDATE in statement STMT00032 in BB15:
STMT00032 ( ??? ... 0x0F3 )
               [000116] I-CXG------                         *  CALL      void   <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000114] U--XG------ arg0                    +--*  IND       ref   
               [000113] -----------                         |  \--*  LCL_VAR   byref  V22 loc18        
               [000115] ----------- arg1                    \--*  LCL_VAR   byref  V23 loc19        

Argument #0: has global refs has side effects
               [000114] U--XG------                         *  IND       ref   
               [000113] -----------                         \--*  LCL_VAR   byref  V22 loc18        


Argument #1: is a local var
               [000115] -----------                         *  LCL_VAR   byref  V23 loc19        

INLINER: during 'fgInline' result 'failed this call site' reason 'argument can't bash to int' for '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)' calling '<unknown method>'
INLINER: during 'fgInline' result 'failed this call site' reason 'argument can't bash to int'
INLINER: during 'fgNoteNonInlineCandidate' result 'failed this call site' reason 'within catch region' for '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)' calling '<unknown method>'
INLINER: during 'fgNoteNonInlineCandidate' result 'failed this call site' reason 'within catch region'
Expanding INLINE_CANDIDATE in statement STMT00050 in BB18:
STMT00050 ( ??? ... 0x15A )
               [000164] I-C-G------                         *  CALL      ref    <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000163] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

Argument #0: is a local var
               [000163] -----------                         *  LCL_VAR   byref  V23 loc19        

Inlining [000164] failed, so bashing STMT00050 to NOP
INLINER: during 'fgInline' result 'failed this call site' reason 'argument can't bash to int' for '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)' calling '<unknown method>'
INLINER: during 'fgInline' result 'failed this call site' reason 'argument can't bash to int'

Replacing the return expression placeholder [000165] with [000164]
               [000165] --C--------                         *  RET_EXPR  ref   (for [000164]) -> [000164]

Inserting the inline return expression
               [000164] --C-G------                         *  CALL      ref    <unknown method>
               [000163] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

Expanding INLINE_CANDIDATE in statement STMT00036 in BB19:
STMT00036 ( ??? ... 0x173 )
               [000123] I-C-G------                         *  CALL      void   <unknown method> (exactContextHandle=0x00007FFF6EFE56A1)
               [000122] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

Argument #0: is a local var
               [000122] -----------                         *  LCL_VAR   byref  V23 loc19        

INLINER: during 'fgInline' result 'failed this call site' reason 'argument can't bash to int' for '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)' calling '<unknown method>'
INLINER: during 'fgInline' result 'failed this call site' reason 'argument can't bash to int'
Expanding INLINE_CANDIDATE in statement STMT00039 in BB20:
STMT00039 ( ??? ... 0x180 )
               [000133] I-C-G------                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this (exactContextHandle=0x00007FFF6D2DD581)
               [000132] ----------- this                    \--*  LCL_VAR   ref    V05 loc1         
Note: candidate is implicit tail call
thisArg: is a local var
               [000132] -----------                         *  LCL_VAR   ref    V05 loc1         

INLINER: inlineInfo.tokenLookupContextHandle for System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this set to 0x00007FFF6D2DD581:

Invoking compiler for the inlinee method System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b 65 15 00 04    ldfld        0x4001565
IL_0006  02                ldarg.0     
IL_0007  7c 66 15 00 04    ldflda       0x4001566
IL_000c  6f 44 05 00 06    callvirt     0x6000544
IL_0011  02                ldarg.0     
IL_0012  7b 65 15 00 04    ldfld        0x4001565
IL_0017  7a                throw       

INLINER impTokenLookupContextHandle for System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this is 0x00007FFF6D2DD581.
*************** In compInitDebuggingInfo() for System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
*************** In fgFindBasicBlocks() for System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
weight= 31 : state 191 [ ldarg.0 -> ldfld ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 17 : state 110 [ ldflda ]
weight= 83 : state  99 [ callvirt ]
weight= 31 : state 191 [ ldarg.0 -> ldfld ]
weight=210 : state 108 [ throw ]

3 ldfld or stfld over arguments which are structs.  Multiplier increased to 1.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.
Inline candidate callsite is warm.  Multiplier increased to 6.
calleeNativeSizeEstimate=382
callsiteNativeSizeEstimate=85
benefit multiplier=6
threshold=510
Native estimate for function size is within threshold for inlining 38.2 <= 51 (multiplier = 6)
Jump targets:
  none
New Basic Block BB01 [0021] created.
BB01 [0021] [000..018)
Basic block list for 'System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this'

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0021]  1                             0    [000..018)                           (throw )                     rare
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return' for '(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)' calling 'System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this'
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return'
**************** Inline Tree

Inlines into 06000000 [via ExtendedDefaultPolicy] (dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref):
  [INL00 IL=0237 TR=000116 06000000] [FAILED: call site: argument can't bash to int] <unknown method>
  [INL00 IL=0248 TR=000120 06000000] [FAILED: call site: within catch region] <unknown method>
  [INL00 IL=0341 TR=000164 06000000] [FAILED: call site: argument can't bash to int] <unknown method>
  [INL00 IL=0361 TR=000123 06000000] [FAILED: call site: argument can't bash to int] <unknown method>
  [INL00 IL=0379 TR=000133 06000000] [FAILED: callee: does not return] System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
Budget: initialTime=1215, finalTime=1215, initialBudget=12150, currentBudget=12150
Budget: initialSize=8909, finalSize=8909

*************** Before renumbering the basic blocks

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)
=============== No blocks renumbered!

*************** Finishing PHASE Morph - Inlining
Trees after Morph - Inlining

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----------                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----------                         *  JTRUE     void  
               [000005] -----------                         \--*  EQ        int   
               [000003] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----------                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----------                         \--*  ADD       byref 
               [000009] -----------                            +--*  LCL_VAR   byref  V26 tmp1         
               [000192] -----------                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---------                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----------                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---------                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----------                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----------                         *  JTRUE     void  
               [000019] -----------                         \--*  EQ        int   
               [000017] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----------                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----------                         \--*  ADD       byref 
               [000023] -----------                            +--*  LCL_VAR   byref  V27 tmp2         
               [000188] -----------                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---------                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----------                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---------                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----------                         \--*  ADD       long  
               [000026] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----------                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----------                         *  JTRUE     void  
               [000034] -----------                         \--*  EQ        int   
               [000032] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----------                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----------                         \--*  ADD       byref 
               [000038] -----------                            +--*  LCL_VAR   byref  V28 tmp3         
               [000184] -----------                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---------                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----------                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---------                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----------                         \--*  ADD       long  
               [000041] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----------                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----------                         *  JTRUE     void  
               [000049] -----------                         \--*  EQ        int   
               [000047] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----------                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----------                         \--*  ADD       byref 
               [000053] -----------                            +--*  LCL_VAR   byref  V29 tmp4         
               [000180] -----------                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..065) -> BB11(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB11}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---------                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----------                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---------                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----------                         \--*  ADD       long  
               [000056] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----------                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00018 ( ??? ... 0x060 )
               [000066] DA---------                         *  STORE_LCL_VAR byref  V30 tmp5         
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00017 ( ??? ... 0x060 )
               [000065] -----------                         *  JTRUE     void  
               [000064] -----------                         \--*  EQ        int   
               [000062] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000063] -----------                            \--*  CNS_INT   byref  0

------------ BB10 [0009] [065..067) -> BB11(1) (always), preds={BB09} succs={BB11}

------------ BB11 [0010] [067..07B) -> BB15(0.48),BB12(0.52) (cond), preds={BB09,BB10} succs={BB12,BB15}

***** BB11 [0010]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---------                         *  STORE_LCL_VAR byref  V22 loc18        
               [000069] -----------                         \--*  LCL_VAR   byref  V30 tmp5         

***** BB11 [0010]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---------                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----------                         \--*  ADD       long  
               [000071] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----------                            \--*  CNS_INT   long   48

***** BB11 [0010]
STMT00021 ( ??? ... 0x076 )
               [000079] -----------                         *  JTRUE     void  
               [000078] -----------                         \--*  EQ        int   
               [000076] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----------                            \--*  CNS_INT   int    0

------------ BB12 [0011] [07B..082) -> BB18(0.2),BB13(0.8) (cond), preds={BB11} succs={BB13,BB18}

***** BB12 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----------                         *  JTRUE     void  
               [000137] -----------                         \--*  EQ        int   
               [000135] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----------                            \--*  CNS_INT   int    1

------------ BB13 [0012] [082..089) -> BB19(0.48),BB14(0.52) (cond), preds={BB12} succs={BB14,BB19}

***** BB13 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----------                         *  JTRUE     void  
               [000173] -----------                         \--*  EQ        int   
               [000171] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----------                            \--*  CNS_INT   int    2

------------ BB14 [0013] [089..08C) -> BB15(1) (always), preds={BB13} succs={BB15}

***** BB14 [0013]
STMT00055 ( ??? ... 0x08B )
               [000176] DA---------                         *  STORE_LCL_VAR int    V04 loc0         
               [000175] -----------                         \--*  CNS_INT   int    0

------------ BB15 [0014] [08C..0F8) -> BB17(1) (always), preds={BB11,BB14} succs={BB17}

***** BB15 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000082] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -------N---                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00023 ( ??? ... 0x098 )
               [000088] DA-XG------                         *  STORE_LCL_VAR int    V08 loc4         
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2         

***** BB15 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG------                         *  STOREIND  int   
               [000089] -----------                         +--*  LCL_VAR   byref  V07 loc3         
               [000090] -----------                         \--*  LCL_VAR   int    V08 loc4         

***** BB15 [0014]
STMT00025 ( ??? ... 0x0A9 )
               [000094] DA-XG------                         *  STORE_LCL_VAR int    V12 loc8         
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6         

***** BB15 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG------                         *  STOREIND  int   
               [000095] -----------                         +--*  LCL_VAR   byref  V11 loc7         
               [000096] -----------                         \--*  LCL_VAR   int    V12 loc8         

***** BB15 [0014]
STMT00027 ( ??? ... 0x0BB )
               [000100] DA-XG------                         *  STORE_LCL_VAR int    V16 loc12        
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10        

***** BB15 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG------                         *  STOREIND  int   
               [000101] -----------                         +--*  LCL_VAR   byref  V15 loc11        
               [000102] -----------                         \--*  LCL_VAR   int    V16 loc12        

***** BB15 [0014]
STMT00029 ( ??? ... 0x0D1 )
               [000106] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14        

***** BB15 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----------                         +--*  LCL_VAR   byref  V19 loc15        
               [000108] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        

***** BB15 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG------                         *  STOREIND  short 
               [000110] -----------                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----------                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG------                         *  CALL      void   <unknown method>
               [000114] U--XG------ arg0                    +--*  IND       ref   
               [000113] -----------                         |  \--*  LCL_VAR   byref  V22 loc18        
               [000115] ----------- arg1                    \--*  LCL_VAR   byref  V23 loc19        

------------ BB16 [0015] [0F8..103) -> BB19(1) (cret), preds={} succs={BB19}

***** BB16 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---O-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----O-----                         \--*  CATCH_ARG ref   

***** BB16 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DAC-G------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --C-G------                         \--*  CALL      ref    <unknown method>
               [000119] ----------- arg0                       \--*  LCL_VAR   ref    V31 tmp6         

------------ BB17 [0016] [103..104) (return), preds={BB15,BB19} succs={}

***** BB17 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----------                         *  RETURN    void  

------------ BB18 [0017] [104..166) (return), preds={BB12} succs={}

***** BB18 [0017]
STMT00042 ( ??? ... 0x10A )
               [000141] DA-XG------                         *  STORE_LCL_VAR int    V09 loc5         
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3         

***** BB18 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG------                         *  STOREIND  int   
               [000142] -----------                         +--*  LCL_VAR   byref  V06 loc2         
               [000143] -----------                         \--*  LCL_VAR   int    V09 loc5         

***** BB18 [0017]
STMT00044 ( ??? ... 0x11B )
               [000147] DA-XG------                         *  STORE_LCL_VAR int    V13 loc9         
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7         

***** BB18 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG------                         *  STOREIND  int   
               [000148] -----------                         +--*  LCL_VAR   byref  V10 loc6         
               [000149] -----------                         \--*  LCL_VAR   int    V13 loc9         

***** BB18 [0017]
STMT00046 ( ??? ... 0x12D )
               [000153] DA-XG------                         *  STORE_LCL_VAR int    V17 loc13        
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11        

***** BB18 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG------                         *  STOREIND  int   
               [000154] -----------                         +--*  LCL_VAR   byref  V14 loc10        
               [000155] -----------                         \--*  LCL_VAR   int    V17 loc13        

***** BB18 [0017]
STMT00048 ( ??? ... 0x143 )
               [000159] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15        

***** BB18 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----------                         +--*  LCL_VAR   byref  V18 loc14        
               [000161] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        

***** BB18 [0017]
STMT00051 ( ??? ... ??? )
               [000166] DAC--------                         *  STORE_LCL_VAR ref    V24 loc20        
               [000164] --C-G------                         \--*  CALL      ref    <unknown method>
               [000163] ----------- arg0                       \--*  LCL_VAR   byref  V23 loc19        

***** BB18 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UA-XG------                         *  STOREIND  ref   
               [000167] -----------                         +--*  LCL_VAR   byref  V22 loc18        
               [000168] -----------                         \--*  LCL_VAR   ref    V24 loc20        

***** BB18 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----------                         *  RETURN    void  

------------ BB19 [0019] [167..17A) -> BB17(0.48),BB20(0.52) (cond), preds={BB13,BB16} succs={BB20,BB17}

***** BB19 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --C-G------                         *  CALL      void   <unknown method>
               [000122] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

***** BB19 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000124] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -------N---                         \--*  CNS_INT   int    0

***** BB19 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----------                         *  JTRUE     void  
               [000130] -----------                         \--*  EQ        int   
               [000128] -----------                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----------                            \--*  CNS_INT   ref    null

------------ BB20 [0020] [17A..181) (return), preds={BB19} succs={}

***** BB20 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --C-G------                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] ----------- this                    \--*  LCL_VAR   ref    V05 loc1         

***** BB20 [0020]
STMT00040 ( ??? ... ??? )
               [000134] -----------                         *  RETURN    void  

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xc)
Profile is self-consistent (20 profiled blocks, 0 unprofiled)

*************** Starting PHASE Allocate Objects
no newobjs in this method; punting

*************** Finishing PHASE Allocate Objects [no changes]

*************** Starting PHASE Morph - Add internal blocks

*************** After fgAddInternal()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)

*************** Finishing PHASE Morph - Add internal blocks [no changes]

*************** Starting PHASE Remove empty try

*************** In fgRemoveEmptyTry()

*************** Before fgRemoveEmptyTry()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)

EH#0 is not a try-finally; skipping.

*************** Finishing PHASE Remove empty try [no changes]

*************** Starting PHASE Remove empty finally

*************** Before fgRemoveEmptyFinally()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)

EH#0 is not a try-finally or try-fault; skipping.

*************** Finishing PHASE Remove empty finally [no changes]

*************** Starting PHASE Merge callfinally chains

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)

Method does not have any try-finallys; no merging.

*************** Finishing PHASE Merge callfinally chains [no changes]

*************** Starting PHASE Clone finally

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)

EH#0 is not a try-finally; skipping.

*************** Finishing PHASE Clone finally [no changes]

*************** Starting PHASE Head and tail merge

*************** Finishing PHASE Head and tail merge
Trees after Head and tail merge

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..065)-> BB11(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0009]  1       BB09                 52     52 [065..067)-> BB11(1)                 (always)                     i IBC
BB11 [0010]  2       BB09,BB10           100    100 [067..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB11                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB11,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----------                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----------                         *  JTRUE     void  
               [000005] -----------                         \--*  EQ        int   
               [000003] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----------                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----------                         \--*  ADD       byref 
               [000009] -----------                            +--*  LCL_VAR   byref  V26 tmp1         
               [000192] -----------                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---------                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----------                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---------                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----------                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----------                         *  JTRUE     void  
               [000019] -----------                         \--*  EQ        int   
               [000017] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----------                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----------                         \--*  ADD       byref 
               [000023] -----------                            +--*  LCL_VAR   byref  V27 tmp2         
               [000188] -----------                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---------                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----------                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---------                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----------                         \--*  ADD       long  
               [000026] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----------                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----------                         *  JTRUE     void  
               [000034] -----------                         \--*  EQ        int   
               [000032] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----------                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----------                         \--*  ADD       byref 
               [000038] -----------                            +--*  LCL_VAR   byref  V28 tmp3         
               [000184] -----------                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---------                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----------                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---------                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----------                         \--*  ADD       long  
               [000041] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----------                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----------                         *  JTRUE     void  
               [000049] -----------                         \--*  EQ        int   
               [000047] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----------                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----------                         \--*  ADD       byref 
               [000053] -----------                            +--*  LCL_VAR   byref  V29 tmp4         
               [000180] -----------                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..065) -> BB11(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB11}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---------                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----------                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---------                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----------                         \--*  ADD       long  
               [000056] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----------                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00018 ( ??? ... 0x060 )
               [000066] DA---------                         *  STORE_LCL_VAR byref  V30 tmp5         
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00017 ( ??? ... 0x060 )
               [000065] -----------                         *  JTRUE     void  
               [000064] -----------                         \--*  EQ        int   
               [000062] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000063] -----------                            \--*  CNS_INT   byref  0

------------ BB10 [0009] [065..067) -> BB11(1) (always), preds={BB09} succs={BB11}

------------ BB11 [0010] [067..07B) -> BB15(0.48),BB12(0.52) (cond), preds={BB09,BB10} succs={BB12,BB15}

***** BB11 [0010]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---------                         *  STORE_LCL_VAR byref  V22 loc18        
               [000069] -----------                         \--*  LCL_VAR   byref  V30 tmp5         

***** BB11 [0010]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---------                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----------                         \--*  ADD       long  
               [000071] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----------                            \--*  CNS_INT   long   48

***** BB11 [0010]
STMT00021 ( ??? ... 0x076 )
               [000079] -----------                         *  JTRUE     void  
               [000078] -----------                         \--*  EQ        int   
               [000076] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----------                            \--*  CNS_INT   int    0

------------ BB12 [0011] [07B..082) -> BB18(0.2),BB13(0.8) (cond), preds={BB11} succs={BB13,BB18}

***** BB12 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----------                         *  JTRUE     void  
               [000137] -----------                         \--*  EQ        int   
               [000135] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----------                            \--*  CNS_INT   int    1

------------ BB13 [0012] [082..089) -> BB19(0.48),BB14(0.52) (cond), preds={BB12} succs={BB14,BB19}

***** BB13 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----------                         *  JTRUE     void  
               [000173] -----------                         \--*  EQ        int   
               [000171] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----------                            \--*  CNS_INT   int    2

------------ BB14 [0013] [089..08C) -> BB15(1) (always), preds={BB13} succs={BB15}

***** BB14 [0013]
STMT00055 ( ??? ... 0x08B )
               [000176] DA---------                         *  STORE_LCL_VAR int    V04 loc0         
               [000175] -----------                         \--*  CNS_INT   int    0

------------ BB15 [0014] [08C..0F8) -> BB17(1) (always), preds={BB11,BB14} succs={BB17}

***** BB15 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000082] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -------N---                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00023 ( ??? ... 0x098 )
               [000088] DA-XG------                         *  STORE_LCL_VAR int    V08 loc4         
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2         

***** BB15 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG------                         *  STOREIND  int   
               [000089] -----------                         +--*  LCL_VAR   byref  V07 loc3         
               [000090] -----------                         \--*  LCL_VAR   int    V08 loc4         

***** BB15 [0014]
STMT00025 ( ??? ... 0x0A9 )
               [000094] DA-XG------                         *  STORE_LCL_VAR int    V12 loc8         
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6         

***** BB15 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG------                         *  STOREIND  int   
               [000095] -----------                         +--*  LCL_VAR   byref  V11 loc7         
               [000096] -----------                         \--*  LCL_VAR   int    V12 loc8         

***** BB15 [0014]
STMT00027 ( ??? ... 0x0BB )
               [000100] DA-XG------                         *  STORE_LCL_VAR int    V16 loc12        
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10        

***** BB15 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG------                         *  STOREIND  int   
               [000101] -----------                         +--*  LCL_VAR   byref  V15 loc11        
               [000102] -----------                         \--*  LCL_VAR   int    V16 loc12        

***** BB15 [0014]
STMT00029 ( ??? ... 0x0D1 )
               [000106] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14        

***** BB15 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----------                         +--*  LCL_VAR   byref  V19 loc15        
               [000108] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        

***** BB15 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG------                         *  STOREIND  short 
               [000110] -----------                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----------                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG------                         *  CALL      void   <unknown method>
               [000114] U--XG------ arg0                    +--*  IND       ref   
               [000113] -----------                         |  \--*  LCL_VAR   byref  V22 loc18        
               [000115] ----------- arg1                    \--*  LCL_VAR   byref  V23 loc19        

------------ BB16 [0015] [0F8..103) -> BB19(1) (cret), preds={} succs={BB19}

***** BB16 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---O-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----O-----                         \--*  CATCH_ARG ref   

***** BB16 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DAC-G------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --C-G------                         \--*  CALL      ref    <unknown method>
               [000119] ----------- arg0                       \--*  LCL_VAR   ref    V31 tmp6         

------------ BB17 [0016] [103..104) (return), preds={BB15,BB19} succs={}

***** BB17 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----------                         *  RETURN    void  

------------ BB18 [0017] [104..166) (return), preds={BB12} succs={}

***** BB18 [0017]
STMT00042 ( ??? ... 0x10A )
               [000141] DA-XG------                         *  STORE_LCL_VAR int    V09 loc5         
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3         

***** BB18 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG------                         *  STOREIND  int   
               [000142] -----------                         +--*  LCL_VAR   byref  V06 loc2         
               [000143] -----------                         \--*  LCL_VAR   int    V09 loc5         

***** BB18 [0017]
STMT00044 ( ??? ... 0x11B )
               [000147] DA-XG------                         *  STORE_LCL_VAR int    V13 loc9         
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7         

***** BB18 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG------                         *  STOREIND  int   
               [000148] -----------                         +--*  LCL_VAR   byref  V10 loc6         
               [000149] -----------                         \--*  LCL_VAR   int    V13 loc9         

***** BB18 [0017]
STMT00046 ( ??? ... 0x12D )
               [000153] DA-XG------                         *  STORE_LCL_VAR int    V17 loc13        
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11        

***** BB18 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG------                         *  STOREIND  int   
               [000154] -----------                         +--*  LCL_VAR   byref  V14 loc10        
               [000155] -----------                         \--*  LCL_VAR   int    V17 loc13        

***** BB18 [0017]
STMT00048 ( ??? ... 0x143 )
               [000159] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15        

***** BB18 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----------                         +--*  LCL_VAR   byref  V18 loc14        
               [000161] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        

***** BB18 [0017]
STMT00051 ( ??? ... ??? )
               [000166] DAC--------                         *  STORE_LCL_VAR ref    V24 loc20        
               [000164] --C-G------                         \--*  CALL      ref    <unknown method>
               [000163] ----------- arg0                       \--*  LCL_VAR   byref  V23 loc19        

***** BB18 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UA-XG------                         *  STOREIND  ref   
               [000167] -----------                         +--*  LCL_VAR   byref  V22 loc18        
               [000168] -----------                         \--*  LCL_VAR   ref    V24 loc20        

***** BB18 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----------                         *  RETURN    void  

------------ BB19 [0019] [167..17A) -> BB17(0.48),BB20(0.52) (cond), preds={BB13,BB16} succs={BB20,BB17}

***** BB19 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --C-G------                         *  CALL      void   <unknown method>
               [000122] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

***** BB19 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000124] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -------N---                         \--*  CNS_INT   int    0

***** BB19 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----------                         *  JTRUE     void  
               [000130] -----------                         \--*  EQ        int   
               [000128] -----------                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----------                            \--*  CNS_INT   ref    null

------------ BB20 [0020] [17A..181) (return), preds={BB19} succs={}

***** BB20 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --C-G------                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] ----------- this                    \--*  LCL_VAR   ref    V05 loc1         

***** BB20 [0020]
STMT00040 ( ??? ... ??? )
               [000134] -----------                         *  RETURN    void  

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Merge throw blocks

*************** In fgTailMergeThrows
Method does not have multiple noreturn calls.

*************** Finishing PHASE Merge throw blocks [no changes]

*************** Starting PHASE Update flow graph early pass

Compacting BB11 into BB10:
Second block has 1 other incoming edges
Block BB09 becoming a BBJ_ALWAYS to BB10 (jump target is the same whether the condition is true or false)

removing useless STMT00017 ( ??? ... 0x060 )
               [000065] -----------                         *  JTRUE     void  
               [000064] -----------                         \--*  EQ        int   
               [000062] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000063] -----------                            \--*  CNS_INT   byref  0
 from BB09
setting likelihood of BB09 -> BB10 from 0.52 to 1
*************** In fgDebugCheckBBlist

Compacting BB10 into BB09:
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Update flow graph early pass
Trees after Update flow graph early pass

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB09                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB09,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----------                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----------                         *  JTRUE     void  
               [000005] -----------                         \--*  EQ        int   
               [000003] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----------                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----------                         \--*  ADD       byref 
               [000009] -----------                            +--*  LCL_VAR   byref  V26 tmp1         
               [000192] -----------                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---------                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----------                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---------                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----------                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----------                         *  JTRUE     void  
               [000019] -----------                         \--*  EQ        int   
               [000017] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----------                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----------                         \--*  ADD       byref 
               [000023] -----------                            +--*  LCL_VAR   byref  V27 tmp2         
               [000188] -----------                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---------                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----------                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---------                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----------                         \--*  ADD       long  
               [000026] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----------                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----------                         *  JTRUE     void  
               [000034] -----------                         \--*  EQ        int   
               [000032] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----------                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----------                         \--*  ADD       byref 
               [000038] -----------                            +--*  LCL_VAR   byref  V28 tmp3         
               [000184] -----------                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---------                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----------                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---------                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----------                         \--*  ADD       long  
               [000041] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----------                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----------                         *  JTRUE     void  
               [000049] -----------                         \--*  EQ        int   
               [000047] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----------                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----------                         \--*  ADD       byref 
               [000053] -----------                            +--*  LCL_VAR   byref  V29 tmp4         
               [000180] -----------                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB15(0.48),BB12(0.52) (cond), preds={BB07,BB08} succs={BB12,BB15}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---------                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----------                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---------                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----------                         \--*  ADD       long  
               [000056] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----------                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00018 ( ??? ... 0x060 )
               [000066] DA---------                         *  STORE_LCL_VAR byref  V30 tmp5         
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---------                         *  STORE_LCL_VAR byref  V22 loc18        
               [000069] -----------                         \--*  LCL_VAR   byref  V30 tmp5         

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---------                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----------                         \--*  ADD       long  
               [000071] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----------                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
               [000079] -----------                         *  JTRUE     void  
               [000078] -----------                         \--*  EQ        int   
               [000076] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----------                            \--*  CNS_INT   int    0

------------ BB12 [0011] [07B..082) -> BB18(0.2),BB13(0.8) (cond), preds={BB09} succs={BB13,BB18}

***** BB12 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----------                         *  JTRUE     void  
               [000137] -----------                         \--*  EQ        int   
               [000135] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----------                            \--*  CNS_INT   int    1

------------ BB13 [0012] [082..089) -> BB19(0.48),BB14(0.52) (cond), preds={BB12} succs={BB14,BB19}

***** BB13 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----------                         *  JTRUE     void  
               [000173] -----------                         \--*  EQ        int   
               [000171] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----------                            \--*  CNS_INT   int    2

------------ BB14 [0013] [089..08C) -> BB15(1) (always), preds={BB13} succs={BB15}

***** BB14 [0013]
STMT00055 ( ??? ... 0x08B )
               [000176] DA---------                         *  STORE_LCL_VAR int    V04 loc0         
               [000175] -----------                         \--*  CNS_INT   int    0

------------ BB15 [0014] [08C..0F8) -> BB17(1) (always), preds={BB09,BB14} succs={BB17}

***** BB15 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000082] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -------N---                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00023 ( ??? ... 0x098 )
               [000088] DA-XG------                         *  STORE_LCL_VAR int    V08 loc4         
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2         

***** BB15 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG------                         *  STOREIND  int   
               [000089] -----------                         +--*  LCL_VAR   byref  V07 loc3         
               [000090] -----------                         \--*  LCL_VAR   int    V08 loc4         

***** BB15 [0014]
STMT00025 ( ??? ... 0x0A9 )
               [000094] DA-XG------                         *  STORE_LCL_VAR int    V12 loc8         
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6         

***** BB15 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG------                         *  STOREIND  int   
               [000095] -----------                         +--*  LCL_VAR   byref  V11 loc7         
               [000096] -----------                         \--*  LCL_VAR   int    V12 loc8         

***** BB15 [0014]
STMT00027 ( ??? ... 0x0BB )
               [000100] DA-XG------                         *  STORE_LCL_VAR int    V16 loc12        
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10        

***** BB15 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG------                         *  STOREIND  int   
               [000101] -----------                         +--*  LCL_VAR   byref  V15 loc11        
               [000102] -----------                         \--*  LCL_VAR   int    V16 loc12        

***** BB15 [0014]
STMT00029 ( ??? ... 0x0D1 )
               [000106] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14        

***** BB15 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----------                         +--*  LCL_VAR   byref  V19 loc15        
               [000108] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        

***** BB15 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG------                         *  STOREIND  short 
               [000110] -----------                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----------                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG------                         *  CALL      void   <unknown method>
               [000114] U--XG------ arg0                    +--*  IND       ref   
               [000113] -----------                         |  \--*  LCL_VAR   byref  V22 loc18        
               [000115] ----------- arg1                    \--*  LCL_VAR   byref  V23 loc19        

------------ BB16 [0015] [0F8..103) -> BB19(1) (cret), preds={} succs={BB19}

***** BB16 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---O-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----O-----                         \--*  CATCH_ARG ref   

***** BB16 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DAC-G------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --C-G------                         \--*  CALL      ref    <unknown method>
               [000119] ----------- arg0                       \--*  LCL_VAR   ref    V31 tmp6         

------------ BB17 [0016] [103..104) (return), preds={BB15,BB19} succs={}

***** BB17 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----------                         *  RETURN    void  

------------ BB18 [0017] [104..166) (return), preds={BB12} succs={}

***** BB18 [0017]
STMT00042 ( ??? ... 0x10A )
               [000141] DA-XG------                         *  STORE_LCL_VAR int    V09 loc5         
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3         

***** BB18 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG------                         *  STOREIND  int   
               [000142] -----------                         +--*  LCL_VAR   byref  V06 loc2         
               [000143] -----------                         \--*  LCL_VAR   int    V09 loc5         

***** BB18 [0017]
STMT00044 ( ??? ... 0x11B )
               [000147] DA-XG------                         *  STORE_LCL_VAR int    V13 loc9         
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7         

***** BB18 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG------                         *  STOREIND  int   
               [000148] -----------                         +--*  LCL_VAR   byref  V10 loc6         
               [000149] -----------                         \--*  LCL_VAR   int    V13 loc9         

***** BB18 [0017]
STMT00046 ( ??? ... 0x12D )
               [000153] DA-XG------                         *  STORE_LCL_VAR int    V17 loc13        
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11        

***** BB18 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG------                         *  STOREIND  int   
               [000154] -----------                         +--*  LCL_VAR   byref  V14 loc10        
               [000155] -----------                         \--*  LCL_VAR   int    V17 loc13        

***** BB18 [0017]
STMT00048 ( ??? ... 0x143 )
               [000159] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15        

***** BB18 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----------                         +--*  LCL_VAR   byref  V18 loc14        
               [000161] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        

***** BB18 [0017]
STMT00051 ( ??? ... ??? )
               [000166] DAC--------                         *  STORE_LCL_VAR ref    V24 loc20        
               [000164] --C-G------                         \--*  CALL      ref    <unknown method>
               [000163] ----------- arg0                       \--*  LCL_VAR   byref  V23 loc19        

***** BB18 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UA-XG------                         *  STOREIND  ref   
               [000167] -----------                         +--*  LCL_VAR   byref  V22 loc18        
               [000168] -----------                         \--*  LCL_VAR   ref    V24 loc20        

***** BB18 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----------                         *  RETURN    void  

------------ BB19 [0019] [167..17A) -> BB17(0.48),BB20(0.52) (cond), preds={BB13,BB16} succs={BB20,BB17}

***** BB19 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --C-G------                         *  CALL      void   <unknown method>
               [000122] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

***** BB19 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000124] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -------N---                         \--*  CNS_INT   int    0

***** BB19 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----------                         *  JTRUE     void  
               [000130] -----------                         \--*  EQ        int   
               [000128] -----------                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----------                            \--*  CNS_INT   ref    null

------------ BB20 [0020] [17A..181) (return), preds={BB19} succs={}

***** BB20 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --C-G------                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] ----------- this                    \--*  LCL_VAR   ref    V05 loc1         

***** BB20 [0020]
STMT00040 ( ??? ... ??? )
               [000134] -----------                         *  RETURN    void  

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Morph - Promote Structs

lvaTable before fgPromoteStructs
; Initial local variable assignments
;
;  V00 arg0            byref 
;  V01 arg1             long 
;  V02 arg2              int 
;  V03 arg3            byref 
;  V04 loc0              int 
;  V05 loc1              ref  class-hnd <System.Runtime.ExceptionServices.ExceptionDispatchInfo>
;  V06 loc2            byref 
;  V07 loc3            byref 
;  V08 loc4              int 
;  V09 loc5              int 
;  V10 loc6            byref 
;  V11 loc7            byref 
;  V12 loc8              int 
;  V13 loc9              int 
;  V14 loc10           byref 
;  V15 loc11           byref 
;  V16 loc12             int 
;  V17 loc13             int 
;  V18 loc14           byref 
;  V19 loc15           byref 
;  V20 loc16          struct <System.Data.OleDb.tagDBIDX, 32> <System.Data.OleDb.tagDBIDX>
;  V21 loc17          struct <System.Data.OleDb.tagDBIDX, 32> <System.Data.OleDb.tagDBIDX>
;  V22 loc18           byref 
;  V23 loc19           byref 
;  V24 loc20             ref  class-hnd <<unknown class>>
;  V25 OutArgs        struct <0> do-not-enreg[XS] addr-exposed "OutgoingArgSpace"
;  V26 tmp1            byref 
;  V27 tmp2            byref 
;  V28 tmp3            byref 
;  V29 tmp4            byref 
;  V30 tmp5            byref 
;  V31 tmp6              ref  class-hnd "impSpillSpecialSideEff" <<unknown class>>
  struct promotion of V25 is disabled because it has already been marked DNER

*************** Finishing PHASE Morph - Promote Structs [no changes]

*************** Starting PHASE Canonicalize entry

*************** Finishing PHASE Canonicalize entry [no changes]

*************** Starting PHASE DFS blocks and remove dead code

*************** Finishing PHASE DFS blocks and remove dead code [no changes]

*************** Starting PHASE Morph - Structs/AddrExp
LocalAddressVisitor visiting statement:
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----------                         \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00002 ( ??? ... 0x006 )
               [000007] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----------                         \--*  LCL_VAR   byref  V00 arg0         

LocalAddressVisitor visiting statement:
STMT00001 ( ??? ... 0x006 )
               [000006] -----------                         *  JTRUE     void  
               [000005] -----------                         \--*  EQ        int   
               [000003] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----------                            \--*  CNS_INT   byref  0

LocalAddressVisitor visiting statement:
STMT00059 ( ??? ... 0x00C )
               [000194] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----------                         \--*  ADD       byref 
               [000009] -----------                            +--*  LCL_VAR   byref  V26 tmp1         
               [000192] -----------                            \--*  CNS_INT   long   8

LocalAddressVisitor visiting statement:
STMT00003 ( ??? ... 0x00D )
               [000011] DA---------                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----------                         \--*  LCL_VAR   byref  V26 tmp1         

LocalAddressVisitor visiting statement:
STMT00004 ( ??? ... 0x013 )
               [000015] DA---------                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----------                         \--*  LCL_VAR   long   V01 arg1         

LocalAddressVisitor visiting statement:
STMT00006 ( ??? ... 0x01A )
               [000021] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----------                         \--*  LCL_VAR   byref  V00 arg0         

LocalAddressVisitor visiting statement:
STMT00005 ( ??? ... 0x01A )
               [000020] -----------                         *  JTRUE     void  
               [000019] -----------                         \--*  EQ        int   
               [000017] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----------                            \--*  CNS_INT   byref  0

LocalAddressVisitor visiting statement:
STMT00058 ( ??? ... 0x021 )
               [000190] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----------                         \--*  ADD       byref 
               [000023] -----------                            +--*  LCL_VAR   byref  V27 tmp2         
               [000188] -----------                            \--*  CNS_INT   long   12

LocalAddressVisitor visiting statement:
STMT00007 ( ??? ... 0x022 )
               [000025] DA---------                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----------                         \--*  LCL_VAR   byref  V27 tmp2         

LocalAddressVisitor visiting statement:
STMT00008 ( ??? ... 0x029 )
               [000030] DA---------                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----------                         \--*  ADD       long  
               [000026] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----------                            \--*  CNS_INT   long   4

LocalAddressVisitor visiting statement:
STMT00010 ( ??? ... 0x031 )
               [000036] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----------                         \--*  LCL_VAR   byref  V00 arg0         

LocalAddressVisitor visiting statement:
STMT00009 ( ??? ... 0x031 )
               [000035] -----------                         *  JTRUE     void  
               [000034] -----------                         \--*  EQ        int   
               [000032] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----------                            \--*  CNS_INT   byref  0

LocalAddressVisitor visiting statement:
STMT00057 ( ??? ... 0x038 )
               [000186] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----------                         \--*  ADD       byref 
               [000038] -----------                            +--*  LCL_VAR   byref  V28 tmp3         
               [000184] -----------                            \--*  CNS_INT   long   16

LocalAddressVisitor visiting statement:
STMT00011 ( ??? ... 0x039 )
               [000040] DA---------                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----------                         \--*  LCL_VAR   byref  V28 tmp3         

LocalAddressVisitor visiting statement:
STMT00012 ( ??? ... 0x040 )
               [000045] DA---------                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----------                         \--*  ADD       long  
               [000041] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----------                            \--*  CNS_INT   long   8

LocalAddressVisitor visiting statement:
STMT00014 ( ??? ... 0x048 )
               [000051] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----------                         \--*  LCL_VAR   byref  V00 arg0         

LocalAddressVisitor visiting statement:
STMT00013 ( ??? ... 0x048 )
               [000050] -----------                         *  JTRUE     void  
               [000049] -----------                         \--*  EQ        int   
               [000047] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----------                            \--*  CNS_INT   byref  0

LocalAddressVisitor visiting statement:
STMT00056 ( ??? ... 0x04F )
               [000182] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----------                         \--*  ADD       byref 
               [000053] -----------                            +--*  LCL_VAR   byref  V29 tmp4         
               [000180] -----------                            \--*  CNS_INT   long   24

LocalAddressVisitor visiting statement:
STMT00015 ( ??? ... 0x050 )
               [000055] DA---------                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----------                         \--*  LCL_VAR   byref  V29 tmp4         

LocalAddressVisitor visiting statement:
STMT00016 ( ??? ... 0x058 )
               [000060] DA---------                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----------                         \--*  ADD       long  
               [000056] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----------                            \--*  CNS_INT   long   16

LocalAddressVisitor visiting statement:
STMT00018 ( ??? ... 0x060 )
               [000066] DA---------                         *  STORE_LCL_VAR byref  V30 tmp5         
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0         

LocalAddressVisitor visiting statement:
STMT00019 ( ??? ... 0x067 )
               [000070] DA---------                         *  STORE_LCL_VAR byref  V22 loc18        
               [000069] -----------                         \--*  LCL_VAR   byref  V30 tmp5         

LocalAddressVisitor visiting statement:
STMT00020 ( ??? ... 0x06F )
               [000075] DA---------                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----------                         \--*  ADD       long  
               [000071] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----------                            \--*  CNS_INT   long   48

LocalAddressVisitor visiting statement:
STMT00021 ( ??? ... 0x076 )
               [000079] -----------                         *  JTRUE     void  
               [000078] -----------                         \--*  EQ        int   
               [000076] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----------                            \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00041 ( ??? ... 0x07D )
               [000138] -----------                         *  JTRUE     void  
               [000137] -----------                         \--*  EQ        int   
               [000135] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----------                            \--*  CNS_INT   int    1

LocalAddressVisitor visiting statement:
STMT00042 ( ??? ... 0x10A )
               [000141] DA-XG------                         *  STORE_LCL_VAR int    V09 loc5         
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3         

LocalAddressVisitor visiting statement:
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG------                         *  STOREIND  int   
               [000142] -----------                         +--*  LCL_VAR   byref  V06 loc2         
               [000143] -----------                         \--*  LCL_VAR   int    V09 loc5         

LocalAddressVisitor visiting statement:
STMT00044 ( ??? ... 0x11B )
               [000147] DA-XG------                         *  STORE_LCL_VAR int    V13 loc9         
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7         

LocalAddressVisitor visiting statement:
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG------                         *  STOREIND  int   
               [000148] -----------                         +--*  LCL_VAR   byref  V10 loc6         
               [000149] -----------                         \--*  LCL_VAR   int    V13 loc9         

LocalAddressVisitor visiting statement:
STMT00046 ( ??? ... 0x12D )
               [000153] DA-XG------                         *  STORE_LCL_VAR int    V17 loc13        
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11        

LocalAddressVisitor visiting statement:
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG------                         *  STOREIND  int   
               [000154] -----------                         +--*  LCL_VAR   byref  V14 loc10        
               [000155] -----------                         \--*  LCL_VAR   int    V17 loc13        

LocalAddressVisitor visiting statement:
STMT00048 ( ??? ... 0x143 )
               [000159] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15        

LocalAddressVisitor visiting statement:
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----------                         +--*  LCL_VAR   byref  V18 loc14        
               [000161] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        

LocalAddressVisitor visiting statement:
STMT00051 ( ??? ... ??? )
               [000166] DAC--------                         *  STORE_LCL_VAR ref    V24 loc20        
               [000164] --C-G------                         \--*  CALL      ref    <unknown method>
               [000163] ----------- arg0                       \--*  LCL_VAR   byref  V23 loc19        

LocalAddressVisitor visiting statement:
STMT00052 ( ??? ... 0x163 )
               [000169] UA-XG------                         *  STOREIND  ref   
               [000167] -----------                         +--*  LCL_VAR   byref  V22 loc18        
               [000168] -----------                         \--*  LCL_VAR   ref    V24 loc20        

LocalAddressVisitor visiting statement:
STMT00053 ( ??? ... 0x165 )
               [000170] -----------                         *  RETURN    void  

LocalAddressVisitor visiting statement:
STMT00054 ( ??? ... 0x084 )
               [000174] -----------                         *  JTRUE     void  
               [000173] -----------                         \--*  EQ        int   
               [000171] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----------                            \--*  CNS_INT   int    2

LocalAddressVisitor visiting statement:
STMT00055 ( ??? ... 0x08B )
               [000176] DA---------                         *  STORE_LCL_VAR int    V04 loc0         
               [000175] -----------                         \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000082] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -------N---                         \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00023 ( ??? ... 0x098 )
               [000088] DA-XG------                         *  STORE_LCL_VAR int    V08 loc4         
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2         

LocalAddressVisitor visiting statement:
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG------                         *  STOREIND  int   
               [000089] -----------                         +--*  LCL_VAR   byref  V07 loc3         
               [000090] -----------                         \--*  LCL_VAR   int    V08 loc4         

LocalAddressVisitor visiting statement:
STMT00025 ( ??? ... 0x0A9 )
               [000094] DA-XG------                         *  STORE_LCL_VAR int    V12 loc8         
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6         

LocalAddressVisitor visiting statement:
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG------                         *  STOREIND  int   
               [000095] -----------                         +--*  LCL_VAR   byref  V11 loc7         
               [000096] -----------                         \--*  LCL_VAR   int    V12 loc8         

LocalAddressVisitor visiting statement:
STMT00027 ( ??? ... 0x0BB )
               [000100] DA-XG------                         *  STORE_LCL_VAR int    V16 loc12        
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10        

LocalAddressVisitor visiting statement:
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG------                         *  STOREIND  int   
               [000101] -----------                         +--*  LCL_VAR   byref  V15 loc11        
               [000102] -----------                         \--*  LCL_VAR   int    V16 loc12        

LocalAddressVisitor visiting statement:
STMT00029 ( ??? ... 0x0D1 )
               [000106] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14        

LocalAddressVisitor visiting statement:
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----------                         +--*  LCL_VAR   byref  V19 loc15        
               [000108] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        

LocalAddressVisitor visiting statement:
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG------                         *  STOREIND  short 
               [000110] -----------                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----------                         \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG------                         *  CALL      void   <unknown method>
               [000114] U--XG------ arg0                    +--*  IND       ref   
               [000113] -----------                         |  \--*  LCL_VAR   byref  V22 loc18        
               [000115] ----------- arg1                    \--*  LCL_VAR   byref  V23 loc19        

LocalAddressVisitor visiting statement:
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---O-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----O-----                         \--*  CATCH_ARG ref   

LocalAddressVisitor visiting statement:
STMT00035 ( ??? ... ??? )
               [000121] DAC-G------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --C-G------                         \--*  CALL      ref    <unknown method>
               [000119] ----------- arg0                       \--*  LCL_VAR   ref    V31 tmp6         

LocalAddressVisitor visiting statement:
STMT00036 ( ??? ... 0x173 )
               [000123] --C-G------                         *  CALL      void   <unknown method>
               [000122] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19        

LocalAddressVisitor visiting statement:
STMT00037 ( ??? ... ??? )
               [000127] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000124] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -------N---                         \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00038 ( ??? ... 0x175 )
               [000131] -----------                         *  JTRUE     void  
               [000130] -----------                         \--*  EQ        int   
               [000128] -----------                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----------                            \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00039 ( ??? ... 0x180 )
               [000133] --C-G------                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] ----------- this                    \--*  LCL_VAR   ref    V05 loc1         

LocalAddressVisitor visiting statement:
STMT00040 ( ??? ... ??? )
               [000134] -----------                         *  RETURN    void  

LocalAddressVisitor visiting statement:
STMT00033 ( ??? ... 0x103 )
               [000117] -----------                         *  RETURN    void  


*************** Finishing PHASE Morph - Structs/AddrExp [no changes]

*************** Starting PHASE Early liveness

Local V20 should not be enregistered because: struct size does not match reg size

Local V21 should not be enregistered because: struct size does not match reg size

Local V25 should not be enregistered because: struct size does not match reg size
Tracked variable (30 out of 32) table:
V00 arg0          [ byref]: refCnt =    9, refCntWtd =   0   
V01 arg1          [  long]: refCnt =    7, refCntWtd =   0   
V02 arg2          [   int]: refCnt =    3, refCntWtd =   0   
V04 loc0          [   int]: refCnt =    1, refCntWtd =   0   
V05 loc1          [   ref]: refCnt =    4, refCntWtd =   0   
V06 loc2          [ byref]: refCnt =    3, refCntWtd =   0   
V07 loc3          [ byref]: refCnt =    3, refCntWtd =   0   
V08 loc4          [   int]: refCnt =    2, refCntWtd =   0   
V09 loc5          [   int]: refCnt =    2, refCntWtd =   0   
V10 loc6          [ byref]: refCnt =    3, refCntWtd =   0   
V11 loc7          [ byref]: refCnt =    3, refCntWtd =   0   
V12 loc8          [   int]: refCnt =    2, refCntWtd =   0   
V13 loc9          [   int]: refCnt =    2, refCntWtd =   0   
V14 loc10         [ byref]: refCnt =    3, refCntWtd =   0   
V15 loc11         [ byref]: refCnt =    3, refCntWtd =   0   
V16 loc12         [   int]: refCnt =    2, refCntWtd =   0   
V17 loc13         [   int]: refCnt =    2, refCntWtd =   0   
V18 loc14         [ byref]: refCnt =    3, refCntWtd =   0   
V19 loc15         [ byref]: refCnt =    3, refCntWtd =   0   
V20 loc16         [struct]: refCnt =    2, refCntWtd =   0   
V21 loc17         [struct]: refCnt =    2, refCntWtd =   0   
V22 loc18         [ byref]: refCnt =    3, refCntWtd =   0   
V23 loc19         [ byref]: refCnt =    5, refCntWtd =   0   
V24 loc20         [   ref]: refCnt =    2, refCntWtd =   0   
V26 tmp1          [ byref]: refCnt =    4, refCntWtd =   0   
V27 tmp2          [ byref]: refCnt =    4, refCntWtd =   0   
V28 tmp3          [ byref]: refCnt =    4, refCntWtd =   0   
V29 tmp4          [ byref]: refCnt =    4, refCntWtd =   0   
V30 tmp5          [ byref]: refCnt =    2, refCntWtd =   0   
V31 tmp6          [   ref]: refCnt =    2, refCntWtd =   0   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(1)={V00        }
     DEF(2)={    V05 V26}

BB02 USE(1)={V26}
     DEF(1)={V26}

BB03 USE(3)={V00 V01         V26    }
     DEF(3)={        V06 V07     V27}

BB04 USE(1)={V27}
     DEF(1)={V27}

BB05 USE(3)={V00 V01         V27    }
     DEF(3)={        V10 V11     V28}

BB06 USE(1)={V28}
     DEF(1)={V28}

BB07 USE(3)={V00 V01         V28    }
     DEF(3)={        V14 V15     V29}

BB08 USE(1)={V29}
     DEF(1)={V29}

BB09 USE(4)={V00 V01 V02                 V29    }
     DEF(5)={            V18 V19 V22 V23     V30}

BB12 USE(1)={V02}
     DEF(0)={   }

BB13 USE(1)={V02}
     DEF(0)={   }

BB14 USE(0)={   }
     DEF(1)={V04}

BB15 USE(11)={V01 V06 V07     V10 V11     V14 V15     V18 V19     V22 V23}
     DEF(4)={            V08         V12         V16         V20        }

BB16 USE(0)={       }
     DEF(2)={V05 V31}

BB17 USE(0)={}
     DEF(0)={}

BB18 USE(10)={V06 V07     V10 V11     V14 V15     V18 V19     V22 V23    }
     DEF(5)={        V09         V13         V17         V21         V24}

BB19 USE(3)={V01 V05 V23}
     DEF(0)={           }

BB20 USE(1)={V05}
     DEF(0)={   }

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (3)={V00 V01 V02        }
     OUT(5)={V00 V01 V02 V05 V26}

BB02 IN (5)={V00 V01 V02 V05 V26}
     OUT(5)={V00 V01 V02 V05 V26}

BB03 IN (5)={V00 V01 V02 V05         V26    }
     OUT(7)={V00 V01 V02 V05 V06 V07     V27}

BB04 IN (7)={V00 V01 V02 V05 V06 V07 V27}
     OUT(7)={V00 V01 V02 V05 V06 V07 V27}

BB05 IN (7)={V00 V01 V02 V05 V06 V07         V27    }
     OUT(9)={V00 V01 V02 V05 V06 V07 V10 V11     V28}

BB06 IN (9)={V00 V01 V02 V05 V06 V07 V10 V11 V28}
     OUT(9)={V00 V01 V02 V05 V06 V07 V10 V11 V28}

BB07 IN (9)={V00 V01 V02 V05 V06 V07 V10 V11         V28    }
     OUT(11)={V00 V01 V02 V05 V06 V07 V10 V11 V14 V15     V29}

BB08 IN (11)={V00 V01 V02 V05 V06 V07 V10 V11 V14 V15 V29}
     OUT(11)={V00 V01 V02 V05 V06 V07 V10 V11 V14 V15 V29}

BB09 IN (11)={V00 V01 V02 V05 V06 V07 V10 V11 V14 V15                 V29}
     OUT(13)={    V01 V02 V05 V06 V07 V10 V11 V14 V15 V18 V19 V22 V23    }

BB12 IN (13)={V01 V02 V05 V06 V07 V10 V11 V14 V15 V18 V19 V22 V23}
     OUT(13)={V01 V02 V05 V06 V07 V10 V11 V14 V15 V18 V19 V22 V23}

BB13 IN (13)={V01 V02 V05 V06 V07 V10 V11 V14 V15 V18 V19 V22 V23}
     OUT(12)={V01     V05 V06 V07 V10 V11 V14 V15 V18 V19 V22 V23}

BB14 IN (11)={V01 V06 V07 V10 V11 V14 V15 V18 V19 V22 V23}
     OUT(11)={V01 V06 V07 V10 V11 V14 V15 V18 V19 V22 V23}

BB15 IN (11)={V01 V06 V07 V10 V11 V14 V15 V18 V19 V22 V23}
     OUT(2)={V01                                     V23}

BB16 IN (2)={V01     V23}
     OUT(3)={V01 V05 V23}

BB17 IN (0)={}
     OUT(0)={}

BB18 IN (10)={V06 V07 V10 V11 V14 V15 V18 V19 V22 V23}
     OUT(0)={                                       }

BB19 IN (3)={V01 V05 V23}
     OUT(1)={    V05    }

BB20 IN (1)={V05}
     OUT(0)={   }

Store [000176] is dead and has no side effects, removing statement

removing useless STMT00055 ( ??? ... 0x08B )
               [000176] DA---------                         *  STORE_LCL_VAR int    V04 loc0         
               [000175] -----------                         \--*  CNS_INT   int    0
 from BB14

BB14 becomes empty

*************** Finishing PHASE Early liveness
Trees after Early liveness

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB09                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB09,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----------                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----------                         *  JTRUE     void  
               [000005] -----------                         \--*  EQ        int   
               [000003] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----------                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----------                         \--*  ADD       byref 
               [000009] -----------                            +--*  LCL_VAR   byref  V26 tmp1          (last use)
               [000192] -----------                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---------                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----------                         \--*  LCL_VAR   byref  V26 tmp1          (last use)

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---------                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----------                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----------                         *  JTRUE     void  
               [000019] -----------                         \--*  EQ        int   
               [000017] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----------                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----------                         \--*  ADD       byref 
               [000023] -----------                            +--*  LCL_VAR   byref  V27 tmp2          (last use)
               [000188] -----------                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---------                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----------                         \--*  LCL_VAR   byref  V27 tmp2          (last use)

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---------                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----------                         \--*  ADD       long  
               [000026] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----------                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----------                         *  JTRUE     void  
               [000034] -----------                         \--*  EQ        int   
               [000032] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----------                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----------                         \--*  ADD       byref 
               [000038] -----------                            +--*  LCL_VAR   byref  V28 tmp3          (last use)
               [000184] -----------                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---------                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----------                         \--*  LCL_VAR   byref  V28 tmp3          (last use)

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---------                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----------                         \--*  ADD       long  
               [000041] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----------                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----------                         *  JTRUE     void  
               [000049] -----------                         \--*  EQ        int   
               [000047] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----------                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----------                         \--*  ADD       byref 
               [000053] -----------                            +--*  LCL_VAR   byref  V29 tmp4          (last use)
               [000180] -----------                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB15(0.48),BB12(0.52) (cond), preds={BB07,BB08} succs={BB12,BB15}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---------                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----------                         \--*  LCL_VAR   byref  V29 tmp4          (last use)

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---------                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----------                         \--*  ADD       long  
               [000056] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----------                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00018 ( ??? ... 0x060 )
               [000066] DA---------                         *  STORE_LCL_VAR byref  V30 tmp5         
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0          (last use)

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---------                         *  STORE_LCL_VAR byref  V22 loc18        
               [000069] -----------                         \--*  LCL_VAR   byref  V30 tmp5          (last use)

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---------                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----------                         \--*  ADD       long  
               [000071] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----------                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
               [000079] -----------                         *  JTRUE     void  
               [000078] -----------                         \--*  EQ        int   
               [000076] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----------                            \--*  CNS_INT   int    0

------------ BB12 [0011] [07B..082) -> BB18(0.2),BB13(0.8) (cond), preds={BB09} succs={BB13,BB18}

***** BB12 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----------                         *  JTRUE     void  
               [000137] -----------                         \--*  EQ        int   
               [000135] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----------                            \--*  CNS_INT   int    1

------------ BB13 [0012] [082..089) -> BB19(0.48),BB14(0.52) (cond), preds={BB12} succs={BB14,BB19}

***** BB13 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----------                         *  JTRUE     void  
               [000173] -----------                         \--*  EQ        int   
               [000171] -----------                            +--*  LCL_VAR   int    V02 arg2          (last use)
               [000172] -----------                            \--*  CNS_INT   int    2

------------ BB14 [0013] [089..08C) -> BB15(1) (always), preds={BB13} succs={BB15}

------------ BB15 [0014] [08C..0F8) -> BB17(1) (always), preds={BB09,BB14} succs={BB17}

***** BB15 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000082] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -------N---                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00023 ( ??? ... 0x098 )
               [000088] DA-XG------                         *  STORE_LCL_VAR int    V08 loc4         
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2          (last use)

***** BB15 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG------                         *  STOREIND  int   
               [000089] -----------                         +--*  LCL_VAR   byref  V07 loc3          (last use)
               [000090] -----------                         \--*  LCL_VAR   int    V08 loc4          (last use)

***** BB15 [0014]
STMT00025 ( ??? ... 0x0A9 )
               [000094] DA-XG------                         *  STORE_LCL_VAR int    V12 loc8         
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6          (last use)

***** BB15 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG------                         *  STOREIND  int   
               [000095] -----------                         +--*  LCL_VAR   byref  V11 loc7          (last use)
               [000096] -----------                         \--*  LCL_VAR   int    V12 loc8          (last use)

***** BB15 [0014]
STMT00027 ( ??? ... 0x0BB )
               [000100] DA-XG------                         *  STORE_LCL_VAR int    V16 loc12        
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10         (last use)

***** BB15 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG------                         *  STOREIND  int   
               [000101] -----------                         +--*  LCL_VAR   byref  V15 loc11         (last use)
               [000102] -----------                         \--*  LCL_VAR   int    V16 loc12         (last use)

***** BB15 [0014]
STMT00029 ( ??? ... 0x0D1 )
               [000106] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14         (last use)

***** BB15 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----------                         +--*  LCL_VAR   byref  V19 loc15         (last use)
               [000108] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16         (last use)

***** BB15 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG------                         *  STOREIND  short 
               [000110] -----------                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----------                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG------                         *  CALL      void   <unknown method>
               [000114] U--XG------ arg0                    +--*  IND       ref   
               [000113] -----------                         |  \--*  LCL_VAR   byref  V22 loc18         (last use)
               [000115] ----------- arg1                    \--*  LCL_VAR   byref  V23 loc19        

------------ BB16 [0015] [0F8..103) -> BB19(1) (cret), preds={} succs={BB19}

***** BB16 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---O-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----O-----                         \--*  CATCH_ARG ref   

***** BB16 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DAC-G------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --C-G------                         \--*  CALL      ref    <unknown method>
               [000119] ----------- arg0                       \--*  LCL_VAR   ref    V31 tmp6          (last use)

------------ BB17 [0016] [103..104) (return), preds={BB15,BB19} succs={}

***** BB17 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----------                         *  RETURN    void  

------------ BB18 [0017] [104..166) (return), preds={BB12} succs={}

***** BB18 [0017]
STMT00042 ( ??? ... 0x10A )
               [000141] DA-XG------                         *  STORE_LCL_VAR int    V09 loc5         
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3          (last use)

***** BB18 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG------                         *  STOREIND  int   
               [000142] -----------                         +--*  LCL_VAR   byref  V06 loc2          (last use)
               [000143] -----------                         \--*  LCL_VAR   int    V09 loc5          (last use)

***** BB18 [0017]
STMT00044 ( ??? ... 0x11B )
               [000147] DA-XG------                         *  STORE_LCL_VAR int    V13 loc9         
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7          (last use)

***** BB18 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG------                         *  STOREIND  int   
               [000148] -----------                         +--*  LCL_VAR   byref  V10 loc6          (last use)
               [000149] -----------                         \--*  LCL_VAR   int    V13 loc9          (last use)

***** BB18 [0017]
STMT00046 ( ??? ... 0x12D )
               [000153] DA-XG------                         *  STORE_LCL_VAR int    V17 loc13        
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11         (last use)

***** BB18 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG------                         *  STOREIND  int   
               [000154] -----------                         +--*  LCL_VAR   byref  V14 loc10         (last use)
               [000155] -----------                         \--*  LCL_VAR   int    V17 loc13         (last use)

***** BB18 [0017]
STMT00048 ( ??? ... 0x143 )
               [000159] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15         (last use)

***** BB18 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----------                         +--*  LCL_VAR   byref  V18 loc14         (last use)
               [000161] -----------                         \--*  LCL_VAR   struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17         (last use)

***** BB18 [0017]
STMT00051 ( ??? ... ??? )
               [000166] DAC--------                         *  STORE_LCL_VAR ref    V24 loc20        
               [000164] --C-G------                         \--*  CALL      ref    <unknown method>
               [000163] ----------- arg0                       \--*  LCL_VAR   byref  V23 loc19         (last use)

***** BB18 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UA-XG------                         *  STOREIND  ref   
               [000167] -----------                         +--*  LCL_VAR   byref  V22 loc18         (last use)
               [000168] -----------                         \--*  LCL_VAR   ref    V24 loc20         (last use)

***** BB18 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----------                         *  RETURN    void  

------------ BB19 [0019] [167..17A) -> BB17(0.48),BB20(0.52) (cond), preds={BB13,BB16} succs={BB20,BB17}

***** BB19 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --C-G------                         *  CALL      void   <unknown method>
               [000122] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19         (last use)

***** BB19 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000124] -----------                         +--*  LCL_VAR   long   V01 arg1          (last use)
               [000125] -------N---                         \--*  CNS_INT   int    0

***** BB19 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----------                         *  JTRUE     void  
               [000130] -----------                         \--*  EQ        int   
               [000128] -----------                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----------                            \--*  CNS_INT   ref    null

------------ BB20 [0020] [17A..181) (return), preds={BB19} succs={}

***** BB20 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --C-G------                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] ----------- this                    \--*  LCL_VAR   ref    V05 loc1          (last use)

***** BB20 [0020]
STMT00040 ( ??? ... ??? )
               [000134] -----------                         *  RETURN    void  

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Forward Substitution


===> BB01
    [000001]:  no next stmt use
    [000007]:  no next stmt use


===> BB02


===> BB03
    [000011]:  no next stmt use
    [000015]:  mismatched types (store)
    [000021]:  no next stmt use


===> BB04


===> BB05
    [000025]:  no next stmt use
    [000030]:  mismatched types (store)
    [000036]:  no next stmt use


===> BB06


===> BB07
    [000040]:  no next stmt use
    [000045]:  mismatched types (store)
    [000051]:  no next stmt use


===> BB08


===> BB09
    [000055]:  no next stmt use
    [000060]:  mismatched types (store)
    [000066]:  [000069] is last use of [000066] (V30)  -- fwd subbing [000061]; new next stmt is
STMT00019 ( ??? ... 0x067 )
               [000070] DA---------                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0          (last use)

removing useless STMT00018 ( ??? ... 0x060 )
               [000066] DA---------                         *  STORE_LCL_VAR byref  V30 tmp5         
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0          (last use)
 from BB09
    [000060]:  mismatched types (store)
    [000070]:  no next stmt use
    [000075]:  mismatched types (store)


===> BB12


===> BB13


===> BB14


===> BB15
    [000088]:  [000090] is last use of [000088] (V08)  -- fwd subbing [000087]; new next stmt is
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG------                         *  STOREIND  int   
               [000089] -----------                         +--*  LCL_VAR   byref  V07 loc3          (last use)
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2          (last use)

removing useless STMT00023 ( ??? ... 0x098 )
               [000088] DA-XG------                         *  STORE_LCL_VAR int    V08 loc4         
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2          (last use)
 from BB15
    [000094]:  [000096] is last use of [000094] (V12)  -- fwd subbing [000093]; new next stmt is
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG------                         *  STOREIND  int   
               [000095] -----------                         +--*  LCL_VAR   byref  V11 loc7          (last use)
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6          (last use)

removing useless STMT00025 ( ??? ... 0x0A9 )
               [000094] DA-XG------                         *  STORE_LCL_VAR int    V12 loc8         
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6          (last use)
 from BB15
    [000100]:  [000102] is last use of [000100] (V16)  -- fwd subbing [000099]; new next stmt is
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG------                         *  STOREIND  int   
               [000101] -----------                         +--*  LCL_VAR   byref  V15 loc11         (last use)
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10         (last use)

removing useless STMT00027 ( ??? ... 0x0BB )
               [000100] DA-XG------                         *  STORE_LCL_VAR int    V16 loc12        
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10         (last use)
 from BB15
    [000106]:  [000108] is last use of [000106] (V20)  -- fwd subbing [000105]; new next stmt is
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----------                         +--*  LCL_VAR   byref  V19 loc15         (last use)
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14         (last use)

removing useless STMT00029 ( ??? ... 0x0D1 )
               [000106] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V20 loc16        
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14         (last use)
 from BB15


===> BB16
    [000118]:  tree to sub is catch arg, or lcl heap


===> BB17


===> BB18
    [000141]:  [000143] is last use of [000141] (V09)  -- fwd subbing [000140]; new next stmt is
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG------                         *  STOREIND  int   
               [000142] -----------                         +--*  LCL_VAR   byref  V06 loc2          (last use)
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3          (last use)

removing useless STMT00042 ( ??? ... 0x10A )
               [000141] DA-XG------                         *  STORE_LCL_VAR int    V09 loc5         
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3          (last use)
 from BB18
    [000147]:  [000149] is last use of [000147] (V13)  -- fwd subbing [000146]; new next stmt is
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG------                         *  STOREIND  int   
               [000148] -----------                         +--*  LCL_VAR   byref  V10 loc6          (last use)
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7          (last use)

removing useless STMT00044 ( ??? ... 0x11B )
               [000147] DA-XG------                         *  STORE_LCL_VAR int    V13 loc9         
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7          (last use)
 from BB18
    [000153]:  [000155] is last use of [000153] (V17)  -- fwd subbing [000152]; new next stmt is
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG------                         *  STOREIND  int   
               [000154] -----------                         +--*  LCL_VAR   byref  V14 loc10         (last use)
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11         (last use)

removing useless STMT00046 ( ??? ... 0x12D )
               [000153] DA-XG------                         *  STORE_LCL_VAR int    V17 loc13        
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11         (last use)
 from BB18
    [000159]:  [000161] is last use of [000159] (V21)  -- fwd subbing [000158]; new next stmt is
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----------                         +--*  LCL_VAR   byref  V18 loc14         (last use)
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15         (last use)

removing useless STMT00048 ( ??? ... 0x143 )
               [000159] DA-XG------                         *  STORE_LCL_VAR struct<System.Data.OleDb.tagDBIDX, 32> V21 loc17        
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15         (last use)
 from BB18
    [000166]:  [000168] is last use of [000166] (V24)  -- fwd subbing [000164]; new next stmt is
STMT00052 ( ??? ... 0x163 )
               [000169] UACXG------                         *  STOREIND  ref   
               [000167] -----------                         +--*  LCL_VAR   byref  V22 loc18         (last use)
               [000164] --CXG------                         \--*  CALL      ref    <unknown method>
               [000163] ----------- arg0                       \--*  LCL_VAR   byref  V23 loc19         (last use)

removing useless STMT00051 ( ??? ... ??? )
               [000166] DACXG------                         *  STORE_LCL_VAR ref    V24 loc20        
               [000164] --CXG------                         \--*  CALL      ref    <unknown method>
               [000163] ----------- arg0                       \--*  LCL_VAR   byref  V23 loc19         (last use)
 from BB18


===> BB19


===> BB20

*************** Finishing PHASE Forward Substitution
Trees after Forward Substitution

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB09                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB09,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC bwd bwd-src
BB20 [0020]  1       BB19                 10.38  10 [17A..181)                           (return)                     i IBC
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----------                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----------                         *  JTRUE     void  
               [000005] -----------                         \--*  EQ        int   
               [000003] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----------                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----------                         \--*  ADD       byref 
               [000009] -----------                            +--*  LCL_VAR   byref  V26 tmp1          (last use)
               [000192] -----------                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---------                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----------                         \--*  LCL_VAR   byref  V26 tmp1          (last use)

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---------                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----------                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----------                         *  JTRUE     void  
               [000019] -----------                         \--*  EQ        int   
               [000017] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----------                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----------                         \--*  ADD       byref 
               [000023] -----------                            +--*  LCL_VAR   byref  V27 tmp2          (last use)
               [000188] -----------                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---------                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----------                         \--*  LCL_VAR   byref  V27 tmp2          (last use)

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---------                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----------                         \--*  ADD       long  
               [000026] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----------                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----------                         *  JTRUE     void  
               [000034] -----------                         \--*  EQ        int   
               [000032] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----------                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----------                         \--*  ADD       byref 
               [000038] -----------                            +--*  LCL_VAR   byref  V28 tmp3          (last use)
               [000184] -----------                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---------                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----------                         \--*  LCL_VAR   byref  V28 tmp3          (last use)

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---------                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----------                         \--*  ADD       long  
               [000041] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----------                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----------                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----------                         *  JTRUE     void  
               [000049] -----------                         \--*  EQ        int   
               [000047] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----------                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----------                         \--*  ADD       byref 
               [000053] -----------                            +--*  LCL_VAR   byref  V29 tmp4          (last use)
               [000180] -----------                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB15(0.48),BB12(0.52) (cond), preds={BB07,BB08} succs={BB12,BB15}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---------                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----------                         \--*  LCL_VAR   byref  V29 tmp4          (last use)

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---------                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----------                         \--*  ADD       long  
               [000056] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----------                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---------                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0          (last use)

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---------                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----------                         \--*  ADD       long  
               [000071] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----------                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
               [000079] -----------                         *  JTRUE     void  
               [000078] -----------                         \--*  EQ        int   
               [000076] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----------                            \--*  CNS_INT   int    0

------------ BB12 [0011] [07B..082) -> BB18(0.2),BB13(0.8) (cond), preds={BB09} succs={BB13,BB18}

***** BB12 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----------                         *  JTRUE     void  
               [000137] -----------                         \--*  EQ        int   
               [000135] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----------                            \--*  CNS_INT   int    1

------------ BB13 [0012] [082..089) -> BB19(0.48),BB14(0.52) (cond), preds={BB12} succs={BB14,BB19}

***** BB13 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----------                         *  JTRUE     void  
               [000173] -----------                         \--*  EQ        int   
               [000171] -----------                            +--*  LCL_VAR   int    V02 arg2          (last use)
               [000172] -----------                            \--*  CNS_INT   int    2

------------ BB14 [0013] [089..08C) -> BB15(1) (always), preds={BB13} succs={BB15}

------------ BB15 [0014] [08C..0F8) -> BB17(1) (always), preds={BB09,BB14} succs={BB17}

***** BB15 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000082] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -------N---                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG------                         *  STOREIND  int   
               [000089] -----------                         +--*  LCL_VAR   byref  V07 loc3          (last use)
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2          (last use)

***** BB15 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG------                         *  STOREIND  int   
               [000095] -----------                         +--*  LCL_VAR   byref  V11 loc7          (last use)
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6          (last use)

***** BB15 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG------                         *  STOREIND  int   
               [000101] -----------                         +--*  LCL_VAR   byref  V15 loc11         (last use)
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10         (last use)

***** BB15 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----------                         +--*  LCL_VAR   byref  V19 loc15         (last use)
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14         (last use)

***** BB15 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG------                         *  STOREIND  short 
               [000110] -----------                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----------                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG------                         *  CALL      void   <unknown method>
               [000114] U--XG------ arg0                    +--*  IND       ref   
               [000113] -----------                         |  \--*  LCL_VAR   byref  V22 loc18         (last use)
               [000115] ----------- arg1                    \--*  LCL_VAR   byref  V23 loc19        

------------ BB16 [0015] [0F8..103) -> BB19(1) (cret), preds={} succs={BB19}

***** BB16 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---O-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----O-----                         \--*  CATCH_ARG ref   

***** BB16 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DAC-G------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --C-G------                         \--*  CALL      ref    <unknown method>
               [000119] ----------- arg0                       \--*  LCL_VAR   ref    V31 tmp6          (last use)

------------ BB17 [0016] [103..104) (return), preds={BB15,BB19} succs={}

***** BB17 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----------                         *  RETURN    void  

------------ BB18 [0017] [104..166) (return), preds={BB12} succs={}

***** BB18 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG------                         *  STOREIND  int   
               [000142] -----------                         +--*  LCL_VAR   byref  V06 loc2          (last use)
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3          (last use)

***** BB18 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG------                         *  STOREIND  int   
               [000148] -----------                         +--*  LCL_VAR   byref  V10 loc6          (last use)
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7          (last use)

***** BB18 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG------                         *  STOREIND  int   
               [000154] -----------                         +--*  LCL_VAR   byref  V14 loc10         (last use)
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11         (last use)

***** BB18 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----------                         +--*  LCL_VAR   byref  V18 loc14         (last use)
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15         (last use)

***** BB18 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UACXG------                         *  STOREIND  ref   
               [000167] -----------                         +--*  LCL_VAR   byref  V22 loc18         (last use)
               [000164] --CXG------                         \--*  CALL      ref    <unknown method>
               [000163] ----------- arg0                       \--*  LCL_VAR   byref  V23 loc19         (last use)

***** BB18 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----------                         *  RETURN    void  

------------ BB19 [0019] [167..17A) -> BB17(0.48),BB20(0.52) (cond), preds={BB13,BB16} succs={BB20,BB17}

***** BB19 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --C-G------                         *  CALL      void   <unknown method>
               [000122] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19         (last use)

***** BB19 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000124] -----------                         +--*  LCL_VAR   long   V01 arg1          (last use)
               [000125] -------N---                         \--*  CNS_INT   int    0

***** BB19 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----------                         *  JTRUE     void  
               [000130] -----------                         \--*  EQ        int   
               [000128] -----------                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----------                            \--*  CNS_INT   ref    null

------------ BB20 [0020] [17A..181) (return), preds={BB19} succs={}

***** BB20 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --C-G------                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] ----------- this                    \--*  LCL_VAR   ref    V05 loc1          (last use)

***** BB20 [0020]
STMT00040 ( ??? ... ??? )
               [000134] -----------                         *  RETURN    void  

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Physical promotion
Picking promotions

*************** Finishing PHASE Physical promotion [no changes]

*************** Starting PHASE Identify candidates for implicit byref copy omission

*************** Finishing PHASE Identify candidates for implicit byref copy omission [no changes]

*************** Starting PHASE Morph - ByRefs

*************** Finishing PHASE Morph - ByRefs [no changes]

*************** Starting PHASE Morph - Global

Morphing BB01
Assertions in: #NA
fgMorphTree BB01, STMT00000 (before)
               [000001] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----------                         \--*  CNS_INT   ref    null
GenTreeNode creates assertion:
               [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
In BB01 New Local Constant Assertion: V05 == null, index = #01

fgMorphTree BB01, STMT00002 (before)
               [000007] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----------                         \--*  LCL_VAR   byref  V00 arg0         
GenTreeNode creates assertion:
               [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
In BB01 New Local Copy     Assertion: V26 == V00, index = #02

fgMorphTree BB01, STMT00001 (before)
               [000006] -----------                         *  JTRUE     void  
               [000005] -----------                         \--*  EQ        int   
               [000003] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----------                            \--*  CNS_INT   byref  0
GenTreeNode creates assertion:
               [000006] -----+-----                         *  JTRUE     void  
In BB01 New Local Constant Assertion: V00 == 0, index = #03
GenTreeNode creates assertion:
               [000006] -----+-----                         *  JTRUE     void  
In BB01 New Local Constant Assertion: V00 != 0, index = #04

Morphing BB02
Using `if false` assertions from pred BB01
Assertions in: #01 #02 #04
fgMorphTree BB02, STMT00059 (before)
               [000194] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----------                         \--*  ADD       byref 
               [000009] -----------                            +--*  LCL_VAR   byref  V26 tmp1          (last use)
               [000192] -----------                            \--*  CNS_INT   long   8

Assertion prop in BB02:
Copy     Assertion: V26 == V00, index = #02
               [000009] -----------                         *  LCL_VAR   byref  V00 arg0         

The store [000194] using V26 removes: Copy     Assertion: V26 == V00, index = #02

fgMorphTree BB02, STMT00059 (after)
               [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----+-----                         \--*  ADD       byref 
               [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000192] -----+-----                            \--*  CNS_INT   long   8

Morphing BB03
Using `if true` assertions from pred BB01
Assertions in: #01
fgMorphTree BB03, STMT00003 (before)
               [000011] DA---------                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----------                         \--*  LCL_VAR   byref  V26 tmp1          (last use)
GenTreeNode creates assertion:
               [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
In BB03 New Local Copy     Assertion: V06 == V26, index = #05

fgMorphTree BB03, STMT00004 (before)
               [000015] DA---------                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----------                         \--*  LCL_VAR   long   V01 arg1         

fgMorphTree BB03, STMT00006 (before)
               [000021] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----------                         \--*  LCL_VAR   byref  V00 arg0         
GenTreeNode creates assertion:
               [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
In BB03 New Local Copy     Assertion: V27 == V00, index = #06

fgMorphTree BB03, STMT00005 (before)
               [000020] -----------                         *  JTRUE     void  
               [000019] -----------                         \--*  EQ        int   
               [000017] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----------                            \--*  CNS_INT   byref  0
GenTreeNode creates [if true] assertion:
               [000020] -----+-----                         *  JTRUE     void  
In BB03 New Local Constant Assertion: V00 == 0, index = #03
GenTreeNode creates [if false] assertion:
               [000020] -----+-----                         *  JTRUE     void  
In BB03 New Local Constant Assertion: V00 != 0, index = #04

Morphing BB04
Using `if false` assertions from pred BB03
Assertions in: #01 #04 #05 #06
fgMorphTree BB04, STMT00058 (before)
               [000190] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----------                         \--*  ADD       byref 
               [000023] -----------                            +--*  LCL_VAR   byref  V27 tmp2          (last use)
               [000188] -----------                            \--*  CNS_INT   long   12

Assertion prop in BB04:
Copy     Assertion: V27 == V00, index = #06
               [000023] -----------                         *  LCL_VAR   byref  V00 arg0         

The store [000190] using V27 removes: Copy     Assertion: V27 == V00, index = #06

fgMorphTree BB04, STMT00058 (after)
               [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----+-----                         \--*  ADD       byref 
               [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000188] -----+-----                            \--*  CNS_INT   long   12

Morphing BB05
Using `if true` assertions from pred BB03
Assertions in: #01 #05
fgMorphTree BB05, STMT00007 (before)
               [000025] DA---------                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----------                         \--*  LCL_VAR   byref  V27 tmp2          (last use)
GenTreeNode creates assertion:
               [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
In BB05 New Local Copy     Assertion: V10 == V27, index = #07

fgMorphTree BB05, STMT00008 (before)
               [000030] DA---------                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----------                         \--*  ADD       long  
               [000026] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----------                            \--*  CNS_INT   long   4

fgMorphTree BB05, STMT00010 (before)
               [000036] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----------                         \--*  LCL_VAR   byref  V00 arg0         
GenTreeNode creates assertion:
               [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
In BB05 New Local Copy     Assertion: V28 == V00, index = #08

fgMorphTree BB05, STMT00009 (before)
               [000035] -----------                         *  JTRUE     void  
               [000034] -----------                         \--*  EQ        int   
               [000032] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----------                            \--*  CNS_INT   byref  0
GenTreeNode creates [if true] assertion:
               [000035] -----+-----                         *  JTRUE     void  
In BB05 New Local Constant Assertion: V00 == 0, index = #03
GenTreeNode creates [if false] assertion:
               [000035] -----+-----                         *  JTRUE     void  
In BB05 New Local Constant Assertion: V00 != 0, index = #04

Morphing BB06
Using `if false` assertions from pred BB05
Assertions in: #01 #04 #05 #07 #08
fgMorphTree BB06, STMT00057 (before)
               [000186] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----------                         \--*  ADD       byref 
               [000038] -----------                            +--*  LCL_VAR   byref  V28 tmp3          (last use)
               [000184] -----------                            \--*  CNS_INT   long   16

Assertion prop in BB06:
Copy     Assertion: V28 == V00, index = #08
               [000038] -----------                         *  LCL_VAR   byref  V00 arg0         

The store [000186] using V28 removes: Copy     Assertion: V28 == V00, index = #08

fgMorphTree BB06, STMT00057 (after)
               [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----+-----                         \--*  ADD       byref 
               [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000184] -----+-----                            \--*  CNS_INT   long   16

Morphing BB07
Using `if true` assertions from pred BB05
Assertions in: #01 #05 #07
fgMorphTree BB07, STMT00011 (before)
               [000040] DA---------                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----------                         \--*  LCL_VAR   byref  V28 tmp3          (last use)
GenTreeNode creates assertion:
               [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
In BB07 New Local Copy     Assertion: V14 == V28, index = #09

fgMorphTree BB07, STMT00012 (before)
               [000045] DA---------                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----------                         \--*  ADD       long  
               [000041] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----------                            \--*  CNS_INT   long   8

fgMorphTree BB07, STMT00014 (before)
               [000051] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----------                         \--*  LCL_VAR   byref  V00 arg0         
GenTreeNode creates assertion:
               [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
In BB07 New Local Copy     Assertion: V29 == V00, index = #10

fgMorphTree BB07, STMT00013 (before)
               [000050] -----------                         *  JTRUE     void  
               [000049] -----------                         \--*  EQ        int   
               [000047] -----------                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----------                            \--*  CNS_INT   byref  0
GenTreeNode creates [if true] assertion:
               [000050] -----+-----                         *  JTRUE     void  
In BB07 New Local Constant Assertion: V00 == 0, index = #03
GenTreeNode creates [if false] assertion:
               [000050] -----+-----                         *  JTRUE     void  
In BB07 New Local Constant Assertion: V00 != 0, index = #04

Morphing BB08
Using `if false` assertions from pred BB07
Assertions in: #01 #04 #05 #07 #09 #10
fgMorphTree BB08, STMT00056 (before)
               [000182] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----------                         \--*  ADD       byref 
               [000053] -----------                            +--*  LCL_VAR   byref  V29 tmp4          (last use)
               [000180] -----------                            \--*  CNS_INT   long   24

Assertion prop in BB08:
Copy     Assertion: V29 == V00, index = #10
               [000053] -----------                         *  LCL_VAR   byref  V00 arg0         

The store [000182] using V29 removes: Copy     Assertion: V29 == V00, index = #10

fgMorphTree BB08, STMT00056 (after)
               [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----+-----                         \--*  ADD       byref 
               [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000180] -----+-----                            \--*  CNS_INT   long   24

Morphing BB09
Using `if true` assertions from pred BB07
Assertions in: #01 #05 #07 #09
fgMorphTree BB09, STMT00015 (before)
               [000055] DA---------                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----------                         \--*  LCL_VAR   byref  V29 tmp4          (last use)
GenTreeNode creates assertion:
               [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
In BB09 New Local Copy     Assertion: V18 == V29, index = #11

fgMorphTree BB09, STMT00016 (before)
               [000060] DA---------                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----------                         \--*  ADD       long  
               [000056] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----------                            \--*  CNS_INT   long   16

fgMorphTree BB09, STMT00019 (before)
               [000070] DA---------                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----------                         \--*  LCL_VAR   byref  V00 arg0          (last use)
GenTreeNode creates assertion:
               [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
In BB09 New Local Copy     Assertion: V22 == V00, index = #12

fgMorphTree BB09, STMT00020 (before)
               [000075] DA---------                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----------                         \--*  ADD       long  
               [000071] -----------                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----------                            \--*  CNS_INT   long   48

fgMorphTree BB09, STMT00021 (before)
               [000079] -----------                         *  JTRUE     void  
               [000078] -----------                         \--*  EQ        int   
               [000076] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----------                            \--*  CNS_INT   int    0
GenTreeNode creates assertion:
               [000079] -----+-----                         *  JTRUE     void  
In BB09 New Local Constant Assertion: V02 == 0, index = #13
GenTreeNode creates assertion:
               [000079] -----+-----                         *  JTRUE     void  
In BB09 New Local Constant Assertion: V02 != 0, index = #14

Morphing BB12
Using `if false` assertions from pred BB09
Assertions in: #01 #05 #07 #09 #11 #12 #14
fgMorphTree BB12, STMT00041 (before)
               [000138] -----------                         *  JTRUE     void  
               [000137] -----------                         \--*  EQ        int   
               [000135] -----------                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----------                            \--*  CNS_INT   int    1
GenTreeNode creates assertion:
               [000138] -----+-----                         *  JTRUE     void  
In BB12 New Local Constant Assertion: V02 == 1, index = #15
GenTreeNode creates assertion:
               [000138] -----+-----                         *  JTRUE     void  
In BB12 New Local Constant Assertion: V02 != 1, index = #16

Morphing BB18
Using `if true` assertions from pred BB12
Assertions in: #01 #05 #07 #09 #11 #12 #14 #15
fgMorphTree BB18, STMT00043 (before)
               [000144] UA-XG------                         *  STOREIND  int   
               [000142] -----------                         +--*  LCL_VAR   byref  V06 loc2          (last use)
               [000140] U--XG------                         \--*  IND       int   
               [000139] -----------                            \--*  LCL_VAR   byref  V07 loc3          (last use)

Assertion prop in BB18:
Copy     Assertion: V06 == V26, index = #05
               [000142] -----------                         *  LCL_VAR   byref  V26 tmp1         
GenTreeNode creates assertion:
               [000140] U--XG+-----                         *  IND       int   
In BB18 New Local Constant Assertion: V07 != 0, index = #17
GenTreeNode creates assertion:
               [000144] UA-XG+-----                         *  STOREIND  int   
In BB18 New Local Constant Assertion: V26 != 0, index = #18

fgMorphTree BB18, STMT00043 (after)
               [000144] UA-XG+-----                         *  STOREIND  int   
               [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
               [000140] U--XG+-----                         \--*  IND       int   
               [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3          (last use)

fgMorphTree BB18, STMT00045 (before)
               [000150] UA-XG------                         *  STOREIND  int   
               [000148] -----------                         +--*  LCL_VAR   byref  V10 loc6          (last use)
               [000146] U--XG------                         \--*  IND       int   
               [000145] -----------                            \--*  LCL_VAR   byref  V11 loc7          (last use)

Assertion prop in BB18:
Copy     Assertion: V10 == V27, index = #07
               [000148] -----------                         *  LCL_VAR   byref  V27 tmp2         
GenTreeNode creates assertion:
               [000146] U--XG+-----                         *  IND       int   
In BB18 New Local Constant Assertion: V11 != 0, index = #19
GenTreeNode creates assertion:
               [000150] UA-XG+-----                         *  STOREIND  int   
In BB18 New Local Constant Assertion: V27 != 0, index = #20

fgMorphTree BB18, STMT00045 (after)
               [000150] UA-XG+-----                         *  STOREIND  int   
               [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
               [000146] U--XG+-----                         \--*  IND       int   
               [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7          (last use)

fgMorphTree BB18, STMT00047 (before)
               [000156] UA-XG------                         *  STOREIND  int   
               [000154] -----------                         +--*  LCL_VAR   byref  V14 loc10         (last use)
               [000152] U--XG------                         \--*  IND       int   
               [000151] -----------                            \--*  LCL_VAR   byref  V15 loc11         (last use)

Assertion prop in BB18:
Copy     Assertion: V14 == V28, index = #09
               [000154] -----------                         *  LCL_VAR   byref  V28 tmp3         
GenTreeNode creates assertion:
               [000152] U--XG+-----                         *  IND       int   
In BB18 New Local Constant Assertion: V15 != 0, index = #21
GenTreeNode creates assertion:
               [000156] UA-XG+-----                         *  STOREIND  int   
In BB18 New Local Constant Assertion: V28 != 0, index = #22

fgMorphTree BB18, STMT00047 (after)
               [000156] UA-XG+-----                         *  STOREIND  int   
               [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
               [000152] U--XG+-----                         \--*  IND       int   
               [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11         (last use)

fgMorphTree BB18, STMT00049 (before)
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----------                         +--*  LCL_VAR   byref  V18 loc14         (last use)
               [000158] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----------                            \--*  LCL_VAR   byref  V19 loc15         (last use)

Assertion prop in BB18:
Copy     Assertion: V18 == V29, index = #11
               [000160] -----------                         *  LCL_VAR   byref  V29 tmp4         
GenTreeNode creates assertion:
               [000158] U--XG+-----                         *  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
In BB18 New Local Constant Assertion: V19 != 0, index = #23
MorphCopyBlock:
PrepareDst for [000162] have not found a local var.
GenTreeNode creates assertion:
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
In BB18 New Local Constant Assertion: V29 != 0, index = #24
block store to morph:
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15         (last use)
 with no promoted structs this requires a CopyBlock.
MorphCopyBlock (after):
               [000162] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15         (last use)

fgMorphTree BB18, STMT00049 (after)
               [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15         (last use)

fgMorphTree BB18, STMT00052 (before)
               [000169] UACXG------                         *  STOREIND  ref   
               [000167] -----------                         +--*  LCL_VAR   byref  V22 loc18         (last use)
               [000164] --CXG------                         \--*  CALL      ref    <unknown method>
               [000163] ----------- arg0                       \--*  LCL_VAR   byref  V23 loc19         (last use)

Assertion prop in BB18:
Copy     Assertion: V22 == V00, index = #12
               [000167] -----------                         *  LCL_VAR   byref  V00 arg0         
Initializing arg info for 164.CALL:
Argument 0 ABI info: [00..08) reg rcx
Args for call [000164] CALL after AddFinalArgsAndDetermineABIInfo:
CallArg[[000163].LCL_VAR long (By value), 1 reg: rcx]

Morphing args for 164.CALL:

Sorting the arguments:
Deferred argument ('rcx'):
               [000163] -----+-----                         *  LCL_VAR   byref  V23 loc19         (last use)
Moved to late list

Register placement order:    rcx 
Args for [000164].CALL after fgMorphArgs:
CallArg[[000163].LCL_VAR long (By value), 1 reg: rcx, isLate, processed]
OutgoingArgsStackSize is 32

GenTreeNode creates assertion:
               [000169] UACXG+-----                         *  STOREIND  ref   
In BB18 New Local Constant Assertion: V00 != 0, index = #04

fgMorphTree BB18, STMT00052 (after)
               [000169] UACXG+-----                         *  STOREIND  ref   
               [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
               [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19         (last use)

fgMorphTree BB18, STMT00053 (before)
               [000170] -----------                         *  RETURN    void  

Morphing BB13
Using `if false` assertions from pred BB12
Assertions in: #01 #05 #07 #09 #11 #12 #14 #16
fgMorphTree BB13, STMT00054 (before)
               [000174] -----------                         *  JTRUE     void  
               [000173] -----------                         \--*  EQ        int   
               [000171] -----------                            +--*  LCL_VAR   int    V02 arg2          (last use)
               [000172] -----------                            \--*  CNS_INT   int    2
GenTreeNode creates assertion:
               [000174] -----+-----                         *  JTRUE     void  
In BB13 New Local Constant Assertion: V02 == 2, index = #25
GenTreeNode creates assertion:
               [000174] -----+-----                         *  JTRUE     void  
In BB13 New Local Constant Assertion: V02 != 2, index = #26

Morphing BB14
Using `if false` assertions from pred BB13
Assertions in: #01 #05 #07 #09 #11 #12 #14 #16 #26
Morphing BB15
Using `if true` assertions from pred BB09
Assertions in: #01 #05 #07 #09 #11 #12
fgMorphTree BB15, STMT00022 (before)
               [000085] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000082] -----------                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -------N---                         \--*  CNS_INT   int    0
MorphInitBlock:
PrepareDst for [000085] have not found a local var.
MorphInitBlock (after):
               [000085] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -----+-N---                         \--*  CNS_INT   int    0

fgMorphTree BB15, STMT00024 (before)
               [000091] UA-XG------                         *  STOREIND  int   
               [000089] -----------                         +--*  LCL_VAR   byref  V07 loc3          (last use)
               [000087] U--XG------                         \--*  IND       int   
               [000086] -----------                            \--*  LCL_VAR   byref  V06 loc2          (last use)

Assertion prop in BB15:
Copy     Assertion: V06 == V26, index = #05
               [000086] -----------                         *  LCL_VAR   byref  V26 tmp1         
GenTreeNode creates assertion:
               [000087] U--XG+-----                         *  IND       int   
In BB15 New Local Constant Assertion: V26 != 0, index = #18
GenTreeNode creates assertion:
               [000091] UA-XG+-----                         *  STOREIND  int   
In BB15 New Local Constant Assertion: V07 != 0, index = #17

fgMorphTree BB15, STMT00024 (after)
               [000091] UA-XG+-----                         *  STOREIND  int   
               [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3          (last use)
               [000087] U--XG+-----                         \--*  IND       int   
               [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         

fgMorphTree BB15, STMT00026 (before)
               [000097] UA-XG------                         *  STOREIND  int   
               [000095] -----------                         +--*  LCL_VAR   byref  V11 loc7          (last use)
               [000093] U--XG------                         \--*  IND       int   
               [000092] -----------                            \--*  LCL_VAR   byref  V10 loc6          (last use)

Assertion prop in BB15:
Copy     Assertion: V10 == V27, index = #07
               [000092] -----------                         *  LCL_VAR   byref  V27 tmp2         
GenTreeNode creates assertion:
               [000093] U--XG+-----                         *  IND       int   
In BB15 New Local Constant Assertion: V27 != 0, index = #20
GenTreeNode creates assertion:
               [000097] UA-XG+-----                         *  STOREIND  int   
In BB15 New Local Constant Assertion: V11 != 0, index = #19

fgMorphTree BB15, STMT00026 (after)
               [000097] UA-XG+-----                         *  STOREIND  int   
               [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7          (last use)
               [000093] U--XG+-----                         \--*  IND       int   
               [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         

fgMorphTree BB15, STMT00028 (before)
               [000103] UA-XG------                         *  STOREIND  int   
               [000101] -----------                         +--*  LCL_VAR   byref  V15 loc11         (last use)
               [000099] U--XG------                         \--*  IND       int   
               [000098] -----------                            \--*  LCL_VAR   byref  V14 loc10         (last use)

Assertion prop in BB15:
Copy     Assertion: V14 == V28, index = #09
               [000098] -----------                         *  LCL_VAR   byref  V28 tmp3         
GenTreeNode creates assertion:
               [000099] U--XG+-----                         *  IND       int   
In BB15 New Local Constant Assertion: V28 != 0, index = #22
GenTreeNode creates assertion:
               [000103] UA-XG+-----                         *  STOREIND  int   
In BB15 New Local Constant Assertion: V15 != 0, index = #21

fgMorphTree BB15, STMT00028 (after)
               [000103] UA-XG+-----                         *  STOREIND  int   
               [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11         (last use)
               [000099] U--XG+-----                         \--*  IND       int   
               [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         

fgMorphTree BB15, STMT00030 (before)
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----------                         +--*  LCL_VAR   byref  V19 loc15         (last use)
               [000105] U--XG------                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----------                            \--*  LCL_VAR   byref  V18 loc14         (last use)

Assertion prop in BB15:
Copy     Assertion: V18 == V29, index = #11
               [000104] -----------                         *  LCL_VAR   byref  V29 tmp4         
GenTreeNode creates assertion:
               [000105] U--XG+-----                         *  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
In BB15 New Local Constant Assertion: V29 != 0, index = #24
MorphCopyBlock:
PrepareDst for [000109] have not found a local var.
GenTreeNode creates assertion:
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
In BB15 New Local Constant Assertion: V19 != 0, index = #23
block store to morph:
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15         (last use)
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         
 with no promoted structs this requires a CopyBlock.
MorphCopyBlock (after):
               [000109] UA-XG------                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15         (last use)
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

fgMorphTree BB15, STMT00030 (after)
               [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15         (last use)
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

fgMorphTree BB15, STMT00031 (before)
               [000112] -A-XG------                         *  STOREIND  short 
               [000110] -----------                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----------                         \--*  CNS_INT   int    0
GenTreeNode creates assertion:
               [000112] -A-XG+-----                         *  STOREIND  short 
In BB15 New Local Constant Assertion: V23 != 0, index = #27

fgMorphTree BB15, STMT00032 (before)
               [000116] --CXG------                         *  CALL      void   <unknown method>
               [000114] U--XG------ arg0                    +--*  IND       ref   
               [000113] -----------                         |  \--*  LCL_VAR   byref  V22 loc18         (last use)
               [000115] ----------- arg1                    \--*  LCL_VAR   byref  V23 loc19        
Initializing arg info for 116.CALL:
Argument 0 ABI info: [00..08) reg rcx
Argument 1 ABI info: [00..08) reg rdx
Args for call [000116] CALL after AddFinalArgsAndDetermineABIInfo:
CallArg[[000114].IND ref (By value), 1 reg: rcx]
CallArg[[000115].LCL_VAR long (By value), 1 reg: rdx]

Morphing args for 116.CALL:

Assertion prop in BB15:
Copy     Assertion: V22 == V00, index = #12
               [000113] -----------                         *  LCL_VAR   byref  V00 arg0         
GenTreeNode creates assertion:
               [000114] U--XG+-----                         *  IND       ref   
In BB15 New Local Constant Assertion: V00 != 0, index = #04

Sorting the arguments:
Deferred argument ('rcx'):
               [000114] U--XG+-----                         *  IND       ref   
               [000113] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         
Moved to late list
Deferred argument ('rdx'):
               [000115] -----+-----                         *  LCL_VAR   byref  V23 loc19        
Moved to late list

Register placement order:    rcx rdx 
Args for [000116].CALL after fgMorphArgs:
CallArg[[000114].IND ref (By value), 1 reg: rcx, isLate, processed]
CallArg[[000115].LCL_VAR long (By value), 1 reg: rdx, isLate, processed]
OutgoingArgsStackSize is 32


fgMorphTree BB15, STMT00032 (after)
               [000116] --CXG+-----                         *  CALL      void   <unknown method>
               [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
               [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
               [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        

Morphing BB16
BB16 ineligible for cross-block
Assertions in: #NA
fgMorphTree BB16, STMT00034 (before)
               [000118] DA---O-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----O-----                         \--*  CATCH_ARG ref   

fgMorphTree BB16, STMT00035 (before)
               [000121] DAC-G------                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --C-G------                         \--*  CALL      ref    <unknown method>
               [000119] ----------- arg0                       \--*  LCL_VAR   ref    V31 tmp6          (last use)
Initializing arg info for 120.CALL:
Argument 0 ABI info: [00..08) reg rcx
Args for call [000120] CALL after AddFinalArgsAndDetermineABIInfo:
CallArg[[000119].LCL_VAR ref (By value), 1 reg: rcx]

Morphing args for 120.CALL:

Sorting the arguments:
Deferred argument ('rcx'):
               [000119] -----+-----                         *  LCL_VAR   ref    V31 tmp6          (last use)
Moved to late list

Register placement order:    rcx 
Args for [000120].CALL after fgMorphArgs:
CallArg[[000119].LCL_VAR ref (By value), 1 reg: rcx, isLate, processed]
OutgoingArgsStackSize is 32


Morphing BB19
Using `if true` assertions from pred BB13
Assertions in: #NA
fgMorphTree BB19, STMT00036 (before)
               [000123] --C-G------                         *  CALL      void   <unknown method>
               [000122] ----------- arg0                    \--*  LCL_VAR   byref  V23 loc19         (last use)
Initializing arg info for 123.CALL:
Argument 0 ABI info: [00..08) reg rcx
Args for call [000123] CALL after AddFinalArgsAndDetermineABIInfo:
CallArg[[000122].LCL_VAR long (By value), 1 reg: rcx]

Morphing args for 123.CALL:

Sorting the arguments:
Deferred argument ('rcx'):
               [000122] -----+-----                         *  LCL_VAR   byref  V23 loc19         (last use)
Moved to late list

Register placement order:    rcx 
Args for [000123].CALL after fgMorphArgs:
CallArg[[000122].LCL_VAR long (By value), 1 reg: rcx, isLate, processed]
OutgoingArgsStackSize is 32


fgMorphTree BB19, STMT00037 (before)
               [000127] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000124] -----------                         +--*  LCL_VAR   long   V01 arg1          (last use)
               [000125] -------N---                         \--*  CNS_INT   int    0
MorphInitBlock:
PrepareDst for [000127] have not found a local var.
MorphInitBlock (after):
               [000127] -A-XG------                         *  STORE_BLK struct<72> (init)
               [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1          (last use)
               [000125] -----+-N---                         \--*  CNS_INT   int    0

fgMorphTree BB19, STMT00038 (before)
               [000131] -----------                         *  JTRUE     void  
               [000130] -----------                         \--*  EQ        int   
               [000128] -----------                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----------                            \--*  CNS_INT   ref    null
GenTreeNode creates assertion:
               [000131] -----+-----                         *  JTRUE     void  
In BB19 New Local Constant Assertion: V05 != null, index = #28

Morphing BB20
Using `if false` assertions from pred BB19
Assertions in: #28
fgMorphTree BB20, STMT00039 (before)
               [000133] --C-G------                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] ----------- this                    \--*  LCL_VAR   ref    V05 loc1          (last use)

Rejecting tail call in morph for call [000133]: Never returns
Initializing arg info for 133.CALL:
Argument 0 ABI info: [00..08) reg rcx
Args for call [000133] CALL after AddFinalArgsAndDetermineABIInfo:
CallArg[[000132].LCL_VAR ref (By value), 1 reg: rcx, wellKnown[ThisPointer]]

Morphing args for 133.CALL:

Sorting the arguments:
Deferred argument ('rcx'):
               [000132] -----+-----                         *  LCL_VAR   ref    V05 loc1          (last use)
Moved to late list

Register placement order:    rcx 
Args for [000133].CALL after fgMorphArgs:
CallArg[[000132].LCL_VAR ref (By value), 1 reg: rcx, isLate, processed, wellKnown[ThisPointer]]
OutgoingArgsStackSize is 32

Removing trees after no-return call [000133]
New final statement:
STMT00039 ( ??? ... 0x180 )
               [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1          (last use)

removing useless STMT00040 ( ??? ... ??? )
               [000134] -----------                         *  RETURN    void  
 from BB20
Converting BB20 to BBJ_THROW

Morphing BB17
Using `if true` assertions from pred BB19
Assertions in: #01
fgMorphTree BB17, STMT00033 (before)
               [000117] -----------                         *  RETURN    void  
morph assertion stats: 64 table size, 28 assertions, 0 dropped

*************** Finishing PHASE Morph - Global
Trees after Morph - Global

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB09                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB09,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB20 [0020]  1       BB19                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----+-----                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----+-----                         *  JTRUE     void  
               [000005] J----+-N---                         \--*  EQ        int   
               [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----+-----                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----+-----                         \--*  ADD       byref 
               [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000192] -----+-----                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1          (last use)

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----+-----                         *  JTRUE     void  
               [000019] J----+-N---                         \--*  EQ        int   
               [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----+-----                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----+-----                         \--*  ADD       byref 
               [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000188] -----+-----                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2          (last use)

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----+-----                         \--*  ADD       long  
               [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----+-----                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----+-----                         *  JTRUE     void  
               [000034] J----+-N---                         \--*  EQ        int   
               [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----+-----                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----+-----                         \--*  ADD       byref 
               [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000184] -----+-----                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3          (last use)

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----+-----                         \--*  ADD       long  
               [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----+-----                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----+-----                         *  JTRUE     void  
               [000049] J----+-N---                         \--*  EQ        int   
               [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----+-----                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----+-----                         \--*  ADD       byref 
               [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000180] -----+-----                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB15(0.48),BB12(0.52) (cond), preds={BB07,BB08} succs={BB12,BB15}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4          (last use)

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----+-----                         \--*  ADD       long  
               [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----+-----                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0          (last use)

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----+-----                         \--*  ADD       long  
               [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----+-----                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
               [000079] -----+-----                         *  JTRUE     void  
               [000078] J----+-N---                         \--*  EQ        int   
               [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----+-----                            \--*  CNS_INT   int    0

------------ BB12 [0011] [07B..082) -> BB18(0.2),BB13(0.8) (cond), preds={BB09} succs={BB13,BB18}

***** BB12 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----+-----                         *  JTRUE     void  
               [000137] J----+-N---                         \--*  EQ        int   
               [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----+-----                            \--*  CNS_INT   int    1

------------ BB13 [0012] [082..089) -> BB19(0.48),BB14(0.52) (cond), preds={BB12} succs={BB14,BB19}

***** BB13 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----+-----                         *  JTRUE     void  
               [000173] J----+-N---                         \--*  EQ        int   
               [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2          (last use)
               [000172] -----+-----                            \--*  CNS_INT   int    2

------------ BB14 [0013] [089..08C) -> BB15(1) (always), preds={BB13} succs={BB15}

------------ BB15 [0014] [08C..0F8) -> BB17(1) (always), preds={BB09,BB14} succs={BB17}

***** BB15 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -----+-N---                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG+-----                         *  STOREIND  int   
               [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3          (last use)
               [000087] U--XG+-----                         \--*  IND       int   
               [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         

***** BB15 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG+-----                         *  STOREIND  int   
               [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7          (last use)
               [000093] U--XG+-----                         \--*  IND       int   
               [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         

***** BB15 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG+-----                         *  STOREIND  int   
               [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11         (last use)
               [000099] U--XG+-----                         \--*  IND       int   
               [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         

***** BB15 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15         (last use)
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

***** BB15 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG+-----                         *  STOREIND  short 
               [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----+-----                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG+-----                         *  CALL      void   <unknown method>
               [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
               [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
               [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        

------------ BB16 [0015] [0F8..103) -> BB19(1) (cret), preds={} succs={BB19}

***** BB16 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----+-----                         \--*  CATCH_ARG ref   

***** BB16 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6          (last use)

------------ BB17 [0016] [103..104) (return), preds={BB15,BB19} succs={}

***** BB17 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----+-----                         *  RETURN    void  

------------ BB18 [0017] [104..166) (return), preds={BB12} succs={}

***** BB18 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG+-----                         *  STOREIND  int   
               [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
               [000140] U--XG+-----                         \--*  IND       int   
               [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3          (last use)

***** BB18 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG+-----                         *  STOREIND  int   
               [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
               [000146] U--XG+-----                         \--*  IND       int   
               [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7          (last use)

***** BB18 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG+-----                         *  STOREIND  int   
               [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
               [000152] U--XG+-----                         \--*  IND       int   
               [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11         (last use)

***** BB18 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15         (last use)

***** BB18 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UACXG+-----                         *  STOREIND  ref   
               [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
               [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19         (last use)

***** BB18 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----+-----                         *  RETURN    void  

------------ BB19 [0019] [167..17A) -> BB17(0.48),BB20(0.52) (cond), preds={BB13,BB16} succs={BB20,BB17}

***** BB19 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --CXG+-----                         *  CALL      void   <unknown method>
               [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19         (last use)

***** BB19 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1          (last use)
               [000125] -----+-N---                         \--*  CNS_INT   int    0

***** BB19 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----+-----                         *  JTRUE     void  
               [000130] J----+-N---                         \--*  EQ        int   
               [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----+-----                            \--*  CNS_INT   ref    null

------------ BB20 [0020] [17A..181) (throw), preds={BB19} succs={}

***** BB20 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1          (last use)

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Post-Morph

*************** In fgMarkDemotedImplicitByRefArgs()
Method has EH, marking method as fully interruptible

*************** Finishing PHASE Post-Morph
Trees after Post-Morph

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                           100    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                 52     52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02           100    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                 52     52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04           100    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                 52     52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06           100    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                 52     52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08           100    100 [050..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB09                 52     52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                 41.60  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                 21.63  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB09,BB14            69.63  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB17 [0016]  2       BB15,BB19            79.22  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                 10.40  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB19 [0019]  2       BB13,BB16            19.97  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB20 [0020]  1       BB19                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----+-----                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----+-----                         *  JTRUE     void  
               [000005] J----+-N---                         \--*  EQ        int   
               [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----+-----                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----+-----                         \--*  ADD       byref 
               [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000192] -----+-----                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----+-----                         *  JTRUE     void  
               [000019] J----+-N---                         \--*  EQ        int   
               [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----+-----                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----+-----                         \--*  ADD       byref 
               [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000188] -----+-----                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----+-----                         \--*  ADD       long  
               [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----+-----                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----+-----                         *  JTRUE     void  
               [000034] J----+-N---                         \--*  EQ        int   
               [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----+-----                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----+-----                         \--*  ADD       byref 
               [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000184] -----+-----                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----+-----                         \--*  ADD       long  
               [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----+-----                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----+-----                         *  JTRUE     void  
               [000049] J----+-N---                         \--*  EQ        int   
               [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----+-----                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----+-----                         \--*  ADD       byref 
               [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000180] -----+-----                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB15(0.48),BB12(0.52) (cond), preds={BB07,BB08} succs={BB12,BB15}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----+-----                         \--*  ADD       long  
               [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----+-----                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----+-----                         \--*  ADD       long  
               [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----+-----                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
               [000079] -----+-----                         *  JTRUE     void  
               [000078] J----+-N---                         \--*  EQ        int   
               [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----+-----                            \--*  CNS_INT   int    0

------------ BB12 [0011] [07B..082) -> BB18(0.2),BB13(0.8) (cond), preds={BB09} succs={BB13,BB18}

***** BB12 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----+-----                         *  JTRUE     void  
               [000137] J----+-N---                         \--*  EQ        int   
               [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----+-----                            \--*  CNS_INT   int    1

------------ BB13 [0012] [082..089) -> BB19(0.48),BB14(0.52) (cond), preds={BB12} succs={BB14,BB19}

***** BB13 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----+-----                         *  JTRUE     void  
               [000173] J----+-N---                         \--*  EQ        int   
               [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----+-----                            \--*  CNS_INT   int    2

------------ BB14 [0013] [089..08C) -> BB15(1) (always), preds={BB13} succs={BB15}

------------ BB15 [0014] [08C..0F8) -> BB17(1) (always), preds={BB09,BB14} succs={BB17}

***** BB15 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -----+-N---                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG+-----                         *  STOREIND  int   
               [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         
               [000087] U--XG+-----                         \--*  IND       int   
               [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         

***** BB15 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG+-----                         *  STOREIND  int   
               [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         
               [000093] U--XG+-----                         \--*  IND       int   
               [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         

***** BB15 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG+-----                         *  STOREIND  int   
               [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        
               [000099] U--XG+-----                         \--*  IND       int   
               [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         

***** BB15 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

***** BB15 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG+-----                         *  STOREIND  short 
               [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----+-----                         \--*  CNS_INT   int    0

***** BB15 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG+-----                         *  CALL      void   <unknown method>
               [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
               [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
               [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        

------------ BB16 [0015] [0F8..103) -> BB19(1) (cret), preds={} succs={BB19}

***** BB16 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----+-----                         \--*  CATCH_ARG ref   

***** BB16 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         

------------ BB17 [0016] [103..104) (return), preds={BB15,BB19} succs={}

***** BB17 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----+-----                         *  RETURN    void  

------------ BB18 [0017] [104..166) (return), preds={BB12} succs={}

***** BB18 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG+-----                         *  STOREIND  int   
               [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
               [000140] U--XG+-----                         \--*  IND       int   
               [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         

***** BB18 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG+-----                         *  STOREIND  int   
               [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
               [000146] U--XG+-----                         \--*  IND       int   
               [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         

***** BB18 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG+-----                         *  STOREIND  int   
               [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
               [000152] U--XG+-----                         \--*  IND       int   
               [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        

***** BB18 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        

***** BB18 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UACXG+-----                         *  STOREIND  ref   
               [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
               [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        

***** BB18 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----+-----                         *  RETURN    void  

------------ BB19 [0019] [167..17A) -> BB17(0.48),BB20(0.52) (cond), preds={BB13,BB16} succs={BB20,BB17}

***** BB19 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --CXG+-----                         *  CALL      void   <unknown method>
               [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        

***** BB19 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -----+-N---                         \--*  CNS_INT   int    0

***** BB19 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----+-----                         *  JTRUE     void  
               [000130] J----+-N---                         \--*  EQ        int   
               [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----+-----                            \--*  CNS_INT   ref    null

------------ BB20 [0020] [17A..181) (throw), preds={BB19} succs={}

***** BB20 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE GS Cookie
No GS security needed

*************** Finishing PHASE GS Cookie [no changes]

*************** Starting PHASE Compute block weights

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB09                  0.52  52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                  0.42  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                  0.22  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB09,BB14             0.70  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB17 [0016]  2       BB15,BB19             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB19 [0019]  2       BB13,BB16             0.20  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB20 [0020]  1       BB19                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

We are using the Profile Weights and fgCalledCount is 100

*************** Finishing PHASE Compute block weights [no changes]

*************** Starting PHASE Invert loops

*************** Before renumbering the basic blocks

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB15(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0011]  1       BB09                  0.52  52 [07B..082)-> BB18(0.2),BB13(0.8)     ( cond )                     i IBC
BB13 [0012]  1       BB12                  0.42  42 [082..089)-> BB19(0.48),BB14(0.52)   ( cond )                     i IBC
BB14 [0013]  1       BB13                  0.22  22 [089..08C)-> BB15(1)                 (always)                     i IBC
BB15 [0014]  2  0    BB09,BB14             0.70  70 [08C..0F8)-> BB17(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB16 [0015]  1     0                       0.00   0 [0F8..103)-> BB19(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB17 [0016]  2       BB15,BB19             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB18 [0017]  1       BB12                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB19 [0019]  2       BB13,BB16             0.20  20 [167..17A)-> BB17(0.48),BB20(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB20 [0020]  1       BB19                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB15..BB15 [08C..0F8), Handler at BB16..BB16 [0F8..103)
Renumber BB12 to BB10
Renumber BB13 to BB11
Renumber BB14 to BB12
Renumber BB15 to BB13
Renumber BB16 to BB14
Renumber BB17 to BB15
Renumber BB18 to BB16
Renumber BB19 to BB17
Renumber BB20 to BB18

*************** After renumbering the basic blocks

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB13(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB16(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB17(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0013]  1       BB11                  0.22  22 [089..08C)-> BB13(1)                 (always)                     i IBC
BB13 [0014]  2  0    BB09,BB12             0.70  70 [08C..0F8)-> BB15(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0015]  1     0                       0.00   0 [0F8..103)-> BB17(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB15 [0016]  2       BB13,BB17             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB16 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB17 [0019]  2       BB11,BB14             0.20  20 [167..17A)-> BB15(0.48),BB18(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB18 [0020]  1       BB17                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB13..BB13 [08C..0F8), Handler at BB14..BB14 [0F8..103)

New BlockSet epoch 3, # of blocks (including unused BB00): 19, bitset array size: 1 (short)

*************** Finishing PHASE Invert loops
Trees after Invert loops

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB13(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB16(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB17(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0013]  1       BB11                  0.22  22 [089..08C)-> BB13(1)                 (always)                     i IBC
BB13 [0014]  2  0    BB09,BB12             0.70  70 [08C..0F8)-> BB15(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0015]  1     0                       0.00   0 [0F8..103)-> BB17(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB15 [0016]  2       BB13,BB17             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB16 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB17 [0019]  2       BB11,BB14             0.20  20 [167..17A)-> BB15(0.48),BB18(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB18 [0020]  1       BB17                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----+-----                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----+-----                         *  JTRUE     void  
               [000005] J----+-N---                         \--*  EQ        int   
               [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----+-----                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----+-----                         \--*  ADD       byref 
               [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000192] -----+-----                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----+-----                         *  JTRUE     void  
               [000019] J----+-N---                         \--*  EQ        int   
               [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----+-----                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----+-----                         \--*  ADD       byref 
               [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000188] -----+-----                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----+-----                         \--*  ADD       long  
               [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----+-----                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----+-----                         *  JTRUE     void  
               [000034] J----+-N---                         \--*  EQ        int   
               [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----+-----                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----+-----                         \--*  ADD       byref 
               [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000184] -----+-----                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----+-----                         \--*  ADD       long  
               [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----+-----                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----+-----                         *  JTRUE     void  
               [000049] J----+-N---                         \--*  EQ        int   
               [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----+-----                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----+-----                         \--*  ADD       byref 
               [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000180] -----+-----                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB13(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB13}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----+-----                         \--*  ADD       long  
               [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----+-----                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----+-----                         \--*  ADD       long  
               [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----+-----                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
               [000079] -----+-----                         *  JTRUE     void  
               [000078] J----+-N---                         \--*  EQ        int   
               [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----+-----                            \--*  CNS_INT   int    0

------------ BB10 [0011] [07B..082) -> BB16(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB16}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----+-----                         *  JTRUE     void  
               [000137] J----+-N---                         \--*  EQ        int   
               [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----+-----                            \--*  CNS_INT   int    1

------------ BB11 [0012] [082..089) -> BB17(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB17}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----+-----                         *  JTRUE     void  
               [000173] J----+-N---                         \--*  EQ        int   
               [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----+-----                            \--*  CNS_INT   int    2

------------ BB12 [0013] [089..08C) -> BB13(1) (always), preds={BB11} succs={BB13}

------------ BB13 [0014] [08C..0F8) -> BB15(1) (always), preds={BB09,BB12} succs={BB15}

***** BB13 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -----+-N---                         \--*  CNS_INT   int    0

***** BB13 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG+-----                         *  STOREIND  int   
               [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         
               [000087] U--XG+-----                         \--*  IND       int   
               [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         

***** BB13 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG+-----                         *  STOREIND  int   
               [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         
               [000093] U--XG+-----                         \--*  IND       int   
               [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         

***** BB13 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG+-----                         *  STOREIND  int   
               [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        
               [000099] U--XG+-----                         \--*  IND       int   
               [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         

***** BB13 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

***** BB13 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG+-----                         *  STOREIND  short 
               [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----+-----                         \--*  CNS_INT   int    0

***** BB13 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG+-----                         *  CALL      void   <unknown method>
               [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
               [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
               [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        

------------ BB14 [0015] [0F8..103) -> BB17(1) (cret), preds={} succs={BB17}

***** BB14 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----+-----                         \--*  CATCH_ARG ref   

***** BB14 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         

------------ BB15 [0016] [103..104) (return), preds={BB13,BB17} succs={}

***** BB15 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----+-----                         *  RETURN    void  

------------ BB16 [0017] [104..166) (return), preds={BB10} succs={}

***** BB16 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG+-----                         *  STOREIND  int   
               [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
               [000140] U--XG+-----                         \--*  IND       int   
               [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         

***** BB16 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG+-----                         *  STOREIND  int   
               [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
               [000146] U--XG+-----                         \--*  IND       int   
               [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         

***** BB16 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG+-----                         *  STOREIND  int   
               [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
               [000152] U--XG+-----                         \--*  IND       int   
               [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        

***** BB16 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        

***** BB16 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UACXG+-----                         *  STOREIND  ref   
               [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
               [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        

***** BB16 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----+-----                         *  RETURN    void  

------------ BB17 [0019] [167..17A) -> BB15(0.48),BB18(0.52) (cond), preds={BB11,BB14} succs={BB18,BB15}

***** BB17 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --CXG+-----                         *  CALL      void   <unknown method>
               [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        

***** BB17 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -----+-N---                         \--*  CNS_INT   int    0

***** BB17 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----+-----                         *  JTRUE     void  
               [000130] J----+-N---                         \--*  EQ        int   
               [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----+-----                            \--*  CNS_INT   ref    null

------------ BB18 [0020] [17A..181) (throw), preds={BB17} succs={}

***** BB18 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Optimize control flow

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB13(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB16(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB17(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0013]  1       BB11                  0.22  22 [089..08C)-> BB13(1)                 (always)                     i IBC
BB13 [0014]  2  0    BB09,BB12             0.70  70 [08C..0F8)-> BB15(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0015]  1     0                       0.00   0 [0F8..103)-> BB17(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB15 [0016]  2       BB13,BB17             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB16 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB17 [0019]  2       BB11,BB14             0.20  20 [167..17A)-> BB15(0.48),BB18(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB18 [0020]  1       BB17                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Considering uncond to cond BB02 -> BB03
Considering uncond to cond BB04 -> BB05
Considering uncond to cond BB06 -> BB07
Considering uncond to cond BB08 -> BB09
Considering uncond to cond BB12 -> BB13
fgRemoveBlock BB12, unreachable=false
Removing empty BB12
Considering uncond to cond BB13 -> BB15
Considering uncond to cond BB02 -> BB03
Considering uncond to cond BB04 -> BB05
Considering uncond to cond BB06 -> BB07
Considering uncond to cond BB08 -> BB09
Considering uncond to cond BB13 -> BB15

After updating the flow graph:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB13(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB16(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB17(0.48),BB13(0.52)   ( cond )                     i IBC
BB13 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB15(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0015]  1     0                       0.00   0 [0F8..103)-> BB17(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB15 [0016]  2       BB13,BB17             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB16 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB17 [0019]  2       BB11,BB14             0.20  20 [167..17A)-> BB15(0.48),BB18(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB18 [0020]  1       BB17                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB13..BB13 [08C..0F8), Handler at BB14..BB14 [0F8..103)
*************** In fgDebugCheckBBlist

*************** In fgExpandRarelyRunBlocks()
*************** In fgReorderBlocks()

Initial BasicBlocks
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB13(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB16(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB17(0.48),BB13(0.52)   ( cond )                     i IBC
BB13 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB15(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0015]  1     0                       0.00   0 [0F8..103)-> BB17(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB15 [0016]  2       BB13,BB17             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB16 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB17 [0019]  2       BB11,BB14             0.20  20 [167..17A)-> BB15(0.48),BB18(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB18 [0020]  1       BB17                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Optimize control flow
Trees after Optimize control flow

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB13(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB16(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB17(0.48),BB13(0.52)   ( cond )                     i IBC
BB13 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB15(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0015]  1     0                       0.00   0 [0F8..103)-> BB17(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB15 [0016]  2       BB13,BB17             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB16 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB17 [0019]  2       BB11,BB14             0.20  20 [167..17A)-> BB15(0.48),BB18(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB18 [0020]  1       BB17                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----+-----                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----+-----                         *  JTRUE     void  
               [000005] J----+-N---                         \--*  EQ        int   
               [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----+-----                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----+-----                         \--*  ADD       byref 
               [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000192] -----+-----                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----+-----                         *  JTRUE     void  
               [000019] J----+-N---                         \--*  EQ        int   
               [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----+-----                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----+-----                         \--*  ADD       byref 
               [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000188] -----+-----                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----+-----                         \--*  ADD       long  
               [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----+-----                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----+-----                         *  JTRUE     void  
               [000034] J----+-N---                         \--*  EQ        int   
               [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----+-----                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----+-----                         \--*  ADD       byref 
               [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000184] -----+-----                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----+-----                         \--*  ADD       long  
               [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----+-----                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----+-----                         *  JTRUE     void  
               [000049] J----+-N---                         \--*  EQ        int   
               [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----+-----                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----+-----                         \--*  ADD       byref 
               [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000180] -----+-----                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB13(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB13}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----+-----                         \--*  ADD       long  
               [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----+-----                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----+-----                         \--*  ADD       long  
               [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----+-----                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
               [000079] -----+-----                         *  JTRUE     void  
               [000078] J----+-N---                         \--*  EQ        int   
               [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----+-----                            \--*  CNS_INT   int    0

------------ BB10 [0011] [07B..082) -> BB16(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB16}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----+-----                         *  JTRUE     void  
               [000137] J----+-N---                         \--*  EQ        int   
               [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----+-----                            \--*  CNS_INT   int    1

------------ BB11 [0012] [082..089) -> BB17(0.48),BB13(0.52) (cond), preds={BB10} succs={BB13,BB17}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----+-----                         *  JTRUE     void  
               [000173] J----+-N---                         \--*  EQ        int   
               [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----+-----                            \--*  CNS_INT   int    2

------------ BB13 [0014] [089..0F8) -> BB15(1) (always), preds={BB09,BB11} succs={BB15}

***** BB13 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -----+-N---                         \--*  CNS_INT   int    0

***** BB13 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG+-----                         *  STOREIND  int   
               [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         
               [000087] U--XG+-----                         \--*  IND       int   
               [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         

***** BB13 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG+-----                         *  STOREIND  int   
               [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         
               [000093] U--XG+-----                         \--*  IND       int   
               [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         

***** BB13 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG+-----                         *  STOREIND  int   
               [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        
               [000099] U--XG+-----                         \--*  IND       int   
               [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         

***** BB13 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

***** BB13 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG+-----                         *  STOREIND  short 
               [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----+-----                         \--*  CNS_INT   int    0

***** BB13 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG+-----                         *  CALL      void   <unknown method>
               [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
               [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
               [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        

------------ BB14 [0015] [0F8..103) -> BB17(1) (cret), preds={} succs={BB17}

***** BB14 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----+-----                         \--*  CATCH_ARG ref   

***** BB14 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         

------------ BB15 [0016] [103..104) (return), preds={BB13,BB17} succs={}

***** BB15 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----+-----                         *  RETURN    void  

------------ BB16 [0017] [104..166) (return), preds={BB10} succs={}

***** BB16 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG+-----                         *  STOREIND  int   
               [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
               [000140] U--XG+-----                         \--*  IND       int   
               [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         

***** BB16 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG+-----                         *  STOREIND  int   
               [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
               [000146] U--XG+-----                         \--*  IND       int   
               [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         

***** BB16 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG+-----                         *  STOREIND  int   
               [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
               [000152] U--XG+-----                         \--*  IND       int   
               [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        

***** BB16 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        

***** BB16 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UACXG+-----                         *  STOREIND  ref   
               [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
               [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        

***** BB16 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----+-----                         *  RETURN    void  

------------ BB17 [0019] [167..17A) -> BB15(0.48),BB18(0.52) (cond), preds={BB11,BB14} succs={BB18,BB15}

***** BB17 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --CXG+-----                         *  CALL      void   <unknown method>
               [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        

***** BB17 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -----+-N---                         \--*  CNS_INT   int    0

***** BB17 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----+-----                         *  JTRUE     void  
               [000130] J----+-N---                         \--*  EQ        int   
               [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----+-----                            \--*  CNS_INT   ref    null

------------ BB18 [0020] [17A..181) (throw), preds={BB17} succs={}

***** BB18 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Post-morph head and tail merge

*************** Finishing PHASE Post-morph head and tail merge
Trees after Post-morph head and tail merge

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB13(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB16(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB17(0.48),BB13(0.52)   ( cond )                     i IBC
BB13 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB15(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0015]  1     0                       0.00   0 [0F8..103)-> BB17(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB15 [0016]  2       BB13,BB17             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB16 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB17 [0019]  2       BB11,BB14             0.20  20 [167..17A)-> BB15(0.48),BB18(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB18 [0020]  1       BB17                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----+-----                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----+-----                         *  JTRUE     void  
               [000005] J----+-N---                         \--*  EQ        int   
               [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----+-----                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----+-----                         \--*  ADD       byref 
               [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000192] -----+-----                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----+-----                         *  JTRUE     void  
               [000019] J----+-N---                         \--*  EQ        int   
               [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----+-----                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----+-----                         \--*  ADD       byref 
               [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000188] -----+-----                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----+-----                         \--*  ADD       long  
               [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----+-----                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----+-----                         *  JTRUE     void  
               [000034] J----+-N---                         \--*  EQ        int   
               [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----+-----                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----+-----                         \--*  ADD       byref 
               [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000184] -----+-----                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----+-----                         \--*  ADD       long  
               [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----+-----                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----+-----                         *  JTRUE     void  
               [000049] J----+-N---                         \--*  EQ        int   
               [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----+-----                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----+-----                         \--*  ADD       byref 
               [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000180] -----+-----                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB13(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB13}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----+-----                         \--*  ADD       long  
               [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----+-----                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----+-----                         \--*  ADD       long  
               [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----+-----                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
               [000079] -----+-----                         *  JTRUE     void  
               [000078] J----+-N---                         \--*  EQ        int   
               [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----+-----                            \--*  CNS_INT   int    0

------------ BB10 [0011] [07B..082) -> BB16(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB16}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----+-----                         *  JTRUE     void  
               [000137] J----+-N---                         \--*  EQ        int   
               [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----+-----                            \--*  CNS_INT   int    1

------------ BB11 [0012] [082..089) -> BB17(0.48),BB13(0.52) (cond), preds={BB10} succs={BB13,BB17}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----+-----                         *  JTRUE     void  
               [000173] J----+-N---                         \--*  EQ        int   
               [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----+-----                            \--*  CNS_INT   int    2

------------ BB13 [0014] [089..0F8) -> BB15(1) (always), preds={BB09,BB11} succs={BB15}

***** BB13 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -----+-N---                         \--*  CNS_INT   int    0

***** BB13 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG+-----                         *  STOREIND  int   
               [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         
               [000087] U--XG+-----                         \--*  IND       int   
               [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         

***** BB13 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG+-----                         *  STOREIND  int   
               [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         
               [000093] U--XG+-----                         \--*  IND       int   
               [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         

***** BB13 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG+-----                         *  STOREIND  int   
               [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        
               [000099] U--XG+-----                         \--*  IND       int   
               [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         

***** BB13 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

***** BB13 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG+-----                         *  STOREIND  short 
               [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----+-----                         \--*  CNS_INT   int    0

***** BB13 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG+-----                         *  CALL      void   <unknown method>
               [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
               [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
               [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        

------------ BB14 [0015] [0F8..103) -> BB17(1) (cret), preds={} succs={BB17}

***** BB14 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----+-----                         \--*  CATCH_ARG ref   

***** BB14 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         

------------ BB15 [0016] [103..104) (return), preds={BB13,BB17} succs={}

***** BB15 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----+-----                         *  RETURN    void  

------------ BB16 [0017] [104..166) (return), preds={BB10} succs={}

***** BB16 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG+-----                         *  STOREIND  int   
               [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
               [000140] U--XG+-----                         \--*  IND       int   
               [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         

***** BB16 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG+-----                         *  STOREIND  int   
               [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
               [000146] U--XG+-----                         \--*  IND       int   
               [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         

***** BB16 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG+-----                         *  STOREIND  int   
               [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
               [000152] U--XG+-----                         \--*  IND       int   
               [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        

***** BB16 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        

***** BB16 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UACXG+-----                         *  STOREIND  ref   
               [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
               [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        

***** BB16 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----+-----                         *  RETURN    void  

------------ BB17 [0019] [167..17A) -> BB15(0.48),BB18(0.52) (cond), preds={BB11,BB14} succs={BB18,BB15}

***** BB17 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --CXG+-----                         *  CALL      void   <unknown method>
               [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        

***** BB17 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -----+-N---                         \--*  CNS_INT   int    0

***** BB17 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----+-----                         *  JTRUE     void  
               [000130] J----+-N---                         \--*  EQ        int   
               [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----+-----                            \--*  CNS_INT   ref    null

------------ BB18 [0020] [17A..181) (throw), preds={BB17} succs={}

***** BB18 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Canonicalize entry

*************** Finishing PHASE Canonicalize entry [no changes]

*************** Starting PHASE DFS blocks and remove dead code 2

*************** Finishing PHASE DFS blocks and remove dead code 2 [no changes]

*************** Starting PHASE Find loops
*************** In optFindLoopsPhase()

*************** Before renumbering the basic blocks

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB13(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB16(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB17(0.48),BB13(0.52)   ( cond )                     i IBC
BB13 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB15(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0015]  1     0                       0.00   0 [0F8..103)-> BB17(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB15 [0016]  2       BB13,BB17             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB16 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB17 [0019]  2       BB11,BB14             0.20  20 [167..17A)-> BB15(0.48),BB18(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB18 [0020]  1       BB17                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB13..BB13 [08C..0F8), Handler at BB14..BB14 [0F8..103)
Renumber BB13 to BB12
Renumber BB14 to BB13
Renumber BB15 to BB14
Renumber BB16 to BB15
Renumber BB17 to BB16
Renumber BB18 to BB17

*************** After renumbering the basic blocks

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0.00   0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB12..BB12 [08C..0F8), Handler at BB13..BB13 [0F8..103)

New BlockSet epoch 4, # of blocks (including unused BB00): 18, bitset array size: 1 (short)
Identifying loops in DFS tree with following reverse post order:
RPO -> BB [pre, post]
00 -> BB01[0, 16]
01 -> BB02[1, 15]
02 -> BB03[2, 14]
03 -> BB04[3, 13]
04 -> BB05[4, 12]
05 -> BB06[5, 11]
06 -> BB07[6, 10]
07 -> BB08[7, 9]
08 -> BB09[8, 8]
09 -> BB10[9, 7]
10 -> BB15[16, 6]
11 -> BB11[10, 5]
12 -> BB12[11, 4]
13 -> BB13[13, 3]
14 -> BB16[14, 2]
15 -> BB17[15, 1]
16 -> BB14[12, 0]
Flow graph has no cycles; skipping identification of natural loops

*************** Before renumbering the basic blocks

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0.00   0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB12..BB12 [08C..0F8), Handler at BB13..BB13 [0F8..103)
=============== No blocks renumbered!

*************** Finishing PHASE Find loops
Trees after Find loops

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0.00   0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----+-----                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----+-----                         *  JTRUE     void  
               [000005] J----+-N---                         \--*  EQ        int   
               [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----+-----                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----+-----                         \--*  ADD       byref 
               [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000192] -----+-----                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----+-----                         *  JTRUE     void  
               [000019] J----+-N---                         \--*  EQ        int   
               [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----+-----                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----+-----                         \--*  ADD       byref 
               [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000188] -----+-----                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----+-----                         \--*  ADD       long  
               [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----+-----                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----+-----                         *  JTRUE     void  
               [000034] J----+-N---                         \--*  EQ        int   
               [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----+-----                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----+-----                         \--*  ADD       byref 
               [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000184] -----+-----                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----+-----                         \--*  ADD       long  
               [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----+-----                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----+-----                         *  JTRUE     void  
               [000049] J----+-N---                         \--*  EQ        int   
               [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----+-----                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----+-----                         \--*  ADD       byref 
               [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000180] -----+-----                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----+-----                         \--*  ADD       long  
               [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----+-----                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----+-----                         \--*  ADD       long  
               [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----+-----                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
               [000079] -----+-----                         *  JTRUE     void  
               [000078] J----+-N---                         \--*  EQ        int   
               [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----+-----                            \--*  CNS_INT   int    0

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----+-----                         *  JTRUE     void  
               [000137] J----+-N---                         \--*  EQ        int   
               [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----+-----                            \--*  CNS_INT   int    1

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----+-----                         *  JTRUE     void  
               [000173] J----+-N---                         \--*  EQ        int   
               [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----+-----                            \--*  CNS_INT   int    2

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -----+-N---                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG+-----                         *  STOREIND  int   
               [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         
               [000087] U--XG+-----                         \--*  IND       int   
               [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG+-----                         *  STOREIND  int   
               [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         
               [000093] U--XG+-----                         \--*  IND       int   
               [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG+-----                         *  STOREIND  int   
               [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        
               [000099] U--XG+-----                         \--*  IND       int   
               [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG+-----                         *  STOREIND  short 
               [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----+-----                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG+-----                         *  CALL      void   <unknown method>
               [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
               [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
               [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----+-----                         \--*  CATCH_ARG ref   

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----+-----                         *  RETURN    void  

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG+-----                         *  STOREIND  int   
               [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
               [000140] U--XG+-----                         \--*  IND       int   
               [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG+-----                         *  STOREIND  int   
               [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
               [000146] U--XG+-----                         \--*  IND       int   
               [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG+-----                         *  STOREIND  int   
               [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
               [000152] U--XG+-----                         \--*  IND       int   
               [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UACXG+-----                         *  STOREIND  ref   
               [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
               [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----+-----                         *  RETURN    void  

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --CXG+-----                         *  CALL      void   <unknown method>
               [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -----+-N---                         \--*  CNS_INT   int    0

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----+-----                         *  JTRUE     void  
               [000130] J----+-N---                         \--*  EQ        int   
               [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----+-----                            \--*  CNS_INT   ref    null

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Set block weights
After computing the dominance tree:
BB01 : BB02 BB03
BB03 : BB04 BB05
BB05 : BB06 BB07
BB07 : BB08 BB09
BB09 : BB10 BB12 BB13 BB16 BB14
BB10 : BB15 BB11
BB16 : BB17


After computing reachability sets:
------------------------------------------------
BBnum  Reachable by 
------------------------------------------------
BB01 : BB01
BB02 : BB02 BB01
BB03 : BB03 BB02 BB01
BB04 : BB04 BB03 BB02 BB01
BB05 : BB05 BB04 BB03 BB02 BB01
BB06 : BB06 BB05 BB04 BB03 BB02 BB01
BB07 : BB07 BB06 BB05 BB04 BB03 BB02 BB01
BB08 : BB08 BB07 BB06 BB05 BB04 BB03 BB02 BB01
BB09 : BB09 BB08 BB07 BB06 BB05 BB04 BB03 BB02 BB01
BB10 : BB10 BB09 BB08 BB07 BB06 BB05 BB04 BB03 BB02 BB01
BB11 : BB11 BB10 BB09 BB08 BB07 BB06 BB05 BB04 BB03 BB02 BB01
BB12 : BB12 BB11 BB10 BB09 BB08 BB07 BB06 BB05 BB04 BB03 BB02 BB01
BB13 : BB13
BB14 : BB14 BB16 BB13 BB12 BB11 BB10 BB09 BB08 BB07 BB06 BB05 BB04 BB03 BB02 BB01
BB15 : BB15 BB10 BB09 BB08 BB07 BB06 BB05 BB04 BB03 BB02 BB01
BB16 : BB16 BB13 BB11 BB10 BB09 BB08 BB07 BB06 BB05 BB04 BB03 BB02 BB01
BB17 : BB17 BB16 BB13 BB11 BB10 BB09 BB08 BB07 BB06 BB05 BB04 BB03 BB02 BB01
Return blocks: BB15 BB14

*************** Finishing PHASE Set block weights
Trees after Set block weights

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC rare keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----+-----                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----+-----                         *  JTRUE     void  
               [000005] J----+-N---                         \--*  EQ        int   
               [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----+-----                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----+-----                         \--*  ADD       byref 
               [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000192] -----+-----                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----+-----                         *  JTRUE     void  
               [000019] J----+-N---                         \--*  EQ        int   
               [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----+-----                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----+-----                         \--*  ADD       byref 
               [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000188] -----+-----                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----+-----                         \--*  ADD       long  
               [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----+-----                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----+-----                         *  JTRUE     void  
               [000034] J----+-N---                         \--*  EQ        int   
               [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----+-----                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----+-----                         \--*  ADD       byref 
               [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000184] -----+-----                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----+-----                         \--*  ADD       long  
               [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----+-----                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----+-----                         *  JTRUE     void  
               [000049] J----+-N---                         \--*  EQ        int   
               [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----+-----                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----+-----                         \--*  ADD       byref 
               [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000180] -----+-----                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----+-----                         \--*  ADD       long  
               [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----+-----                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----+-----                         \--*  ADD       long  
               [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----+-----                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
               [000079] -----+-----                         *  JTRUE     void  
               [000078] J----+-N---                         \--*  EQ        int   
               [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----+-----                            \--*  CNS_INT   int    0

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----+-----                         *  JTRUE     void  
               [000137] J----+-N---                         \--*  EQ        int   
               [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----+-----                            \--*  CNS_INT   int    1

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----+-----                         *  JTRUE     void  
               [000173] J----+-N---                         \--*  EQ        int   
               [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----+-----                            \--*  CNS_INT   int    2

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -----+-N---                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG+-----                         *  STOREIND  int   
               [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         
               [000087] U--XG+-----                         \--*  IND       int   
               [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG+-----                         *  STOREIND  int   
               [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         
               [000093] U--XG+-----                         \--*  IND       int   
               [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG+-----                         *  STOREIND  int   
               [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        
               [000099] U--XG+-----                         \--*  IND       int   
               [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG+-----                         *  STOREIND  short 
               [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----+-----                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG+-----                         *  CALL      void   <unknown method>
               [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
               [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
               [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----+-----                         \--*  CATCH_ARG ref   

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----+-----                         *  RETURN    void  

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG+-----                         *  STOREIND  int   
               [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
               [000140] U--XG+-----                         \--*  IND       int   
               [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG+-----                         *  STOREIND  int   
               [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
               [000146] U--XG+-----                         \--*  IND       int   
               [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG+-----                         *  STOREIND  int   
               [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
               [000152] U--XG+-----                         \--*  IND       int   
               [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UACXG+-----                         *  STOREIND  ref   
               [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
               [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----+-----                         *  RETURN    void  

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --CXG+-----                         *  CALL      void   <unknown method>
               [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -----+-N---                         \--*  CNS_INT   int    0

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----+-----                         *  JTRUE     void  
               [000130] J----+-N---                         \--*  EQ        int   
               [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----+-----                            \--*  CNS_INT   ref    null

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Clone loops

*************** In optCloneLoops()
  No loops to clone

*************** Finishing PHASE Clone loops [no changes]

*************** Starting PHASE Unroll loops

*************** Finishing PHASE Unroll loops [no changes]

*************** Starting PHASE Compute dominators

*************** Finishing PHASE Compute dominators [no changes]

*************** Starting PHASE Morph array ops
No multi-dimensional array references in the function

*************** Finishing PHASE Morph array ops [no changes]

*************** Starting PHASE Mark local vars

*************** In lvaMarkLocalVars()
lvaGrabTemp returning 32 (V32 tmp7) (a long lifetime temp) called for PSPSym.

Local V32 should not be enregistered because: VM needs stack addr

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***

*** marking local variables in block BB01 (weight=1)
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----+-----                         \--*  CNS_INT   ref    null
New refCnts for V05: refCnt =  1, refCntWtd = 1
Marking EH Var V05 as a register candidate.
STMT00002 ( ??? ... 0x006 )
               [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         
New refCnts for V26: refCnt =  1, refCntWtd = 1
Marking EH Var V26 as a register candidate.
New refCnts for V00: refCnt =  1, refCntWtd = 1
STMT00001 ( ??? ... 0x006 )
               [000006] -----+-----                         *  JTRUE     void  
               [000005] J----+-N---                         \--*  EQ        int   
               [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----+-----                            \--*  CNS_INT   byref  0
New refCnts for V00: refCnt =  2, refCntWtd = 2

*** marking local variables in block BB02 (weight=0.52)
STMT00059 ( ??? ... 0x00C )
               [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----+-----                         \--*  ADD       byref 
               [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000192] -----+-----                            \--*  CNS_INT   long   8
New refCnts for V26: refCnt =  2, refCntWtd = 1.52
V26 has multiple definitions. Disqualified as a single-def register candidate.
New refCnts for V00: refCnt =  3, refCntWtd = 2.52

*** marking local variables in block BB03 (weight=1)
STMT00003 ( ??? ... 0x00D )
               [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1         
New refCnts for V06: refCnt =  1, refCntWtd = 1
Marking EH Var V06 as a register candidate.
New refCnts for V26: refCnt =  3, refCntWtd = 2.52
STMT00004 ( ??? ... 0x013 )
               [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         
New refCnts for V07: refCnt =  1, refCntWtd = 1
Marking EH Var V07 as a register candidate.
New refCnts for V01: refCnt =  1, refCntWtd = 1
STMT00006 ( ??? ... 0x01A )
               [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         
New refCnts for V27: refCnt =  1, refCntWtd = 1
Marking EH Var V27 as a register candidate.
New refCnts for V00: refCnt =  4, refCntWtd = 3.52
STMT00005 ( ??? ... 0x01A )
               [000020] -----+-----                         *  JTRUE     void  
               [000019] J----+-N---                         \--*  EQ        int   
               [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----+-----                            \--*  CNS_INT   byref  0
New refCnts for V00: refCnt =  5, refCntWtd = 4.52

*** marking local variables in block BB04 (weight=0.52)
STMT00058 ( ??? ... 0x021 )
               [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----+-----                         \--*  ADD       byref 
               [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000188] -----+-----                            \--*  CNS_INT   long   12
New refCnts for V27: refCnt =  2, refCntWtd = 1.52
V27 has multiple definitions. Disqualified as a single-def register candidate.
New refCnts for V00: refCnt =  6, refCntWtd = 5.04

*** marking local variables in block BB05 (weight=1)
STMT00007 ( ??? ... 0x022 )
               [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2         
New refCnts for V10: refCnt =  1, refCntWtd = 1
Marking EH Var V10 as a register candidate.
New refCnts for V27: refCnt =  3, refCntWtd = 2.52
STMT00008 ( ??? ... 0x029 )
               [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----+-----                         \--*  ADD       long  
               [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----+-----                            \--*  CNS_INT   long   4
New refCnts for V11: refCnt =  1, refCntWtd = 1
Marking EH Var V11 as a register candidate.
New refCnts for V01: refCnt =  2, refCntWtd = 2
STMT00010 ( ??? ... 0x031 )
               [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         
New refCnts for V28: refCnt =  1, refCntWtd = 1
Marking EH Var V28 as a register candidate.
New refCnts for V00: refCnt =  7, refCntWtd = 6.04
STMT00009 ( ??? ... 0x031 )
               [000035] -----+-----                         *  JTRUE     void  
               [000034] J----+-N---                         \--*  EQ        int   
               [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----+-----                            \--*  CNS_INT   byref  0
New refCnts for V00: refCnt =  8, refCntWtd = 7.04

*** marking local variables in block BB06 (weight=0.52)
STMT00057 ( ??? ... 0x038 )
               [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----+-----                         \--*  ADD       byref 
               [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000184] -----+-----                            \--*  CNS_INT   long   16
New refCnts for V28: refCnt =  2, refCntWtd = 1.52
V28 has multiple definitions. Disqualified as a single-def register candidate.
New refCnts for V00: refCnt =  9, refCntWtd = 7.56

*** marking local variables in block BB07 (weight=1)
STMT00011 ( ??? ... 0x039 )
               [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3         
New refCnts for V14: refCnt =  1, refCntWtd = 1
Marking EH Var V14 as a register candidate.
New refCnts for V28: refCnt =  3, refCntWtd = 2.52
STMT00012 ( ??? ... 0x040 )
               [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----+-----                         \--*  ADD       long  
               [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----+-----                            \--*  CNS_INT   long   8
New refCnts for V15: refCnt =  1, refCntWtd = 1
Marking EH Var V15 as a register candidate.
New refCnts for V01: refCnt =  3, refCntWtd = 3
STMT00014 ( ??? ... 0x048 )
               [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         
New refCnts for V29: refCnt =  1, refCntWtd = 1
Marking EH Var V29 as a register candidate.
New refCnts for V00: refCnt = 10, refCntWtd = 8.56
STMT00013 ( ??? ... 0x048 )
               [000050] -----+-----                         *  JTRUE     void  
               [000049] J----+-N---                         \--*  EQ        int   
               [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----+-----                            \--*  CNS_INT   byref  0
New refCnts for V00: refCnt = 11, refCntWtd = 9.56

*** marking local variables in block BB08 (weight=0.52)
STMT00056 ( ??? ... 0x04F )
               [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----+-----                         \--*  ADD       byref 
               [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000180] -----+-----                            \--*  CNS_INT   long   24
New refCnts for V29: refCnt =  2, refCntWtd = 1.52
V29 has multiple definitions. Disqualified as a single-def register candidate.
New refCnts for V00: refCnt = 12, refCntWtd = 10.08

*** marking local variables in block BB09 (weight=1)
STMT00015 ( ??? ... 0x050 )
               [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4         
New refCnts for V18: refCnt =  1, refCntWtd = 1
Marking EH Var V18 as a register candidate.
New refCnts for V29: refCnt =  3, refCntWtd = 2.52
STMT00016 ( ??? ... 0x058 )
               [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----+-----                         \--*  ADD       long  
               [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----+-----                            \--*  CNS_INT   long   16
New refCnts for V19: refCnt =  1, refCntWtd = 1
Marking EH Var V19 as a register candidate.
New refCnts for V01: refCnt =  4, refCntWtd = 4
STMT00019 ( ??? ... 0x067 )
               [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         
New refCnts for V22: refCnt =  1, refCntWtd = 1
Marking EH Var V22 as a register candidate.
New refCnts for V00: refCnt = 13, refCntWtd = 11.08
STMT00020 ( ??? ... 0x06F )
               [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----+-----                         \--*  ADD       long  
               [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----+-----                            \--*  CNS_INT   long   48
New refCnts for V23: refCnt =  1, refCntWtd = 1
Marking EH Var V23 as a register candidate.
New refCnts for V01: refCnt =  5, refCntWtd = 5
STMT00021 ( ??? ... 0x076 )
               [000079] -----+-----                         *  JTRUE     void  
               [000078] J----+-N---                         \--*  EQ        int   
               [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----+-----                            \--*  CNS_INT   int    0
New refCnts for V02: refCnt =  1, refCntWtd = 1

*** marking local variables in block BB10 (weight=0.52)
STMT00041 ( ??? ... 0x07D )
               [000138] -----+-----                         *  JTRUE     void  
               [000137] J----+-N---                         \--*  EQ        int   
               [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----+-----                            \--*  CNS_INT   int    1
New refCnts for V02: refCnt =  2, refCntWtd = 1.52

*** marking local variables in block BB11 (weight=0.42)
STMT00054 ( ??? ... 0x084 )
               [000174] -----+-----                         *  JTRUE     void  
               [000173] J----+-N---                         \--*  EQ        int   
               [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----+-----                            \--*  CNS_INT   int    2
New refCnts for V02: refCnt =  3, refCntWtd = 1.94

*** marking local variables in block BB12 (weight=0.70)
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -----+-N---                         \--*  CNS_INT   int    0
New refCnts for V01: refCnt =  6, refCntWtd = 5.70
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG+-----                         *  STOREIND  int   
               [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         
               [000087] U--XG+-----                         \--*  IND       int   
               [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         
New refCnts for V07: refCnt =  2, refCntWtd = 1.70
New refCnts for V26: refCnt =  4, refCntWtd = 3.22
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG+-----                         *  STOREIND  int   
               [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         
               [000093] U--XG+-----                         \--*  IND       int   
               [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         
New refCnts for V11: refCnt =  2, refCntWtd = 1.70
New refCnts for V27: refCnt =  4, refCntWtd = 3.22
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG+-----                         *  STOREIND  int   
               [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        
               [000099] U--XG+-----                         \--*  IND       int   
               [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         
New refCnts for V15: refCnt =  2, refCntWtd = 1.70
New refCnts for V28: refCnt =  4, refCntWtd = 3.22
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         
New refCnts for V19: refCnt =  2, refCntWtd = 1.70
New refCnts for V29: refCnt =  4, refCntWtd = 3.22
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG+-----                         *  STOREIND  short 
               [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----+-----                         \--*  CNS_INT   int    0
New refCnts for V23: refCnt =  2, refCntWtd = 1.70
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG+-----                         *  CALL      void   <unknown method>
               [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
               [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
               [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        
New refCnts for V00: refCnt = 14, refCntWtd = 11.78
New refCnts for V23: refCnt =  3, refCntWtd = 2.39

*** marking local variables in block BB13 (weight=0)
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----+-----                         \--*  CATCH_ARG ref   
New refCnts for V31: refCnt =  1, refCntWtd = 0
Marking EH Var V31 as a register candidate.
STMT00035 ( ??? ... ??? )
               [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         
New refCnts for V05: refCnt =  2, refCntWtd = 1
V05 has multiple definitions. Disqualified as a single-def register candidate.
New refCnts for V31: refCnt =  2, refCntWtd = 0

*** marking local variables in block BB14 (weight=0.79)
STMT00033 ( ??? ... 0x103 )
               [000117] -----+-----                         *  RETURN    void  

*** marking local variables in block BB15 (weight=0.10)
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG+-----                         *  STOREIND  int   
               [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
               [000140] U--XG+-----                         \--*  IND       int   
               [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         
New refCnts for V26: refCnt =  5, refCntWtd = 3.32
New refCnts for V07: refCnt =  3, refCntWtd = 1.80
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG+-----                         *  STOREIND  int   
               [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
               [000146] U--XG+-----                         \--*  IND       int   
               [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         
New refCnts for V27: refCnt =  5, refCntWtd = 3.32
New refCnts for V11: refCnt =  3, refCntWtd = 1.80
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG+-----                         *  STOREIND  int   
               [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
               [000152] U--XG+-----                         \--*  IND       int   
               [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        
New refCnts for V28: refCnt =  5, refCntWtd = 3.32
New refCnts for V15: refCnt =  3, refCntWtd = 1.80
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        
New refCnts for V29: refCnt =  5, refCntWtd = 3.32
New refCnts for V19: refCnt =  3, refCntWtd = 1.80
STMT00052 ( ??? ... 0x163 )
               [000169] UACXG+-----                         *  STOREIND  ref   
               [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
               [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        
New refCnts for V00: refCnt = 15, refCntWtd = 11.88
New refCnts for V23: refCnt =  4, refCntWtd = 2.50
STMT00053 ( ??? ... 0x165 )
               [000170] -----+-----                         *  RETURN    void  

*** marking local variables in block BB16 (weight=0.20)
STMT00036 ( ??? ... 0x173 )
               [000123] --CXG+-----                         *  CALL      void   <unknown method>
               [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        
New refCnts for V23: refCnt =  5, refCntWtd = 2.70
STMT00037 ( ??? ... ??? )
               [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -----+-N---                         \--*  CNS_INT   int    0
New refCnts for V01: refCnt =  7, refCntWtd = 5.90
STMT00038 ( ??? ... 0x175 )
               [000131] -----+-----                         *  JTRUE     void  
               [000130] J----+-N---                         \--*  EQ        int   
               [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----+-----                            \--*  CNS_INT   ref    null
New refCnts for V05: refCnt =  3, refCntWtd = 1.20

*** marking local variables in block BB17 (weight=0)
STMT00039 ( ??? ... 0x180 )
               [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         
New refCnts for V05: refCnt =  4, refCntWtd = 1.20

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt = 16, refCntWtd = 12.88
New refCnts for V00: refCnt = 17, refCntWtd = 13.88
New refCnts for V01: refCnt =  8, refCntWtd = 6.90
New refCnts for V01: refCnt =  9, refCntWtd = 7.90
New refCnts for V02: refCnt =  4, refCntWtd = 2.94
New refCnts for V02: refCnt =  5, refCntWtd = 3.94

*************** Finishing PHASE Mark local vars
Trees after Mark local vars

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC rare keep hascall xentry gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
               [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000000] -----+-----                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
               [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
               [000006] -----+-----                         *  JTRUE     void  
               [000005] J----+-N---                         \--*  EQ        int   
               [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000004] -----+-----                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
               [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
               [000193] -----+-----                         \--*  ADD       byref 
               [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000192] -----+-----                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
               [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
               [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
               [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         
               [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
               [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
               [000020] -----+-----                         *  JTRUE     void  
               [000019] J----+-N---                         \--*  EQ        int   
               [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000018] -----+-----                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
               [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
               [000189] -----+-----                         \--*  ADD       byref 
               [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000188] -----+-----                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
               [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
               [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
               [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         
               [000029] -----+-----                         \--*  ADD       long  
               [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000028] -----+-----                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
               [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
               [000035] -----+-----                         *  JTRUE     void  
               [000034] J----+-N---                         \--*  EQ        int   
               [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000033] -----+-----                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
               [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
               [000185] -----+-----                         \--*  ADD       byref 
               [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000184] -----+-----                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
               [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
               [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
               [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        
               [000044] -----+-----                         \--*  ADD       long  
               [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000043] -----+-----                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
               [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
               [000050] -----+-----                         *  JTRUE     void  
               [000049] J----+-N---                         \--*  EQ        int   
               [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000048] -----+-----                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
               [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
               [000181] -----+-----                         \--*  ADD       byref 
               [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
               [000180] -----+-----                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
               [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
               [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
               [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        
               [000059] -----+-----                         \--*  ADD       long  
               [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000058] -----+-----                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
               [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
               [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
               [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        
               [000074] -----+-----                         \--*  ADD       long  
               [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
               [000073] -----+-----                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
               [000079] -----+-----                         *  JTRUE     void  
               [000078] J----+-N---                         \--*  EQ        int   
               [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000077] -----+-----                            \--*  CNS_INT   int    0

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
               [000138] -----+-----                         *  JTRUE     void  
               [000137] J----+-N---                         \--*  EQ        int   
               [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000136] -----+-----                            \--*  CNS_INT   int    1

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
               [000174] -----+-----                         *  JTRUE     void  
               [000173] J----+-N---                         \--*  EQ        int   
               [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
               [000172] -----+-----                            \--*  CNS_INT   int    2

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
               [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000083] -----+-N---                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
               [000091] UA-XG+-----                         *  STOREIND  int   
               [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         
               [000087] U--XG+-----                         \--*  IND       int   
               [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
               [000097] UA-XG+-----                         *  STOREIND  int   
               [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         
               [000093] U--XG+-----                         \--*  IND       int   
               [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
               [000103] UA-XG+-----                         *  STOREIND  int   
               [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        
               [000099] U--XG+-----                         \--*  IND       int   
               [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
               [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        
               [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
               [000112] -A-XG+-----                         *  STOREIND  short 
               [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        
               [000111] -----+-----                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
               [000116] --CXG+-----                         *  CALL      void   <unknown method>
               [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
               [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
               [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
               [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         
               [000081] -----+-----                         \--*  CATCH_ARG ref   

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
               [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         
               [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
               [000117] -----+-----                         *  RETURN    void  

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
               [000144] UA-XG+-----                         *  STOREIND  int   
               [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
               [000140] U--XG+-----                         \--*  IND       int   
               [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
               [000150] UA-XG+-----                         *  STOREIND  int   
               [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
               [000146] U--XG+-----                         \--*  IND       int   
               [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
               [000156] UA-XG+-----                         *  STOREIND  int   
               [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
               [000152] U--XG+-----                         \--*  IND       int   
               [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
               [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
               [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
               [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
               [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
               [000169] UACXG+-----                         *  STOREIND  ref   
               [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
               [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
               [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
               [000170] -----+-----                         *  RETURN    void  

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
               [000123] --CXG+-----                         *  CALL      void   <unknown method>
               [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
               [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
               [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
               [000125] -----+-N---                         \--*  CNS_INT   int    0

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
               [000131] -----+-----                         *  JTRUE     void  
               [000130] J----+-N---                         \--*  EQ        int   
               [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         
               [000129] -----+-----                            \--*  CNS_INT   ref    null

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
               [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
               [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Find oper order
*************** In fgFindOperOrder()

*************** Finishing PHASE Find oper order
Trees after Find oper order

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC rare keep hascall xentry gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
     (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
     (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
     (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
     (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
     (  5,  5) [000006] -----+-----                         *  JTRUE     void  
     (  3,  3) [000005] J----+-N---                         \--*  EQ        int   
     (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
     (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
     (  3,  3) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
     (  3,  3) [000193] -----+-----                         \--*  ADD       byref 
     (  1,  1) [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
     (  1,  1) [000192] -----+-----                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
     (  5,  4) [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
     (  1,  1) [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
     (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         
     (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
     (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
     (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
     (  5,  5) [000020] -----+-----                         *  JTRUE     void  
     (  3,  3) [000019] J----+-N---                         \--*  EQ        int   
     (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
     (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
     (  3,  3) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
     (  3,  3) [000189] -----+-----                         \--*  ADD       byref 
     (  1,  1) [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
     (  1,  1) [000188] -----+-----                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
     (  5,  4) [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
     (  1,  1) [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
     (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         
     (  3,  3) [000029] -----+-----                         \--*  ADD       long  
     (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
     (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
     (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
     (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
     (  5,  5) [000035] -----+-----                         *  JTRUE     void  
     (  3,  3) [000034] J----+-N---                         \--*  EQ        int   
     (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
     (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
     (  3,  3) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
     (  3,  3) [000185] -----+-----                         \--*  ADD       byref 
     (  1,  1) [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
     (  1,  1) [000184] -----+-----                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
     (  5,  4) [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
     (  1,  1) [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
     (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        
     (  3,  3) [000044] -----+-----                         \--*  ADD       long  
     (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
     (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
     (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
     (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
     (  5,  5) [000050] -----+-----                         *  JTRUE     void  
     (  3,  3) [000049] J----+-N---                         \--*  EQ        int   
     (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
     (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
     (  3,  3) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
     (  3,  3) [000181] -----+-----                         \--*  ADD       byref 
     (  1,  1) [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
     (  1,  1) [000180] -----+-----                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
     (  5,  4) [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
     (  1,  1) [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
     (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        
     (  3,  3) [000059] -----+-----                         \--*  ADD       long  
     (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
     (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
     (  5,  4) [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
     (  1,  1) [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
     (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        
     (  3,  3) [000074] -----+-----                         \--*  ADD       long  
     (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
     (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
     (  5,  5) [000079] -----+-----                         *  JTRUE     void  
     (  3,  3) [000078] J----+-N---                         \--*  EQ        int   
     (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
     (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
     (  5,  5) [000138] -----+-----                         *  JTRUE     void  
     (  3,  3) [000137] J----+-N---                         \--*  EQ        int   
     (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
     (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
     (  5,  5) [000174] -----+-----                         *  JTRUE     void  
     (  3,  3) [000173] J----+-N---                         \--*  EQ        int   
     (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
     (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
     (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
     (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
     (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
     ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int   
     (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         
     (  3,  2) [000087] U--XG+-----                         \--*  IND       int   
     (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
     ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int   
     (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         
     (  3,  2) [000093] U--XG+-----                         \--*  IND       int   
     (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
     ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int   
     (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        
     (  3,  2) [000099] U--XG+-----                         \--*  IND       int   
     (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
     ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
     (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        
     (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
     (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
     (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short 
     (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        
     (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
     ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method>
     (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
     (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
     (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
     (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         
     (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref   

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
     ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         
     ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
     (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
     (  0,  0) [000117] -----+-----                         *  RETURN    void  

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
     ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int   
     (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
     (  6,  4) [000140] U--XG+-----                         \--*  IND       int   
     (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
     ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int   
     (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
     (  6,  4) [000146] U--XG+-----                         \--*  IND       int   
     (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
     ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int   
     (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
     (  6,  4) [000152] U--XG+-----                         \--*  IND       int   
     (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
     ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
     (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
     (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
     (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
     ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref   
     (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
     ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
     (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
     (  0,  0) [000170] -----+-----                         *  RETURN    void  

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
     ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method>
     (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
     (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
     (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
     (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
     (  7,  6) [000131] -----+-----                         *  JTRUE     void  
     (  5,  4) [000130] J----+-N---                         \--*  EQ        int   
     (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         
     (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
     ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
     (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Set block order
*************** In fgSetBlockOrder()
The biggest BB has    4 tree nodes

*************** Finishing PHASE Set block order
Trees after Set block order

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC rare keep hascall xentry gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000005] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
N002 (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
N004 (  3,  3) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         
N003 (  3,  3) [000193] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
N002 (  1,  1) [000192] -----+-----                            \--*  CNS_INT   long   8

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00003 ( ??? ... 0x00D )
N002 (  5,  4) [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
N001 (  1,  1) [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1         

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
N004 (  5,  5) [000020] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000019] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
N002 (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
N004 (  3,  3) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         
N003 (  3,  3) [000189] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
N002 (  1,  1) [000188] -----+-----                            \--*  CNS_INT   long   12

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00007 ( ??? ... 0x022 )
N002 (  5,  4) [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
N001 (  1,  1) [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2         

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
N004 (  5,  5) [000035] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000034] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
N002 (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
N004 (  3,  3) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         
N003 (  3,  3) [000185] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
N002 (  1,  1) [000184] -----+-----                            \--*  CNS_INT   long   16

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00011 ( ??? ... 0x039 )
N002 (  5,  4) [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
N001 (  1,  1) [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3         

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
N004 (  5,  5) [000050] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000049] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
N002 (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
N004 (  3,  3) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         
N003 (  3,  3) [000181] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         
N002 (  1,  1) [000180] -----+-----                            \--*  CNS_INT   long   24

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}

***** BB09 [0008]
STMT00015 ( ??? ... 0x050 )
N002 (  5,  4) [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
N001 (  1,  1) [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4         

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00019 ( ??? ... 0x067 )
N002 (  5,  4) [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
N001 (  1,  1) [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000137] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
N002 (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000173] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         
N002 (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
N001 (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
N002 (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int   
N003 (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         
N002 (  3,  2) [000087] U--XG+-----                         \--*  IND       int   
N001 (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int   
N003 (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         
N002 (  3,  2) [000093] U--XG+-----                         \--*  IND       int   
N001 (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int   
N003 (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        
N002 (  3,  2) [000099] U--XG+-----                         \--*  IND       int   
N001 (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
N003 (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        
N002 (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
N001 (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short 
N001 (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        
N002 (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method>
N002 (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
N001 (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         
N003 (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         
N001 (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref   

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         
N002 ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
N001 (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void  

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
N004 ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int   
N003 (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         
N002 (  6,  4) [000140] U--XG+-----                         \--*  IND       int   
N001 (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
N004 ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int   
N003 (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         
N002 (  6,  4) [000146] U--XG+-----                         \--*  IND       int   
N001 (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
N004 ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int   
N003 (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         
N002 (  6,  4) [000152] U--XG+-----                         \--*  IND       int   
N001 (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
N004 ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
N003 (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         
N002 (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
N001 (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
N004 ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref   
N003 (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         
N002 ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
N001 (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void  

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method>
N001 (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void  
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int   
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
N001 (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Build SSA representation
*************** In SsaBuilder::Build()
*************** In fgLocalVarLiveness()
In fgLocalVarLivenessInit

Local V20 should not be enregistered because: struct size does not match reg size

Local V21 should not be enregistered because: struct size does not match reg size

Local V25 should not be enregistered because: struct size does not match reg size
Tracked variable (20 out of 33) table:
V00 arg0          [ byref]: refCnt =   17, refCntWtd =  13.88
V01 arg1          [  long]: refCnt =    9, refCntWtd =   7.90
V02 arg2          [   int]: refCnt =    5, refCntWtd =   3.94
V26 tmp1          [ byref]: refCnt =    5, refCntWtd =   3.32
V27 tmp2          [ byref]: refCnt =    5, refCntWtd =   3.32
V28 tmp3          [ byref]: refCnt =    5, refCntWtd =   3.32
V29 tmp4          [ byref]: refCnt =    5, refCntWtd =   3.32
V23 loc19         [ byref]: refCnt =    5, refCntWtd =   2.70
V07 loc3          [ byref]: refCnt =    3, refCntWtd =   1.80
V11 loc7          [ byref]: refCnt =    3, refCntWtd =   1.80
V15 loc11         [ byref]: refCnt =    3, refCntWtd =   1.80
V19 loc15         [ byref]: refCnt =    3, refCntWtd =   1.80
V05 loc1          [   ref]: refCnt =    4, refCntWtd =   1.20
V06 loc2          [ byref]: refCnt =    1, refCntWtd =   1   
V10 loc6          [ byref]: refCnt =    1, refCntWtd =   1   
V14 loc10         [ byref]: refCnt =    1, refCntWtd =   1   
V18 loc14         [ byref]: refCnt =    1, refCntWtd =   1   
V22 loc18         [ byref]: refCnt =    1, refCntWtd =   1   
V32 PSPSym        [  long]: refCnt =    1, refCntWtd =   1   
V31 tmp6          [   ref]: refCnt =    2, refCntWtd =   0   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(1)={V00        }
     DEF(2)={    V26 V05}

BB02 USE(1)={V00    }
     DEF(1)={    V26}

BB03 USE(3)={V00 V01 V26            }
     DEF(3)={            V27 V07 V06}

BB04 USE(1)={V00    }
     DEF(1)={    V27}

BB05 USE(3)={V00 V01 V27            }
     DEF(3)={            V28 V11 V10}

BB06 USE(1)={V00    }
     DEF(1)={    V28}

BB07 USE(3)={V00 V01 V28            }
     DEF(3)={            V29 V15 V14}

BB08 USE(1)={V00    }
     DEF(1)={    V29}

BB09 USE(4)={V00 V01 V02 V29                }
     DEF(4)={                V23 V19 V18 V22}

BB10 USE(1)={V02}
     DEF(0)={   }

BB11 USE(1)={V02}
     DEF(0)={   }

BB12 USE(11)={V00 V01 V26 V27 V28 V29 V23 V07 V11 V15 V19} + ByrefExposed + GcHeap
     DEF(0)={                                           } + ByrefExposed* + GcHeap*

BB13 USE(0)={       } + ByrefExposed + GcHeap
     DEF(2)={V05 V31} + ByrefExposed* + GcHeap*

BB14 USE(0)={}
     DEF(0)={}

BB15 USE(10)={V00 V26 V27 V28 V29 V23 V07 V11 V15 V19} + ByrefExposed + GcHeap
     DEF(0)={                                       } + ByrefExposed* + GcHeap*

BB16 USE(3)={V01 V23 V05} + ByrefExposed + GcHeap
     DEF(0)={           } + ByrefExposed* + GcHeap*

BB17 USE(1)={V05} + ByrefExposed + GcHeap
     DEF(0)={   } + ByrefExposed* + GcHeap*

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (3)={V00 V01 V02        } + ByrefExposed + GcHeap
     OUT(5)={V00 V01 V02 V26 V05} + ByrefExposed + GcHeap

BB02 IN (4)={V00 V01 V02     V05} + ByrefExposed + GcHeap
     OUT(5)={V00 V01 V02 V26 V05} + ByrefExposed + GcHeap

BB03 IN (5)={V00 V01 V02 V26         V05} + ByrefExposed + GcHeap
     OUT(7)={V00 V01 V02 V26 V27 V07 V05} + ByrefExposed + GcHeap

BB04 IN (6)={V00 V01 V02 V26     V07 V05} + ByrefExposed + GcHeap
     OUT(7)={V00 V01 V02 V26 V27 V07 V05} + ByrefExposed + GcHeap

BB05 IN (7)={V00 V01 V02 V26 V27     V07     V05} + ByrefExposed + GcHeap
     OUT(9)={V00 V01 V02 V26 V27 V28 V07 V11 V05} + ByrefExposed + GcHeap

BB06 IN (8)={V00 V01 V02 V26 V27     V07 V11 V05} + ByrefExposed + GcHeap
     OUT(9)={V00 V01 V02 V26 V27 V28 V07 V11 V05} + ByrefExposed + GcHeap

BB07 IN (9)={V00 V01 V02 V26 V27 V28     V07 V11     V05} + ByrefExposed + GcHeap
     OUT(11)={V00 V01 V02 V26 V27 V28 V29 V07 V11 V15 V05} + ByrefExposed + GcHeap

BB08 IN (10)={V00 V01 V02 V26 V27 V28     V07 V11 V15 V05} + ByrefExposed + GcHeap
     OUT(11)={V00 V01 V02 V26 V27 V28 V29 V07 V11 V15 V05} + ByrefExposed + GcHeap

BB09 IN (11)={V00 V01 V02 V26 V27 V28 V29     V07 V11 V15     V05} + ByrefExposed + GcHeap
     OUT(13)={V00 V01 V02 V26 V27 V28 V29 V23 V07 V11 V15 V19 V05} + ByrefExposed + GcHeap

BB10 IN (13)={V00 V01 V02 V26 V27 V28 V29 V23 V07 V11 V15 V19 V05} + ByrefExposed + GcHeap
     OUT(13)={V00 V01 V02 V26 V27 V28 V29 V23 V07 V11 V15 V19 V05} + ByrefExposed + GcHeap

BB11 IN (13)={V00 V01 V02 V26 V27 V28 V29 V23 V07 V11 V15 V19 V05} + ByrefExposed + GcHeap
     OUT(12)={V00 V01     V26 V27 V28 V29 V23 V07 V11 V15 V19 V05} + ByrefExposed + GcHeap

BB12 IN (11)={V00 V01 V26 V27 V28 V29 V23 V07 V11 V15 V19} + ByrefExposed + GcHeap
     OUT(2)={    V01                 V23                } + ByrefExposed + GcHeap

BB13 IN (2)={V01 V23    } + ByrefExposed + GcHeap
     OUT(3)={V01 V23 V05} + ByrefExposed + GcHeap

BB14 IN (0)={}
     OUT(0)={}

BB15 IN (10)={V00 V26 V27 V28 V29 V23 V07 V11 V15 V19} + ByrefExposed + GcHeap
     OUT(0)={                                       }

BB16 IN (3)={V01 V23 V05} + ByrefExposed + GcHeap
     OUT(1)={        V05} + ByrefExposed + GcHeap

BB17 IN (1)={V05} + ByrefExposed + GcHeap
     OUT(0)={   }


Local V05 should not be enregistered because: live in/out of a handler
top level store
removing stmt with no side effects

removing useless STMT00003 ( ??? ... 0x00D )
N002 (  5,  4) [000011] DA---+-----                         *  STORE_LCL_VAR byref  V06 loc2         
N001 (  1,  1) [000010] -----+-----                         \--*  LCL_VAR   byref  V26 tmp1         
 from BB03
top level store
removing stmt with no side effects

removing useless STMT00007 ( ??? ... 0x022 )
N002 (  5,  4) [000025] DA---+-----                         *  STORE_LCL_VAR byref  V10 loc6         
N001 (  1,  1) [000024] -----+-----                         \--*  LCL_VAR   byref  V27 tmp2         
 from BB05
top level store
removing stmt with no side effects

removing useless STMT00011 ( ??? ... 0x039 )
N002 (  5,  4) [000040] DA---+-----                         *  STORE_LCL_VAR byref  V14 loc10        
N001 (  1,  1) [000039] -----+-----                         \--*  LCL_VAR   byref  V28 tmp3         
 from BB07
top level store
removing stmt with no side effects

removing useless STMT00019 ( ??? ... 0x067 )
N002 (  5,  4) [000070] DA---+-----                         *  STORE_LCL_VAR byref  V22 loc18        
N001 (  1,  1) [000061] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         
 from BB09
top level store
removing stmt with no side effects

removing useless STMT00015 ( ??? ... 0x050 )
N002 (  5,  4) [000055] DA---+-----                         *  STORE_LCL_VAR byref  V18 loc14        
N001 (  1,  1) [000054] -----+-----                         \--*  LCL_VAR   byref  V29 tmp4         
 from BB09
*************** In optRemoveRedundantZeroInits()
Analyzing BB01
*************** In SsaBuilder::InsertPhiFunctions()
Inserting phi functions:
Added PHI definition for V05 at start of BB16.
Inserting phi definition for ByrefExposed at start of BB16.
Inserting phi definition for ByrefExposed at start of BB13.
Added PHI definition for V29 at start of BB09.
Added PHI definition for V28 at start of BB07.
Added PHI definition for V27 at start of BB05.
Added PHI definition for V26 at start of BB03.
*************** In SsaBuilder::RenameVariables()
V00.1: defined in BB00 14 uses (global)
V01.1: defined in BB00 7 uses (global)
V02.1: defined in BB00 3 uses (global)
V05.1: defined in BB00 0 uses (local)
V05.2: defined in BB01 1 uses (global), has phi uses
V05.3: defined in BB13 1 uses (global), has phi uses
V05.4: defined in BB16 2 uses (global)
V06.1: defined in BB00 0 uses (local)
V07.1: defined in BB00 0 uses (local)
V07.2: defined in BB03 2 uses (global)
V10.1: defined in BB00 0 uses (local)
V11.1: defined in BB00 0 uses (local)
V11.2: defined in BB05 2 uses (global)
V14.1: defined in BB00 0 uses (local)
V15.1: defined in BB00 0 uses (local)
V15.2: defined in BB07 2 uses (global)
V18.1: defined in BB00 0 uses (local)
V19.1: defined in BB00 0 uses (local)
V19.2: defined in BB09 2 uses (global)
V22.1: defined in BB00 0 uses (local)
V23.1: defined in BB00 0 uses (local)
V23.2: defined in BB09 4 uses (global)
V26.1: defined in BB00 0 uses (local)
V26.2: defined in BB01 1 uses (global), has phi uses
V26.3: defined in BB02 1 uses (global), has phi uses
V26.4: defined in BB03 2 uses (global)
V27.1: defined in BB00 0 uses (local)
V27.2: defined in BB03 1 uses (global), has phi uses
V27.3: defined in BB04 1 uses (global), has phi uses
V27.4: defined in BB05 2 uses (global)
V28.1: defined in BB00 0 uses (local)
V28.2: defined in BB05 1 uses (global), has phi uses
V28.3: defined in BB06 1 uses (global), has phi uses
V28.4: defined in BB07 2 uses (global)
V29.1: defined in BB00 0 uses (local)
V29.2: defined in BB07 1 uses (global), has phi uses
V29.3: defined in BB08 1 uses (global), has phi uses
V29.4: defined in BB09 2 uses (global)
V31.1: defined in BB00 0 uses (local)
V31.2: defined in BB13 1 uses (local)
V32: in SSA but no defs

*************** Finishing PHASE Build SSA representation
Trees after Build SSA representation

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC rare keep hascall xentry gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000005] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
N004 (  3,  3) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3
N003 (  3,  3) [000193] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000192] -----+-----                            \--*  CNS_INT   long   8

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB03 [0002]
STMT00064 ( ??? ... ??? )
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref 
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
N004 (  5,  5) [000020] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000019] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
N004 (  3,  3) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3
N003 (  3,  3) [000189] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000188] -----+-----                            \--*  CNS_INT   long   12

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB05 [0004]
STMT00063 ( ??? ... ??? )
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref 
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
N004 (  5,  5) [000035] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000034] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
N004 (  3,  3) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3
N003 (  3,  3) [000185] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000184] -----+-----                            \--*  CNS_INT   long   16

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB07 [0006]
STMT00062 ( ??? ... ??? )
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref 
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
N004 (  5,  5) [000050] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000049] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
N004 (  3,  3) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3
N003 (  3,  3) [000181] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000180] -----+-----                            \--*  CNS_INT   long   24

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB09 [0008]
STMT00061 ( ??? ... ??? )
N004 (  0,  0) [000200] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         d:4
N003 (  0,  0) [000199] -----------                         \--*  PHI       byref 
N001 (  0,  0) [000214] ----------- pred BB08                  +--*  PHI_ARG   byref  V29 tmp4         u:3
N002 (  0,  0) [000213] ----------- pred BB07                  \--*  PHI_ARG   byref  V29 tmp4         u:2

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000137] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1
N002 (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000173] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 (last use)
N002 (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
N001 (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1
N002 (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int   
N003 (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         u:2 (last use)
N002 (  3,  2) [000087] U--XG+-----                         \--*  IND       int   
N001 (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         u:4 (last use)

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int   
N003 (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         u:2 (last use)
N002 (  3,  2) [000093] U--XG+-----                         \--*  IND       int   
N001 (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         u:4 (last use)

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int   
N003 (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        u:2 (last use)
N002 (  3,  2) [000099] U--XG+-----                         \--*  IND       int   
N001 (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         u:4 (last use)

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
N003 (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        u:2 (last use)
N002 (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
N001 (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         u:4 (last use)

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short 
N001 (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        u:2
N002 (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method>
N002 (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
N001 (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         u:1 (last use)
N003 (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        u:2

SSA MEM: ByrefExposed, GcHeap = m:3

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
SSA MEM: ByrefExposed, GcHeap = phi(m:3, m:1, m:1)

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2
N001 (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref   

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3
N002 ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
N001 (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         u:2 (last use)

SSA MEM: ByrefExposed, GcHeap = m:5

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void  

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
N004 ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int   
N003 (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:4 (last use)
N002 (  6,  4) [000140] U--XG+-----                         \--*  IND       int   
N001 (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         u:2 (last use)

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
N004 ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int   
N003 (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:4 (last use)
N002 (  6,  4) [000146] U--XG+-----                         \--*  IND       int   
N001 (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         u:2 (last use)

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
N004 ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int   
N003 (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:4 (last use)
N002 (  6,  4) [000152] U--XG+-----                         \--*  IND       int   
N001 (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        u:2 (last use)

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
N004 ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
N003 (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:4 (last use)
N002 (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
N001 (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        u:2 (last use)

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
N004 ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref   
N003 (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         u:1 (last use)
N002 ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
N001 (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        u:2 (last use)

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void  

SSA MEM: ByrefExposed, GcHeap = m:2

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
SSA MEM: ByrefExposed, GcHeap = phi(m:5, m:1)

***** BB16 [0019]
STMT00060 ( ??? ... ??? )
N004 (  0,  0) [000198] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         d:4
N003 (  0,  0) [000197] -----------                         \--*  PHI       ref   
N001 (  0,  0) [000216] ----------- pred BB13                  +--*  PHI_ARG   ref    V05 loc1         u:3
N002 (  0,  0) [000215] ----------- pred BB11                  \--*  PHI_ARG   ref    V05 loc1         u:2

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method>
N001 (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        u:2 (last use)

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 (last use)
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void  
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int   
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         u:4
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null

SSA MEM: ByrefExposed, GcHeap = m:7

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
SSA MEM: ByrefExposed, GcHeap = m:7

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
N001 (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         u:4 (last use)

SSA MEM: ByrefExposed, GcHeap = m:8

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
SSA checks completed successfully
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Early Value Propagation
no arrays or null checks in the method

*************** Finishing PHASE Early Value Propagation [no changes]

*************** Starting PHASE Do value numbering

*************** In fgValueNumber()
Memory Initial Value in BB01 is: $180
Visiting BB01
The SSA definition for ByrefExposed (#1) at start of BB01 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB01 is $180 {InitVal($43)}

***** BB01, STMT00000(before)
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null

N001 [000000]   CNS_INT   null => $VN.Null
Tree [000001] assigned VN to local var V05/2: $VN.Null
N002 [000001]   STORE_LCL_VAR V05 loc1         d:2 => $VN.Void

***** BB01, STMT00000(after)
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null $VN.Null

---------

***** BB01, STMT00002(before)
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1

N001 [000002]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
Tree [000007] assigned VN to local var V26/2: $80 {InitVal($40)}
N002 [000007]   STORE_LCL_VAR V26 tmp1         d:2 => $VN.Void

***** BB01, STMT00002(after)
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

---------

***** BB01, STMT00001(before)
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000005] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0

N001 [000003]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
N002 [000004]   CNS_INT   0 => $VN.Null
N003 [000005]   EQ        => $1c0 {EQ($80, $0)}
N004 [000006]   JTRUE     => $VN.Void

***** BB01, STMT00001(after)
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000005] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

Visiting BB02
  Reachable through pred BB01
The SSA definition for ByrefExposed (#1) at start of BB02 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB02 is $180 {InitVal($43)}

***** BB02, STMT00059(before)
N004 (  3,  3) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3
N003 (  3,  3) [000193] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000192] -----+-----                            \--*  CNS_INT   long   8

N001 [000009]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
N002 [000192]   CNS_INT   8 => $200 {LngCns 8}
N003 [000193]   ADD       => $240 {ADD($80, $200)}
Tree [000194] assigned VN to local var V26/3: $240 {ADD($80, $200)}
N004 [000194]   STORE_LCL_VAR V26 tmp1         d:3 => $VN.Void

***** BB02, STMT00059(after)
N004 (  3,  3) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N003 (  3,  3) [000193] -----+-----                         \--*  ADD       byref  $240
N001 (  1,  1) [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000192] -----+-----                            \--*  CNS_INT   long   8 $200

Visiting BB03
  Reachable through pred BB01

***** BB03, STMT00064(before)
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref 
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2

SSA PHI definition: set VN of local 26/4 to $280 {PhiDef(V26 d:4, u:3, u:2)} .

***** BB03, STMT00064(after)
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4 $VN.Void
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref  $280
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3 $240
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2 $80

---------
The SSA definition for ByrefExposed (#1) at start of BB03 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB03 is $180 {InitVal($43)}

***** BB03, STMT00004(before)
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1

N001 [000012]   LCL_VAR   V01 arg1         u:1 => $c0 {InitVal($41)}
Tree [000015] assigned VN to local var V07/2: $241 {$c0, byref <- long}
N002 [000015]   STORE_LCL_VAR V07 loc3         d:2 => $VN.Void

***** BB03, STMT00004(after)
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1 $c0

---------

***** BB03, STMT00006(before)
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1

N001 [000016]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
Tree [000021] assigned VN to local var V27/2: $80 {InitVal($40)}
N002 [000021]   STORE_LCL_VAR V27 tmp2         d:2 => $VN.Void

***** BB03, STMT00006(after)
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

---------

***** BB03, STMT00005(before)
N004 (  5,  5) [000020] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000019] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0

N001 [000017]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
N002 [000018]   CNS_INT   0 => $VN.Null
N003 [000019]   EQ        => $1c0 {EQ($80, $0)}
N004 [000020]   JTRUE     => $VN.Void

***** BB03, STMT00005(after)
N004 (  5,  5) [000020] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000019] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

Visiting BB04
  Reachable through pred BB03
The SSA definition for ByrefExposed (#1) at start of BB04 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB04 is $180 {InitVal($43)}

***** BB04, STMT00058(before)
N004 (  3,  3) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3
N003 (  3,  3) [000189] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000188] -----+-----                            \--*  CNS_INT   long   12

N001 [000023]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
N002 [000188]   CNS_INT   12 => $201 {LngCns 12}
N003 [000189]   ADD       => $242 {ADD($80, $201)}
Tree [000190] assigned VN to local var V27/3: $242 {ADD($80, $201)}
N004 [000190]   STORE_LCL_VAR V27 tmp2         d:3 => $VN.Void

***** BB04, STMT00058(after)
N004 (  3,  3) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N003 (  3,  3) [000189] -----+-----                         \--*  ADD       byref  $242
N001 (  1,  1) [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000188] -----+-----                            \--*  CNS_INT   long   12 $201

Visiting BB05
  Reachable through pred BB03

***** BB05, STMT00063(before)
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref 
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2

SSA PHI definition: set VN of local 27/4 to $281 {PhiDef(V27 d:4, u:3, u:2)} .

***** BB05, STMT00063(after)
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4 $VN.Void
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref  $281
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3 $242
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2 $80

---------
The SSA definition for ByrefExposed (#1) at start of BB05 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB05 is $180 {InitVal($43)}

***** BB05, STMT00008(before)
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4

N001 [000026]   LCL_VAR   V01 arg1         u:1 => $c0 {InitVal($41)}
N002 [000028]   CNS_INT   4 => $202 {LngCns 4}
N003 [000029]   ADD       => $2c0 {ADD($c0, $202)}
Tree [000030] assigned VN to local var V11/2: $243 {$2c0, byref <- long}
N004 [000030]   STORE_LCL_VAR V11 loc7         d:2 => $VN.Void

***** BB05, STMT00008(after)
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long   $2c0
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4 $202

---------

***** BB05, STMT00010(before)
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1

N001 [000031]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
Tree [000036] assigned VN to local var V28/2: $80 {InitVal($40)}
N002 [000036]   STORE_LCL_VAR V28 tmp3         d:2 => $VN.Void

***** BB05, STMT00010(after)
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

---------

***** BB05, STMT00009(before)
N004 (  5,  5) [000035] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000034] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0

N001 [000032]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
N002 [000033]   CNS_INT   0 => $VN.Null
N003 [000034]   EQ        => $1c0 {EQ($80, $0)}
N004 [000035]   JTRUE     => $VN.Void

***** BB05, STMT00009(after)
N004 (  5,  5) [000035] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000034] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

Visiting BB06
  Reachable through pred BB05
The SSA definition for ByrefExposed (#1) at start of BB06 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB06 is $180 {InitVal($43)}

***** BB06, STMT00057(before)
N004 (  3,  3) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3
N003 (  3,  3) [000185] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000184] -----+-----                            \--*  CNS_INT   long   16

N001 [000038]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
N002 [000184]   CNS_INT   16 => $204 {LngCns 16}
N003 [000185]   ADD       => $244 {ADD($80, $204)}
Tree [000186] assigned VN to local var V28/3: $244 {ADD($80, $204)}
N004 [000186]   STORE_LCL_VAR V28 tmp3         d:3 => $VN.Void

***** BB06, STMT00057(after)
N004 (  3,  3) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N003 (  3,  3) [000185] -----+-----                         \--*  ADD       byref  $244
N001 (  1,  1) [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000184] -----+-----                            \--*  CNS_INT   long   16 $204

Visiting BB07
  Reachable through pred BB05

***** BB07, STMT00062(before)
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref 
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2

SSA PHI definition: set VN of local 28/4 to $282 {PhiDef(V28 d:4, u:3, u:2)} .

***** BB07, STMT00062(after)
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4 $VN.Void
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref  $282
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3 $244
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2 $80

---------
The SSA definition for ByrefExposed (#1) at start of BB07 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB07 is $180 {InitVal($43)}

***** BB07, STMT00012(before)
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8

N001 [000041]   LCL_VAR   V01 arg1         u:1 => $c0 {InitVal($41)}
N002 [000043]   CNS_INT   8 => $200 {LngCns 8}
N003 [000044]   ADD       => $2c1 {ADD($c0, $200)}
Tree [000045] assigned VN to local var V15/2: $245 {$2c1, byref <- long}
N004 [000045]   STORE_LCL_VAR V15 loc11        d:2 => $VN.Void

***** BB07, STMT00012(after)
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long   $2c1
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8 $200

---------

***** BB07, STMT00014(before)
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1

N001 [000046]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
Tree [000051] assigned VN to local var V29/2: $80 {InitVal($40)}
N002 [000051]   STORE_LCL_VAR V29 tmp4         d:2 => $VN.Void

***** BB07, STMT00014(after)
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

---------

***** BB07, STMT00013(before)
N004 (  5,  5) [000050] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000049] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0

N001 [000047]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
N002 [000048]   CNS_INT   0 => $VN.Null
N003 [000049]   EQ        => $1c0 {EQ($80, $0)}
N004 [000050]   JTRUE     => $VN.Void

***** BB07, STMT00013(after)
N004 (  5,  5) [000050] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000049] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

Visiting BB08
  Reachable through pred BB07
The SSA definition for ByrefExposed (#1) at start of BB08 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB08 is $180 {InitVal($43)}

***** BB08, STMT00056(before)
N004 (  3,  3) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3
N003 (  3,  3) [000181] -----+-----                         \--*  ADD       byref 
N001 (  1,  1) [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1
N002 (  1,  1) [000180] -----+-----                            \--*  CNS_INT   long   24

N001 [000053]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
N002 [000180]   CNS_INT   24 => $205 {LngCns 24}
N003 [000181]   ADD       => $246 {ADD($80, $205)}
Tree [000182] assigned VN to local var V29/3: $246 {ADD($80, $205)}
N004 [000182]   STORE_LCL_VAR V29 tmp4         d:3 => $VN.Void

***** BB08, STMT00056(after)
N004 (  3,  3) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N003 (  3,  3) [000181] -----+-----                         \--*  ADD       byref  $246
N001 (  1,  1) [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000180] -----+-----                            \--*  CNS_INT   long   24 $205

Visiting BB09
  Reachable through pred BB07

***** BB09, STMT00061(before)
N004 (  0,  0) [000200] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         d:4
N003 (  0,  0) [000199] -----------                         \--*  PHI       byref 
N001 (  0,  0) [000214] ----------- pred BB08                  +--*  PHI_ARG   byref  V29 tmp4         u:3
N002 (  0,  0) [000213] ----------- pred BB07                  \--*  PHI_ARG   byref  V29 tmp4         u:2

SSA PHI definition: set VN of local 29/4 to $283 {PhiDef(V29 d:4, u:3, u:2)} .

***** BB09, STMT00061(after)
N004 (  0,  0) [000200] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         d:4 $VN.Void
N003 (  0,  0) [000199] -----------                         \--*  PHI       byref  $283
N001 (  0,  0) [000214] ----------- pred BB08                  +--*  PHI_ARG   byref  V29 tmp4         u:3 $246
N002 (  0,  0) [000213] ----------- pred BB07                  \--*  PHI_ARG   byref  V29 tmp4         u:2 $80

---------
The SSA definition for ByrefExposed (#1) at start of BB09 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB09 is $180 {InitVal($43)}

***** BB09, STMT00016(before)
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16

N001 [000056]   LCL_VAR   V01 arg1         u:1 => $c0 {InitVal($41)}
N002 [000058]   CNS_INT   16 => $204 {LngCns 16}
N003 [000059]   ADD       => $2c2 {ADD($c0, $204)}
Tree [000060] assigned VN to local var V19/2: $247 {$2c2, byref <- long}
N004 [000060]   STORE_LCL_VAR V19 loc15        d:2 => $VN.Void

***** BB09, STMT00016(after)
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long   $2c2
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16 $204

---------

***** BB09, STMT00020(before)
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long  
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48

N001 [000071]   LCL_VAR   V01 arg1         u:1 => $c0 {InitVal($41)}
N002 [000073]   CNS_INT   48 => $206 {LngCns 48}
N003 [000074]   ADD       => $2c3 {ADD($c0, $206)}
Tree [000075] assigned VN to local var V23/2: $248 {$2c3, byref <- long}
N004 [000075]   STORE_LCL_VAR V23 loc19        d:2 => $VN.Void

***** BB09, STMT00020(after)
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long   $2c3
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48 $206

---------

***** BB09, STMT00021(before)
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0

N001 [000076]   LCL_VAR   V02 arg2         u:1 => $100 {InitVal($42)}
N002 [000077]   CNS_INT   0 => $40 {IntCns 0}
N003 [000078]   EQ        => $1c1 {EQ($100, $40)}
N004 [000079]   JTRUE     => $VN.Void

***** BB09, STMT00021(after)
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int    $1c1
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0 $40

Visiting BB10
  Reachable through pred BB09
The SSA definition for ByrefExposed (#1) at start of BB10 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB10 is $180 {InitVal($43)}

***** BB10, STMT00041(before)
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000137] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1
N002 (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1

N001 [000135]   LCL_VAR   V02 arg2         u:1 => $100 {InitVal($42)}
N002 [000136]   CNS_INT   1 => $41 {IntCns 1}
N003 [000137]   EQ        => $1c2 {EQ($100, $41)}
N004 [000138]   JTRUE     => $VN.Void

***** BB10, STMT00041(after)
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000137] J----+-N---                         \--*  EQ        int    $1c2
N001 (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1 $41

Visiting BB15
  Reachable through pred BB10
The SSA definition for ByrefExposed (#1) at start of BB15 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB15 is $180 {InitVal($43)}

***** BB15, STMT00043(before)
N004 ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int   
N003 (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:4 (last use)
N002 (  6,  4) [000140] U--XG+-----                         \--*  IND       int   
N001 (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         u:2 (last use)

N001 [000139]   LCL_VAR   V07 loc3         u:2 (last use) => $241 {$c0, byref <- long}
N002 [000140]   IND       => <l:$1c4 {norm=$300 {ByrefExposedLoad($45, $241, $180)}, exc=$380 {NullPtrExc($241)}}, c:$1c3 {norm=$101 {MemOpaque:NotInLoop}, exc=$380 {NullPtrExc($241)}}>
N003 [000142]   LCL_VAR   V26 tmp1         u:4 (last use) => $280 {PhiDef(V26 d:4, u:3, u:2)}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000144] to VN: $181.
N004 [000144]   STOREIND  => $384 {norm=$VN.Void, exc=$383( {NullPtrExc($241)},  {NullPtrExc($280)})}

***** BB15, STMT00043(after)
N004 ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
N002 (  6,  4) [000140] U--XG+-----                         \--*  IND       int    <l:$1c4, c:$1c3>
N001 (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241

---------

***** BB15, STMT00045(before)
N004 ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int   
N003 (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:4 (last use)
N002 (  6,  4) [000146] U--XG+-----                         \--*  IND       int   
N001 (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         u:2 (last use)

N001 [000145]   LCL_VAR   V11 loc7         u:2 (last use) => $243 {$2c0, byref <- long}
N002 [000146]   IND       => <l:$1c6 {norm=$301 {ByrefExposedLoad($45, $243, $181)}, exc=$385 {NullPtrExc($243)}}, c:$1c5 {norm=$102 {MemOpaque:NotInLoop}, exc=$385 {NullPtrExc($243)}}>
N003 [000148]   LCL_VAR   V27 tmp2         u:4 (last use) => $281 {PhiDef(V27 d:4, u:3, u:2)}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000150] to VN: $182.
N004 [000150]   STOREIND  => $389 {norm=$VN.Void, exc=$388( {NullPtrExc($243)},  {NullPtrExc($281)})}

***** BB15, STMT00045(after)
N004 ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
N002 (  6,  4) [000146] U--XG+-----                         \--*  IND       int    <l:$1c6, c:$1c5>
N001 (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243

---------

***** BB15, STMT00047(before)
N004 ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int   
N003 (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:4 (last use)
N002 (  6,  4) [000152] U--XG+-----                         \--*  IND       int   
N001 (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        u:2 (last use)

N001 [000151]   LCL_VAR   V15 loc11        u:2 (last use) => $245 {$2c1, byref <- long}
N002 [000152]   IND       => <l:$1c8 {norm=$302 {ByrefExposedLoad($45, $245, $182)}, exc=$38a {NullPtrExc($245)}}, c:$1c7 {norm=$103 {MemOpaque:NotInLoop}, exc=$38a {NullPtrExc($245)}}>
N003 [000154]   LCL_VAR   V28 tmp3         u:4 (last use) => $282 {PhiDef(V28 d:4, u:3, u:2)}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000156] to VN: $183.
N004 [000156]   STOREIND  => $38e {norm=$VN.Void, exc=$38d( {NullPtrExc($245)},  {NullPtrExc($282)})}

***** BB15, STMT00047(after)
N004 ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
N002 (  6,  4) [000152] U--XG+-----                         \--*  IND       int    <l:$1c8, c:$1c7>
N001 (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245

---------

***** BB15, STMT00049(before)
N004 ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
N003 (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:4 (last use)
N002 (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
N001 (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        u:2 (last use)

N001 [000157]   LCL_VAR   V19 loc15        u:2 (last use) => $247 {$2c2, byref <- long}
N002 [000158]   BLK       => <l:$401 {norm=$3c0 {MemOpaque:NotInLoop}, exc=$38f {NullPtrExc($247)}}, c:$400 {norm=$3c1 {MemOpaque:NotInLoop}, exc=$38f {NullPtrExc($247)}}>
N003 [000160]   LCL_VAR   V29 tmp4         u:4 (last use) => $283 {PhiDef(V29 d:4, u:3, u:2)}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000162] to VN: $184.
N004 [000162]   STORE_BLK => $393 {norm=$VN.Void, exc=$392( {NullPtrExc($247)},  {NullPtrExc($283)})}

***** BB15, STMT00049(after)
N004 ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
N002 (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$401, c:$400>
N001 (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247

---------

***** BB15, STMT00052(before)
N004 ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref   
N003 (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         u:1 (last use)
N002 ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method>
N001 (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        u:2 (last use)

N001 [000163]   LCL_VAR   V23 loc19        u:2 (last use) => $248 {$2c3, byref <- long}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000164] to VN: $185.
N002 [000164]   CALL      => $348 {MemOpaque:NotInLoop}
N003 [000167]   LCL_VAR   V00 arg0         u:1 (last use) => $80 {InitVal($40)}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000169] to VN: $186.
N004 [000169]   STOREIND  => $395 {norm=$VN.Void, exc=$394 {NullPtrExc($80)}}

***** BB15, STMT00052(after)
N004 ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref    $395
N003 (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N002 ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method> $348
N001 (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

---------

***** BB15, STMT00053(before)
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void  

N001 [000170]   RETURN    => $VN.Void

***** BB15, STMT00053(after)
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void   $VN.Void

Visiting BB11
  Reachable through pred BB10
The SSA definition for ByrefExposed (#1) at start of BB11 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB11 is $180 {InitVal($43)}

***** BB11, STMT00054(before)
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void  
N003 (  3,  3) [000173] J----+-N---                         \--*  EQ        int   
N001 (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 (last use)
N002 (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2

N001 [000171]   LCL_VAR   V02 arg2         u:1 (last use) => $100 {InitVal($42)}
N002 [000172]   CNS_INT   2 => $42 {IntCns 2}
N003 [000173]   EQ        => $1c9 {EQ($100, $42)}
N004 [000174]   JTRUE     => $VN.Void

***** BB11, STMT00054(after)
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000173] J----+-N---                         \--*  EQ        int    $1c9
N001 (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2 $42

Visiting BB12
  Reachable through pred BB09
The SSA definition for ByrefExposed (#1) at start of BB12 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB12 is $180 {InitVal($43)}

***** BB12, STMT00022(before)
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init)
N001 (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1
N002 (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0

N001 [000082]   LCL_VAR   V01 arg1         u:1 => $c0 {InitVal($41)}
N002 [000083]   CNS_INT   0 => $40 {IntCns 0}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000085] to VN: $187.
N003 [000085]   STORE_BLK => $397 {norm=$VN.Void, exc=$396 {NullPtrExc($c0)}}

***** BB12, STMT00022(after)
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0 $40

---------

***** BB12, STMT00024(before)
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int   
N003 (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         u:2 (last use)
N002 (  3,  2) [000087] U--XG+-----                         \--*  IND       int   
N001 (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         u:4 (last use)

N001 [000086]   LCL_VAR   V26 tmp1         u:4 (last use) => $280 {PhiDef(V26 d:4, u:3, u:2)}
N002 [000087]   IND       => <l:$1cb {norm=$303 {ByrefExposedLoad($45, $280, $187)}, exc=$382 {NullPtrExc($280)}}, c:$1ca {norm=$104 {MemOpaque:NotInLoop}, exc=$382 {NullPtrExc($280)}}>
N003 [000089]   LCL_VAR   V07 loc3         u:2 (last use) => $241 {$c0, byref <- long}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000091] to VN: $188.
N004 [000091]   STOREIND  => $384 {norm=$VN.Void, exc=$383( {NullPtrExc($241)},  {NullPtrExc($280)})}

***** BB12, STMT00024(after)
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241
N002 (  3,  2) [000087] U--XG+-----                         \--*  IND       int    <l:$1cb, c:$1ca>
N001 (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280

---------

***** BB12, STMT00026(before)
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int   
N003 (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         u:2 (last use)
N002 (  3,  2) [000093] U--XG+-----                         \--*  IND       int   
N001 (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         u:4 (last use)

N001 [000092]   LCL_VAR   V27 tmp2         u:4 (last use) => $281 {PhiDef(V27 d:4, u:3, u:2)}
N002 [000093]   IND       => <l:$1cd {norm=$304 {ByrefExposedLoad($45, $281, $188)}, exc=$387 {NullPtrExc($281)}}, c:$1cc {norm=$105 {MemOpaque:NotInLoop}, exc=$387 {NullPtrExc($281)}}>
N003 [000095]   LCL_VAR   V11 loc7         u:2 (last use) => $243 {$2c0, byref <- long}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000097] to VN: $189.
N004 [000097]   STOREIND  => $389 {norm=$VN.Void, exc=$388( {NullPtrExc($243)},  {NullPtrExc($281)})}

***** BB12, STMT00026(after)
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243
N002 (  3,  2) [000093] U--XG+-----                         \--*  IND       int    <l:$1cd, c:$1cc>
N001 (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281

---------

***** BB12, STMT00028(before)
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int   
N003 (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        u:2 (last use)
N002 (  3,  2) [000099] U--XG+-----                         \--*  IND       int   
N001 (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         u:4 (last use)

N001 [000098]   LCL_VAR   V28 tmp3         u:4 (last use) => $282 {PhiDef(V28 d:4, u:3, u:2)}
N002 [000099]   IND       => <l:$1cf {norm=$305 {ByrefExposedLoad($45, $282, $189)}, exc=$38c {NullPtrExc($282)}}, c:$1ce {norm=$106 {MemOpaque:NotInLoop}, exc=$38c {NullPtrExc($282)}}>
N003 [000101]   LCL_VAR   V15 loc11        u:2 (last use) => $245 {$2c1, byref <- long}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000103] to VN: $18a.
N004 [000103]   STOREIND  => $38e {norm=$VN.Void, exc=$38d( {NullPtrExc($245)},  {NullPtrExc($282)})}

***** BB12, STMT00028(after)
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245
N002 (  3,  2) [000099] U--XG+-----                         \--*  IND       int    <l:$1cf, c:$1ce>
N001 (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282

---------

***** BB12, STMT00030(before)
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy)
N003 (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        u:2 (last use)
N002 (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32>
N001 (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         u:4 (last use)

N001 [000104]   LCL_VAR   V29 tmp4         u:4 (last use) => $283 {PhiDef(V29 d:4, u:3, u:2)}
N002 [000105]   BLK       => <l:$403 {norm=$3c3 {MemOpaque:NotInLoop}, exc=$391 {NullPtrExc($283)}}, c:$402 {norm=$3c4 {MemOpaque:NotInLoop}, exc=$391 {NullPtrExc($283)}}>
N003 [000107]   LCL_VAR   V19 loc15        u:2 (last use) => $247 {$2c2, byref <- long}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000109] to VN: $18b.
N004 [000109]   STORE_BLK => $393 {norm=$VN.Void, exc=$392( {NullPtrExc($247)},  {NullPtrExc($283)})}

***** BB12, STMT00030(after)
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247
N002 (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$403, c:$402>
N001 (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283

---------

***** BB12, STMT00031(before)
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short 
N001 (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        u:2
N002 (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0

N001 [000110]   LCL_VAR   V23 loc19        u:2 => $248 {$2c3, byref <- long}
N002 [000111]   CNS_INT   0 => $40 {IntCns 0}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000112] to VN: $18c.
N003 [000112]   STOREIND  => $39d {norm=$VN.Void, exc=$39c {NullPtrExc($248)}}

***** BB12, STMT00031(after)
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
N001 (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0 $40

---------

***** BB12, STMT00032(before)
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method>
N002 (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref   
N001 (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         u:1 (last use)
N003 (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        u:2

N001 [000113]   LCL_VAR   V00 arg0         u:1 (last use) => $80 {InitVal($40)}
N002 [000114]   IND       => <l:$39f {norm=$440 {ByrefExposedLoad($47, $80, $18c)}, exc=$394 {NullPtrExc($80)}}, c:$39e {norm=$34c {MemOpaque:NotInLoop}, exc=$394 {NullPtrExc($80)}}>
N003 [000115]   LCL_VAR   V23 loc19        u:2 => $248 {$2c3, byref <- long}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000116] to VN: $18d.
N004 [000116]   CALL      => $VN.Void

***** BB12, STMT00032(after)
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N002 (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref    <l:$39f, c:$39e>
N001 (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N003 (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        u:2 $248

Visiting BB13
  Reachable through pred BB12
The SSA definition for GcHeap (#4) at start of BB13 is $18e {MemOpaque:NotInLoop}

***** BB13, STMT00034(before)
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2
N001 (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref   

N001 [000081]   CATCH_ARG => $34d {MemOpaque:NotInLoop}
Tree [000118] assigned VN to local var V31/2: $34d {MemOpaque:NotInLoop}
N002 [000118]   STORE_LCL_VAR V31 tmp6         d:2 => $VN.Void

***** BB13, STMT00034(after)
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void
N001 (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref    $34d

---------

***** BB13, STMT00035(before)
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3
N002 ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method>
N001 (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         u:2 (last use)

N001 [000119]   LCL_VAR   V31 tmp6         u:2 (last use) => $34d {MemOpaque:NotInLoop}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000120] to VN: $18f.
N002 [000120]   CALL      => $34e {MemOpaque:NotInLoop}
Tree [000121] assigned VN to local var V05/3: $34e {MemOpaque:NotInLoop}
N003 [000121]   STORE_LCL_VAR V05 loc1         d:3 => $VN.Void

***** BB13, STMT00035(after)
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void
N002 ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method> $34e
N001 (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d

Visiting BB16
  Reachable through pred BB11

***** BB16, STMT00060(before)
N004 (  0,  0) [000198] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         d:4
N003 (  0,  0) [000197] -----------                         \--*  PHI       ref   
N001 (  0,  0) [000216] ----------- pred BB13                  +--*  PHI_ARG   ref    V05 loc1         u:3
N002 (  0,  0) [000215] ----------- pred BB11                  \--*  PHI_ARG   ref    V05 loc1         u:2

SSA PHI definition: set VN of local 5/4 to $480 {PhiDef(V05 d:4, u:3, u:2)} .

***** BB16, STMT00060(after)
N004 (  0,  0) [000198] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         d:4 $VN.Void
N003 (  0,  0) [000197] -----------                         \--*  PHI       ref    $480
N001 (  0,  0) [000216] ----------- pred BB13                  +--*  PHI_ARG   ref    V05 loc1         u:3 $34e
N002 (  0,  0) [000215] ----------- pred BB11                  \--*  PHI_ARG   ref    V05 loc1         u:2 $VN.Null

---------
  Building memory phi def for block BB16.
The SSA definition for GcHeap (#6) at start of BB16 is $4c0 {MemoryPhiDef(BB16, m:5, m:1)}

***** BB16, STMT00036(before)
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method>
N001 (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        u:2 (last use)

N001 [000122]   LCL_VAR   V23 loc19        u:2 (last use) => $248 {$2c3, byref <- long}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000123] to VN: $190.
N002 [000123]   CALL      => $VN.Void

***** BB16, STMT00036(after)
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N001 (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

---------

***** BB16, STMT00037(before)
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init)
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 (last use)
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0

N001 [000124]   LCL_VAR   V01 arg1         u:1 (last use) => $c0 {InitVal($41)}
N002 [000125]   CNS_INT   0 => $40 {IntCns 0}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000127] to VN: $191.
N003 [000127]   STORE_BLK => $397 {norm=$VN.Void, exc=$396 {NullPtrExc($c0)}}

***** BB16, STMT00037(after)
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0 $40

---------

***** BB16, STMT00038(before)
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void  
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int   
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         u:4
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null

N001 [000128]   LCL_VAR   V05 loc1         u:4 => $480 {PhiDef(V05 d:4, u:3, u:2)}
N002 [000129]   CNS_INT   null => $VN.Null
N003 [000130]   EQ        => $1d0 {EQ($480, $0)}
N004 [000131]   JTRUE     => $VN.Void

***** BB16, STMT00038(after)
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int    $1d0
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null $VN.Null

Visiting BB17
  Reachable through pred BB16
The SSA definition for ByrefExposed (#7) at start of BB17 is $191 {MemOpaque:NotInLoop}
The SSA definition for GcHeap (#7) at start of BB17 is $191 {MemOpaque:NotInLoop}

***** BB17, STMT00039(before)
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this
N001 (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         u:4 (last use)

N001 [000132]   LCL_VAR   V05 loc1         u:4 (last use) => $480 {PhiDef(V05 d:4, u:3, u:2)}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000133] to VN: $192.
N002 [000133]   CALL      => $VN.Void

***** BB17, STMT00039(after)
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void
N001 (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         u:4 (last use) $480

Visiting BB14
  Reachable through pred BB12
The SSA definition for ByrefExposed (#1) at start of BB14 is $180 {InitVal($43)}
The SSA definition for GcHeap (#1) at start of BB14 is $180 {InitVal($43)}

***** BB14, STMT00033(before)
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void  

N001 [000117]   RETURN    => $VN.Void

***** BB14, STMT00033(after)
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void   $VN.Void


*************** Finishing PHASE Do value numbering
Trees after Do value numbering

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC rare keep hascall xentry gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null $VN.Null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000005] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
N004 (  3,  3) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N003 (  3,  3) [000193] -----+-----                         \--*  ADD       byref  $240
N001 (  1,  1) [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000192] -----+-----                            \--*  CNS_INT   long   8 $200

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB03 [0002]
STMT00064 ( ??? ... ??? )
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4 $VN.Void
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref  $280
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3 $240
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2 $80

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1 $c0

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
N004 (  5,  5) [000020] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000019] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
N004 (  3,  3) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N003 (  3,  3) [000189] -----+-----                         \--*  ADD       byref  $242
N001 (  1,  1) [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000188] -----+-----                            \--*  CNS_INT   long   12 $201

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB05 [0004]
STMT00063 ( ??? ... ??? )
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4 $VN.Void
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref  $281
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3 $242
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2 $80

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long   $2c0
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4 $202

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
N004 (  5,  5) [000035] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000034] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
N004 (  3,  3) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N003 (  3,  3) [000185] -----+-----                         \--*  ADD       byref  $244
N001 (  1,  1) [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000184] -----+-----                            \--*  CNS_INT   long   16 $204

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB07 [0006]
STMT00062 ( ??? ... ??? )
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4 $VN.Void
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref  $282
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3 $244
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2 $80

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long   $2c1
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8 $200

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
N004 (  5,  5) [000050] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000049] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
N004 (  3,  3) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N003 (  3,  3) [000181] -----+-----                         \--*  ADD       byref  $246
N001 (  1,  1) [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000180] -----+-----                            \--*  CNS_INT   long   24 $205

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB09 [0008]
STMT00061 ( ??? ... ??? )
N004 (  0,  0) [000200] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         d:4 $VN.Void
N003 (  0,  0) [000199] -----------                         \--*  PHI       byref  $283
N001 (  0,  0) [000214] ----------- pred BB08                  +--*  PHI_ARG   byref  V29 tmp4         u:3 $246
N002 (  0,  0) [000213] ----------- pred BB07                  \--*  PHI_ARG   byref  V29 tmp4         u:2 $80

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long   $2c2
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16 $204

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long   $2c3
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48 $206

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int    $1c1
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0 $40

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000137] J----+-N---                         \--*  EQ        int    $1c2
N001 (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1 $41

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000173] J----+-N---                         \--*  EQ        int    $1c9
N001 (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2 $42

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241
N002 (  3,  2) [000087] U--XG+-----                         \--*  IND       int    <l:$1cb, c:$1ca>
N001 (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243
N002 (  3,  2) [000093] U--XG+-----                         \--*  IND       int    <l:$1cd, c:$1cc>
N001 (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245
N002 (  3,  2) [000099] U--XG+-----                         \--*  IND       int    <l:$1cf, c:$1ce>
N001 (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247
N002 (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$403, c:$402>
N001 (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
N001 (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N002 (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref    <l:$39f, c:$39e>
N001 (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N003 (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        u:2 $248

SSA MEM: ByrefExposed, GcHeap = m:3

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
SSA MEM: ByrefExposed, GcHeap = phi(m:3, m:1, m:1)

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void
N001 (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref    $34d

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void
N002 ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method> $34e
N001 (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d

SSA MEM: ByrefExposed, GcHeap = m:5

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void   $VN.Void

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
N004 ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
N002 (  6,  4) [000140] U--XG+-----                         \--*  IND       int    <l:$1c4, c:$1c3>
N001 (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
N004 ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
N002 (  6,  4) [000146] U--XG+-----                         \--*  IND       int    <l:$1c6, c:$1c5>
N001 (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
N004 ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
N002 (  6,  4) [000152] U--XG+-----                         \--*  IND       int    <l:$1c8, c:$1c7>
N001 (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
N004 ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
N002 (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$401, c:$400>
N001 (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
N004 ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref    $395
N003 (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N002 ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method> $348
N001 (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void   $VN.Void

SSA MEM: ByrefExposed, GcHeap = m:2

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
SSA MEM: ByrefExposed, GcHeap = phi(m:5, m:1)

***** BB16 [0019]
STMT00060 ( ??? ... ??? )
N004 (  0,  0) [000198] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         d:4 $VN.Void
N003 (  0,  0) [000197] -----------                         \--*  PHI       ref    $480
N001 (  0,  0) [000216] ----------- pred BB13                  +--*  PHI_ARG   ref    V05 loc1         u:3 $34e
N002 (  0,  0) [000215] ----------- pred BB11                  \--*  PHI_ARG   ref    V05 loc1         u:2 $VN.Null

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N001 (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int    $1d0
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null $VN.Null

SSA MEM: ByrefExposed, GcHeap = m:7

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
SSA MEM: ByrefExposed, GcHeap = m:7

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void
N001 (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         u:4 (last use) $480

SSA MEM: ByrefExposed, GcHeap = m:8

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
SSA checks completed successfully
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Hoist loop code

No loops; no hoisting

*************** Finishing PHASE Hoist loop code [no changes]

*************** Starting PHASE VN based copy prop
Copy Assertion for BB01
  curSsaName stack: { }

							Live vars after [000001]: {V00 V01 V02} +{V05} => {V00 V01 V02 V05}
							Live vars after [000007]: {V00 V01 V02 V05} +{V26} => {V00 V01 V02 V05 V26}
VN based copy assertion for [000003] V00 $80 by [000007] V26 $80.
N001 (  1,  1) [000003] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 $80
copy propagated to:
N001 (  1,  1) [000003] -----+-----                         *  LCL_VAR   byref  V26 tmp1         u:2 $80
Copy Assertion for BB02
  curSsaName stack: { [000002]:V00/1 [000001]:V05/2 [000007]:V26/2 }

							Live vars after [000194]: {V00 V01 V02 V05} +{V26} => {V00 V01 V02 V05 V26}
Copy Assertion for BB03
  curSsaName stack: { [000002]:V00/1 [000001]:V05/2 [000007]:V26/2 }

							Live vars after [000015]: {V00 V01 V02 V05 V26} +{V07} => {V00 V01 V02 V05 V07 V26}
							Live vars after [000021]: {V00 V01 V02 V05 V07 V26} +{V27} => {V00 V01 V02 V05 V07 V26 V27}
VN based copy assertion for [000017] V00 $80 by [000021] V27 $80.
N001 (  1,  1) [000017] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 $80
copy propagated to:
N001 (  1,  1) [000017] -----+-----                         *  LCL_VAR   byref  V27 tmp2         u:2 $80
Copy Assertion for BB04
  curSsaName stack: { [000021]:V27/2 [000002]:V00/1 [000012]:V01/1 [000001]:V05/2 [000015]:V07/2 [000206]:V26/4 }

							Live vars after [000190]: {V00 V01 V02 V05 V07 V26} +{V27} => {V00 V01 V02 V05 V07 V26 V27}
Copy Assertion for BB05
  curSsaName stack: { [000021]:V27/2 [000002]:V00/1 [000012]:V01/1 [000001]:V05/2 [000015]:V07/2 [000206]:V26/4 }

							Live vars after [000030]: {V00 V01 V02 V05 V07 V26 V27} +{V11} => {V00 V01 V02 V05 V07 V11 V26 V27}
							Live vars after [000036]: {V00 V01 V02 V05 V07 V11 V26 V27} +{V28} => {V00 V01 V02 V05 V07 V11 V26 V27 V28}
VN based copy assertion for [000032] V00 $80 by [000036] V28 $80.
N001 (  1,  1) [000032] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 $80
copy propagated to:
N001 (  1,  1) [000032] -----+-----                         *  LCL_VAR   byref  V28 tmp3         u:2 $80
Copy Assertion for BB06
  curSsaName stack: { [000002]:V00/1 [000012]:V01/1 [000206]:V26/4 [000204]:V27/4 [000036]:V28/2 [000001]:V05/2 [000015]:V07/2 [000030]:V11/2 }

							Live vars after [000186]: {V00 V01 V02 V05 V07 V11 V26 V27} +{V28} => {V00 V01 V02 V05 V07 V11 V26 V27 V28}
Copy Assertion for BB07
  curSsaName stack: { [000002]:V00/1 [000012]:V01/1 [000206]:V26/4 [000204]:V27/4 [000036]:V28/2 [000001]:V05/2 [000015]:V07/2 [000030]:V11/2 }

							Live vars after [000045]: {V00 V01 V02 V05 V07 V11 V26 V27 V28} +{V15} => {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28}
							Live vars after [000051]: {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28} +{V29} => {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28 V29}
VN based copy assertion for [000047] V00 $80 by [000051] V29 $80.
N001 (  1,  1) [000047] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 $80
copy propagated to:
N001 (  1,  1) [000047] -----+-----                         *  LCL_VAR   byref  V29 tmp4         u:2 $80
Copy Assertion for BB08
  curSsaName stack: { [000002]:V00/1 [000012]:V01/1 [000206]:V26/4 [000204]:V27/4 [000202]:V28/4 [000001]:V05/2 [000051]:V29/2 [000015]:V07/2 [000030]:V11/2 [000045]:V15/2 }

							Live vars after [000182]: {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28} +{V29} => {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28 V29}
Copy Assertion for BB09
  curSsaName stack: { [000002]:V00/1 [000012]:V01/1 [000206]:V26/4 [000204]:V27/4 [000202]:V28/4 [000001]:V05/2 [000051]:V29/2 [000015]:V07/2 [000030]:V11/2 [000045]:V15/2 }

							Live vars after [000060]: {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28 V29} +{V19} => {V00 V01 V02 V05 V07 V11 V15 V19 V26 V27 V28 V29}
							Live vars after [000075]: {V00 V01 V02 V05 V07 V11 V15 V19 V26 V27 V28 V29} +{V23} => {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
Copy Assertion for BB10
  curSsaName stack: { [000075]:V23/2 [000002]:V00/1 [000012]:V01/1 [000076]:V02/1 [000206]:V26/4 [000204]:V27/4 [000202]:V28/4 [000001]:V05/2 [000200]:V29/4 [000015]:V07/2 [000030]:V11/2 [000045]:V15/2 [000060]:V19/2 }

Copy Assertion for BB15
  curSsaName stack: { [000075]:V23/2 [000002]:V00/1 [000012]:V01/1 [000076]:V02/1 [000206]:V26/4 [000204]:V27/4 [000202]:V28/4 [000001]:V05/2 [000200]:V29/4 [000015]:V07/2 [000030]:V11/2 [000045]:V15/2 [000060]:V19/2 }

							Live vars after [000139]: {V00 V07 V11 V15 V19 V23 V26 V27 V28 V29} -{V07} => {V00 V11 V15 V19 V23 V26 V27 V28 V29}
							Live vars after [000142]: {V00 V11 V15 V19 V23 V26 V27 V28 V29} -{V26} => {V00 V11 V15 V19 V23 V27 V28 V29}
							Live vars after [000145]: {V00 V11 V15 V19 V23 V27 V28 V29} -{V11} => {V00 V15 V19 V23 V27 V28 V29}
							Live vars after [000148]: {V00 V15 V19 V23 V27 V28 V29} -{V27} => {V00 V15 V19 V23 V28 V29}
							Live vars after [000151]: {V00 V15 V19 V23 V28 V29} -{V15} => {V00 V19 V23 V28 V29}
							Live vars after [000154]: {V00 V19 V23 V28 V29} -{V28} => {V00 V19 V23 V29}
							Live vars after [000157]: {V00 V19 V23 V29} -{V19} => {V00 V23 V29}
							Live vars after [000160]: {V00 V23 V29} -{V29} => {V00 V23}
							Live vars after [000163]: {V00 V23} -{V23} => {V00}
							Live vars after [000167]: {V00} -{V00} => {}
Copy Assertion for BB11
  curSsaName stack: { [000075]:V23/2 [000002]:V00/1 [000012]:V01/1 [000076]:V02/1 [000206]:V26/4 [000204]:V27/4 [000202]:V28/4 [000001]:V05/2 [000200]:V29/4 [000015]:V07/2 [000030]:V11/2 [000045]:V15/2 [000060]:V19/2 }

							Live vars after [000171]: {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29} -{V02} => {V00 V01 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
Copy Assertion for BB12
  curSsaName stack: { [000075]:V23/2 [000002]:V00/1 [000012]:V01/1 [000076]:V02/1 [000206]:V26/4 [000204]:V27/4 [000202]:V28/4 [000001]:V05/2 [000200]:V29/4 [000015]:V07/2 [000030]:V11/2 [000045]:V15/2 [000060]:V19/2 }

							Live vars after [000086]: {V00 V01 V07 V11 V15 V19 V23 V26 V27 V28 V29} -{V26} => {V00 V01 V07 V11 V15 V19 V23 V27 V28 V29}
							Live vars after [000089]: {V00 V01 V07 V11 V15 V19 V23 V27 V28 V29} -{V07} => {V00 V01 V11 V15 V19 V23 V27 V28 V29}
							Live vars after [000092]: {V00 V01 V11 V15 V19 V23 V27 V28 V29} -{V27} => {V00 V01 V11 V15 V19 V23 V28 V29}
							Live vars after [000095]: {V00 V01 V11 V15 V19 V23 V28 V29} -{V11} => {V00 V01 V15 V19 V23 V28 V29}
							Live vars after [000098]: {V00 V01 V15 V19 V23 V28 V29} -{V28} => {V00 V01 V15 V19 V23 V29}
							Live vars after [000101]: {V00 V01 V15 V19 V23 V29} -{V15} => {V00 V01 V19 V23 V29}
							Live vars after [000104]: {V00 V01 V19 V23 V29} -{V29} => {V00 V01 V19 V23}
							Live vars after [000107]: {V00 V01 V19 V23} -{V19} => {V00 V01 V23}
							Live vars after [000113]: {V00 V01 V23} -{V00} => {V01 V23}
Copy Assertion for BB13
  curSsaName stack: { [000075]:V23/2 [000002]:V00/1 [000012]:V01/1 [000076]:V02/1 [000206]:V26/4 [000204]:V27/4 [000202]:V28/4 [000001]:V05/2 [000200]:V29/4 [000015]:V07/2 [000030]:V11/2 [000045]:V15/2 [000060]:V19/2 }

							Live vars after [000118]: {V01 V23} +{V31} => {V01 V23 V31}
							Live vars after [000119]: {V01 V23 V31} -{V31} => {V01 V23}
							Live vars after [000121]: {V01 V23} +{V05} => {V01 V05 V23}
Copy Assertion for BB16
  curSsaName stack: { [000075]:V23/2 [000002]:V00/1 [000012]:V01/1 [000076]:V02/1 [000206]:V26/4 [000204]:V27/4 [000202]:V28/4 [000001]:V05/2 [000200]:V29/4 [000015]:V07/2 [000030]:V11/2 [000045]:V15/2 [000060]:V19/2 }

							Live vars after [000122]: {V01 V05 V23} -{V23} => {V01 V05}
							Live vars after [000124]: {V01 V05} -{V01} => {V05}
Copy Assertion for BB17
  curSsaName stack: { [000075]:V23/2 [000002]:V00/1 [000012]:V01/1 [000076]:V02/1 [000206]:V26/4 [000204]:V27/4 [000202]:V28/4 [000198]:V05/4 [000200]:V29/4 [000015]:V07/2 [000030]:V11/2 [000045]:V15/2 [000060]:V19/2 }

							Live vars after [000132]: {V05} -{V05} => {}
Copy Assertion for BB14
  curSsaName stack: { [000075]:V23/2 [000002]:V00/1 [000012]:V01/1 [000076]:V02/1 [000206]:V26/4 [000204]:V27/4 [000202]:V28/4 [000001]:V05/2 [000200]:V29/4 [000015]:V07/2 [000030]:V11/2 [000045]:V15/2 [000060]:V19/2 }


*************** Finishing PHASE VN based copy prop
Trees after VN based copy prop

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC rare keep hascall xentry gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null $VN.Null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000005] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
N004 (  3,  3) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N003 (  3,  3) [000193] -----+-----                         \--*  ADD       byref  $240
N001 (  1,  1) [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000192] -----+-----                            \--*  CNS_INT   long   8 $200

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB03 [0002]
STMT00064 ( ??? ... ??? )
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4 $VN.Void
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref  $280
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3 $240
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2 $80

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1 $c0

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
N004 (  5,  5) [000020] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000019] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
N004 (  3,  3) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N003 (  3,  3) [000189] -----+-----                         \--*  ADD       byref  $242
N001 (  1,  1) [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000188] -----+-----                            \--*  CNS_INT   long   12 $201

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB05 [0004]
STMT00063 ( ??? ... ??? )
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4 $VN.Void
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref  $281
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3 $242
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2 $80

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long   $2c0
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4 $202

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
N004 (  5,  5) [000035] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000034] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
N004 (  3,  3) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N003 (  3,  3) [000185] -----+-----                         \--*  ADD       byref  $244
N001 (  1,  1) [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000184] -----+-----                            \--*  CNS_INT   long   16 $204

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB07 [0006]
STMT00062 ( ??? ... ??? )
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4 $VN.Void
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref  $282
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3 $244
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2 $80

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long   $2c1
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8 $200

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
N004 (  5,  5) [000050] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000049] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
N004 (  3,  3) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N003 (  3,  3) [000181] -----+-----                         \--*  ADD       byref  $246
N001 (  1,  1) [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000180] -----+-----                            \--*  CNS_INT   long   24 $205

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB09 [0008]
STMT00061 ( ??? ... ??? )
N004 (  0,  0) [000200] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         d:4 $VN.Void
N003 (  0,  0) [000199] -----------                         \--*  PHI       byref  $283
N001 (  0,  0) [000214] ----------- pred BB08                  +--*  PHI_ARG   byref  V29 tmp4         u:3 $246
N002 (  0,  0) [000213] ----------- pred BB07                  \--*  PHI_ARG   byref  V29 tmp4         u:2 $80

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long   $2c2
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16 $204

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long   $2c3
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48 $206

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int    $1c1
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0 $40

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000137] J----+-N---                         \--*  EQ        int    $1c2
N001 (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1 $41

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000173] J----+-N---                         \--*  EQ        int    $1c9
N001 (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2 $42

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241
N002 (  3,  2) [000087] U--XG+-----                         \--*  IND       int    <l:$1cb, c:$1ca>
N001 (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243
N002 (  3,  2) [000093] U--XG+-----                         \--*  IND       int    <l:$1cd, c:$1cc>
N001 (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245
N002 (  3,  2) [000099] U--XG+-----                         \--*  IND       int    <l:$1cf, c:$1ce>
N001 (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247
N002 (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$403, c:$402>
N001 (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
N001 (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N002 (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref    <l:$39f, c:$39e>
N001 (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N003 (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        u:2 $248

SSA MEM: ByrefExposed, GcHeap = m:3

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
SSA MEM: ByrefExposed, GcHeap = phi(m:3, m:1, m:1)

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void
N001 (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref    $34d

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void
N002 ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method> $34e
N001 (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d

SSA MEM: ByrefExposed, GcHeap = m:5

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void   $VN.Void

SSA MEM: ByrefExposed, GcHeap = m:1

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
N004 ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
N002 (  6,  4) [000140] U--XG+-----                         \--*  IND       int    <l:$1c4, c:$1c3>
N001 (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
N004 ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
N002 (  6,  4) [000146] U--XG+-----                         \--*  IND       int    <l:$1c6, c:$1c5>
N001 (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
N004 ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
N002 (  6,  4) [000152] U--XG+-----                         \--*  IND       int    <l:$1c8, c:$1c7>
N001 (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
N004 ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
N002 (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$401, c:$400>
N001 (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
N004 ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref    $395
N003 (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N002 ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method> $348
N001 (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void   $VN.Void

SSA MEM: ByrefExposed, GcHeap = m:2

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
SSA MEM: ByrefExposed, GcHeap = phi(m:5, m:1)

***** BB16 [0019]
STMT00060 ( ??? ... ??? )
N004 (  0,  0) [000198] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         d:4 $VN.Void
N003 (  0,  0) [000197] -----------                         \--*  PHI       ref    $480
N001 (  0,  0) [000216] ----------- pred BB13                  +--*  PHI_ARG   ref    V05 loc1         u:3 $34e
N002 (  0,  0) [000215] ----------- pred BB11                  \--*  PHI_ARG   ref    V05 loc1         u:2 $VN.Null

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N001 (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int    $1d0
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null $VN.Null

SSA MEM: ByrefExposed, GcHeap = m:7

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
SSA MEM: ByrefExposed, GcHeap = m:7

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void
N001 (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         u:4 (last use) $480

SSA MEM: ByrefExposed, GcHeap = m:8

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[info] NumUses overestimated for V00.1: IR 10 SSA 14
SSA checks completed successfully
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Redundant branch opts

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC rare keep hascall xentry gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

--- Trying RBO in BB11 ---
Relop [000173] BB11 value unknown, trying inference
No usable PhiDef VNs

--- Trying RBO in BB10 ---
Relop [000137] BB10 value unknown, trying inference
No usable PhiDef VNs

optRedundantRelop in BB16; jump tree is
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int    $1d0
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null $VN.Null
 ... checking previous tree
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0 $40
 -- prev tree not STORE_LCL_VAR

--- Trying RBO in BB16 ---
Relop [000130] BB16 value unknown, trying inference
BB16 has global phi for V05.4; no phi-based threading

optRedundantRelop in BB09; jump tree is
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int    $1c1
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0 $40
 ... checking previous tree
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long   $2c3
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48 $206
 -- prev tree VN is not related
 ... checking previous tree
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long   $2c2
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16 $204
 -- prev tree VN is not related
 ... checking previous tree
N004 (  0,  0) [000200] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         d:4 $VN.Void
N003 (  0,  0) [000199] -----------                         \--*  PHI       byref  $283
N001 (  0,  0) [000214] ----------- pred BB08                  +--*  PHI_ARG   byref  V29 tmp4         u:3 $246
N002 (  0,  0) [000213] ----------- pred BB07                  \--*  PHI_ARG   byref  V29 tmp4         u:2 $80
 -- prev tree is a phi

--- Trying RBO in BB09 ---
Relop [000078] BB09 value unknown, trying inference
BB09 has global phi for V29.4; no phi-based threading

optRedundantRelop in BB07; jump tree is
N004 (  5,  5) [000050] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000049] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null
 ... checking previous tree
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80
 -- prev tree VN is not related
 ... checking previous tree
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long   $2c1
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8 $200
 -- prev tree VN is not related
 ... checking previous tree
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4 $VN.Void
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref  $282
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3 $244
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2 $80
 -- prev tree is a phi

--- Trying RBO in BB07 ---
Relop [000049] BB07 value unknown, trying inference

Dominator BB05 of BB07 has relop with same liberal VN
N003 (  3,  3) [000034] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
 Redundant compare; current relop:
N003 (  3,  3) [000049] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
Both successors of idom BB05 reach BB07 -- attempting jump threading
BB07 has side effects; no threading

Dominator BB03 of BB07 has relop with same liberal VN
N003 (  3,  3) [000019] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
 Redundant compare; current relop:
N003 (  3,  3) [000049] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
 -- BB05 not closest branching dom, so no threading

Dominator BB01 of BB07 has relop with same liberal VN
N003 (  3,  3) [000005] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
 Redundant compare; current relop:
N003 (  3,  3) [000049] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
 -- BB05 not closest branching dom, so no threading
BB07 has global phi for V28.4; no phi-based threading

optRedundantRelop in BB05; jump tree is
N004 (  5,  5) [000035] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000034] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null
 ... checking previous tree
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80
 -- prev tree VN is not related
 ... checking previous tree
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long   $2c0
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4 $202
 -- prev tree VN is not related
 ... checking previous tree
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4 $VN.Void
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref  $281
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3 $242
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2 $80
 -- prev tree is a phi

--- Trying RBO in BB05 ---
Relop [000034] BB05 value unknown, trying inference

Dominator BB03 of BB05 has relop with same liberal VN
N003 (  3,  3) [000019] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
 Redundant compare; current relop:
N003 (  3,  3) [000034] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
Both successors of idom BB03 reach BB05 -- attempting jump threading
BB05 has side effects; no threading

Dominator BB01 of BB05 has relop with same liberal VN
N003 (  3,  3) [000005] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
 Redundant compare; current relop:
N003 (  3,  3) [000034] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
 -- BB03 not closest branching dom, so no threading
BB05 has global phi for V27.4; no phi-based threading

optRedundantRelop in BB03; jump tree is
N004 (  5,  5) [000020] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000019] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null
 ... checking previous tree
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80
 -- prev tree VN is not related
 ... checking previous tree
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1 $c0
 -- prev tree VN is not related
 ... checking previous tree
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4 $VN.Void
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref  $280
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3 $240
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2 $80
 -- prev tree is a phi

--- Trying RBO in BB03 ---
Relop [000019] BB03 value unknown, trying inference

Dominator BB01 of BB03 has relop with same liberal VN
N003 (  3,  3) [000005] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
 Redundant compare; current relop:
N003 (  3,  3) [000019] J----+-N---                         *  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                         \--*  CNS_INT   byref  0 $VN.Null
Both successors of idom BB01 reach BB03 -- attempting jump threading
BB03 has side effects; no threading
BB03 has global phi for V26.4; no phi-based threading

optRedundantRelop in BB01; jump tree is
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000005] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null
 ... checking previous tree
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80
 -- prev tree VN is not related
 ... checking previous tree
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null $VN.Null
 -- prev tree VN is not related

--- Trying RBO in BB01 ---

*************** Finishing PHASE Redundant branch opts [no changes]

*************** Starting PHASE Optimize Valnum CSEs
CONST CSE is disabled
Standard CSE Heuristic
Standard CSE Heuristic

*************** Finishing PHASE Optimize Valnum CSEs
Trees after Optimize Valnum CSEs

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC rare keep hascall xentry gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null $VN.Null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000005] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
N004 (  3,  3) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N003 (  3,  3) [000193] -----+-----                         \--*  ADD       byref  $240
N001 (  1,  1) [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000192] -----+-----                            \--*  CNS_INT   long   8 $200

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00064 ( ??? ... ??? )
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4 $VN.Void
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref  $280
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3 $240
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2 $80

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1 $c0

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
N004 (  5,  5) [000020] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000019] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
N004 (  3,  3) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N003 (  3,  3) [000189] -----+-----                         \--*  ADD       byref  $242
N001 (  1,  1) [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000188] -----+-----                            \--*  CNS_INT   long   12 $201

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00063 ( ??? ... ??? )
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4 $VN.Void
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref  $281
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3 $242
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2 $80

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long   $2c0
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4 $202

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
N004 (  5,  5) [000035] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000034] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
N004 (  3,  3) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N003 (  3,  3) [000185] -----+-----                         \--*  ADD       byref  $244
N001 (  1,  1) [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000184] -----+-----                            \--*  CNS_INT   long   16 $204

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00062 ( ??? ... ??? )
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4 $VN.Void
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref  $282
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3 $244
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2 $80

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long   $2c1
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8 $200

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
N004 (  5,  5) [000050] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000049] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
N004 (  3,  3) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N003 (  3,  3) [000181] -----+-----                         \--*  ADD       byref  $246
N001 (  1,  1) [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000180] -----+-----                            \--*  CNS_INT   long   24 $205

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}

***** BB09 [0008]
STMT00061 ( ??? ... ??? )
N004 (  0,  0) [000200] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         d:4 $VN.Void
N003 (  0,  0) [000199] -----------                         \--*  PHI       byref  $283
N001 (  0,  0) [000214] ----------- pred BB08                  +--*  PHI_ARG   byref  V29 tmp4         u:3 $246
N002 (  0,  0) [000213] ----------- pred BB07                  \--*  PHI_ARG   byref  V29 tmp4         u:2 $80

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long   $2c2
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16 $204

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long   $2c3
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48 $206

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int    $1c1
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0 $40

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000137] J----+-N---                         \--*  EQ        int    $1c2
N001 (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1 $41

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000173] J----+-N---                         \--*  EQ        int    $1c9
N001 (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2 $42

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241
N002 (  3,  2) [000087] U--XG+-----                         \--*  IND       int    <l:$1cb, c:$1ca>
N001 (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243
N002 (  3,  2) [000093] U--XG+-----                         \--*  IND       int    <l:$1cd, c:$1cc>
N001 (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245
N002 (  3,  2) [000099] U--XG+-----                         \--*  IND       int    <l:$1cf, c:$1ce>
N001 (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247
N002 (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$403, c:$402>
N001 (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
N001 (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N002 (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref    <l:$39f, c:$39e>
N001 (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N003 (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        u:2 $248

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void
N001 (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref    $34d

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void
N002 ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method> $34e
N001 (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void   $VN.Void

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
N004 ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
N002 (  6,  4) [000140] U--XG+-----                         \--*  IND       int    <l:$1c4, c:$1c3>
N001 (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
N004 ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
N002 (  6,  4) [000146] U--XG+-----                         \--*  IND       int    <l:$1c6, c:$1c5>
N001 (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
N004 ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
N002 (  6,  4) [000152] U--XG+-----                         \--*  IND       int    <l:$1c8, c:$1c7>
N001 (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
N004 ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
N002 (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$401, c:$400>
N001 (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
N004 ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref    $395
N003 (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N002 ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method> $348
N001 (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void   $VN.Void

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}

***** BB16 [0019]
STMT00060 ( ??? ... ??? )
N004 (  0,  0) [000198] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         d:4 $VN.Void
N003 (  0,  0) [000197] -----------                         \--*  PHI       ref    $480
N001 (  0,  0) [000216] ----------- pred BB13                  +--*  PHI_ARG   ref    V05 loc1         u:3 $34e
N002 (  0,  0) [000215] ----------- pred BB11                  \--*  PHI_ARG   ref    V05 loc1         u:2 $VN.Null

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N001 (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int    $1d0
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null $VN.Null

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void
N001 (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         u:4 (last use) $480

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Assertion prop
GenTreeNode creates assertion:
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void   $VN.Void
In BB01 New Global Constant Assertion: ($80,$0) V26.02 == 0, index = #01
GenTreeNode creates assertion:
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void   $VN.Void
In BB01 New Global Constant Assertion: ($80,$0) V26.02 != 0, index = #02
GenTreeNode creates assertion:
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void
In BB09 New Global Constant Assertion: ($100,$40) V02.01 == 0, index = #03
GenTreeNode creates assertion:
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void
In BB09 New Global Constant Assertion: ($100,$40) V02.01 != 0, index = #04
GenTreeNode creates assertion:
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void
In BB10 New Global Constant Assertion: ($100,$41) V02.01 == 1, index = #05
GenTreeNode creates assertion:
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void
In BB10 New Global Constant Assertion: ($100,$41) V02.01 != 1, index = #06
GenTreeNode creates assertion:
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void
In BB11 New Global Constant Assertion: ($100,$42) V02.01 == 2, index = #07
GenTreeNode creates assertion:
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void
In BB11 New Global Constant Assertion: ($100,$42) V02.01 != 2, index = #08
GenTreeNode creates assertion:
N002 (  3,  2) [000087] U--XG+-----                         *  IND       int    <l:$1cb, c:$1ca>
In BB12 New Global Constant Assertion: ($280,$0) V26.04 != 0, index = #09
GenTreeNode creates assertion:
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int    $384
In BB12 New Global Constant Assertion: ($241,$0) V07.02 != 0, index = #10
GenTreeNode creates assertion:
N002 (  3,  2) [000093] U--XG+-----                         *  IND       int    <l:$1cd, c:$1cc>
In BB12 New Global Constant Assertion: ($281,$0) V27.04 != 0, index = #11
GenTreeNode creates assertion:
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int    $389
In BB12 New Global Constant Assertion: ($243,$0) V11.02 != 0, index = #12
GenTreeNode creates assertion:
N002 (  3,  2) [000099] U--XG+-----                         *  IND       int    <l:$1cf, c:$1ce>
In BB12 New Global Constant Assertion: ($282,$0) V28.04 != 0, index = #13
GenTreeNode creates assertion:
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int    $38e
In BB12 New Global Constant Assertion: ($245,$0) V15.02 != 0, index = #14
GenTreeNode creates assertion:
N002 (  7,  5) [000105] U--XG+-----                         *  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$403, c:$402>
In BB12 New Global Constant Assertion: ($283,$0) V29.04 != 0, index = #15
GenTreeNode creates assertion:
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
In BB12 New Global Constant Assertion: ($247,$0) V19.02 != 0, index = #16
GenTreeNode creates assertion:
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
In BB12 New Global Constant Assertion: ($248,$0) V23.02 != 0, index = #17
Trying to determine the exact type of write barrier for STOREIND [16906]: unknown (checked).
GenTreeNode creates assertion:
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void
In BB16 New Global Constant Assertion: ($480,$0) V05.04 == null, index = #18
GenTreeNode creates assertion:
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void
In BB16 New Global Constant Assertion: ($480,$0) V05.04 != null, index = #19

BB01 valueGen = #02 => BB03 valueGen = #01
BB02 valueGen = #NA
BB03 valueGen = #02 => BB05 valueGen = #01
BB04 valueGen = #NA
BB05 valueGen = #02 => BB07 valueGen = #01
BB06 valueGen = #NA
BB07 valueGen = #02 => BB09 valueGen = #01
BB08 valueGen = #NA
Compiler::optImpliedByConstAssertion: const assertion #03 implies assertion #06
Compiler::optImpliedByConstAssertion: const assertion #03 implies assertion #08
BB09 valueGen = #04 => BB12 valueGen = #03 #06 #08
Compiler::optImpliedByConstAssertion: const assertion #05 implies assertion #04
Compiler::optImpliedByConstAssertion: const assertion #05 implies assertion #08
BB10 valueGen = #06 => BB15 valueGen = #04 #05 #08
Compiler::optImpliedByConstAssertion: const assertion #07 implies assertion #04
Compiler::optImpliedByConstAssertion: const assertion #07 implies assertion #06
BB11 valueGen = #08 => BB16 valueGen = #04 #06 #07
BB12 valueGen = #02 #09 #10 #11 #12 #13 #14 #15 #16 #17
BB13 valueGen = #NA
BB14 valueGen = #NA
BB15 valueGen = #02 #09 #10 #11 #12 #13 #14 #15 #16
BB16 valueGen = #19 => BB14 valueGen = #18
BB17 valueGen = #NA

BB01:
 in   = #NA
 out  = #02
 BB03 = #01
BB02:
 in   = #02
 out  = #02
BB03:
 in   = #NA
 out  = #02
 BB05 = #01
BB04:
 in   = #02
 out  = #02
BB05:
 in   = #NA
 out  = #02
 BB07 = #01
BB06:
 in   = #02
 out  = #02
BB07:
 in   = #NA
 out  = #02
 BB09 = #01
BB08:
 in   = #02
 out  = #02
BB09:
 in   = #NA
 out  = #04
 BB12 = #03 #06 #08
BB10:
 in   = #04
 out  = #04 #06
 BB15 = #04 #05 #08
BB11:
 in   = #04 #06
 out  = #04 #06 #08
 BB16 = #04 #06 #07
BB12:
 in   = #06 #08
 out  = #02 #06 #08 #09 #10 #11 #12 #13 #14 #15 #16 #17
BB13:
 in   = #06 #08
 out  = #06 #08
BB14:
 in   = #06
 out  = #06
BB15:
 in   = #04 #05 #08
 out  = #02 #04 #05 #08 #09 #10 #11 #12 #13 #14 #15 #16
BB16:
 in   = #06
 out  = #06 #19
 BB14 = #06 #18
BB17:
 in   = #06 #19
 out  = #06 #19

Propagating #NA for BB01, stmt STMT00000, tree [000000], tree -> #NA
Propagating #NA for BB01, stmt STMT00000, tree [000001], tree -> #NA
Propagating #NA for BB01, stmt STMT00002, tree [000002], tree -> #NA
Propagating #NA for BB01, stmt STMT00002, tree [000007], tree -> #NA
Propagating #NA for BB01, stmt STMT00001, tree [000003], tree -> #NA
Propagating #NA for BB01, stmt STMT00001, tree [000004], tree -> #NA
Propagating #NA for BB01, stmt STMT00001, tree [000005], tree -> #NA
Propagating #NA for BB01, stmt STMT00001, tree [000006], tree -> #01
Propagating #02 for BB02, stmt STMT00059, tree [000009], tree -> #NA
Propagating #02 for BB02, stmt STMT00059, tree [000192], tree -> #NA
Propagating #02 for BB02, stmt STMT00059, tree [000193], tree -> #NA
Propagating #02 for BB02, stmt STMT00059, tree [000194], tree -> #NA
Propagating #NA for BB03, stmt STMT00004, tree [000012], tree -> #NA
Propagating #NA for BB03, stmt STMT00004, tree [000015], tree -> #NA
Propagating #NA for BB03, stmt STMT00006, tree [000016], tree -> #NA
Propagating #NA for BB03, stmt STMT00006, tree [000021], tree -> #NA
Propagating #NA for BB03, stmt STMT00005, tree [000017], tree -> #NA
Propagating #NA for BB03, stmt STMT00005, tree [000018], tree -> #NA
Propagating #NA for BB03, stmt STMT00005, tree [000019], tree -> #NA
Propagating #NA for BB03, stmt STMT00005, tree [000020], tree -> #01
Propagating #02 for BB04, stmt STMT00058, tree [000023], tree -> #NA
Propagating #02 for BB04, stmt STMT00058, tree [000188], tree -> #NA
Propagating #02 for BB04, stmt STMT00058, tree [000189], tree -> #NA
Propagating #02 for BB04, stmt STMT00058, tree [000190], tree -> #NA
Propagating #NA for BB05, stmt STMT00008, tree [000026], tree -> #NA
Propagating #NA for BB05, stmt STMT00008, tree [000028], tree -> #NA
Propagating #NA for BB05, stmt STMT00008, tree [000029], tree -> #NA
Propagating #NA for BB05, stmt STMT00008, tree [000030], tree -> #NA
Propagating #NA for BB05, stmt STMT00010, tree [000031], tree -> #NA
Propagating #NA for BB05, stmt STMT00010, tree [000036], tree -> #NA
Propagating #NA for BB05, stmt STMT00009, tree [000032], tree -> #NA
Propagating #NA for BB05, stmt STMT00009, tree [000033], tree -> #NA
Propagating #NA for BB05, stmt STMT00009, tree [000034], tree -> #NA
Propagating #NA for BB05, stmt STMT00009, tree [000035], tree -> #01
Propagating #02 for BB06, stmt STMT00057, tree [000038], tree -> #NA
Propagating #02 for BB06, stmt STMT00057, tree [000184], tree -> #NA
Propagating #02 for BB06, stmt STMT00057, tree [000185], tree -> #NA
Propagating #02 for BB06, stmt STMT00057, tree [000186], tree -> #NA
Propagating #NA for BB07, stmt STMT00012, tree [000041], tree -> #NA
Propagating #NA for BB07, stmt STMT00012, tree [000043], tree -> #NA
Propagating #NA for BB07, stmt STMT00012, tree [000044], tree -> #NA
Propagating #NA for BB07, stmt STMT00012, tree [000045], tree -> #NA
Propagating #NA for BB07, stmt STMT00014, tree [000046], tree -> #NA
Propagating #NA for BB07, stmt STMT00014, tree [000051], tree -> #NA
Propagating #NA for BB07, stmt STMT00013, tree [000047], tree -> #NA
Propagating #NA for BB07, stmt STMT00013, tree [000048], tree -> #NA
Propagating #NA for BB07, stmt STMT00013, tree [000049], tree -> #NA
Propagating #NA for BB07, stmt STMT00013, tree [000050], tree -> #01
Propagating #02 for BB08, stmt STMT00056, tree [000053], tree -> #NA
Propagating #02 for BB08, stmt STMT00056, tree [000180], tree -> #NA
Propagating #02 for BB08, stmt STMT00056, tree [000181], tree -> #NA
Propagating #02 for BB08, stmt STMT00056, tree [000182], tree -> #NA
Propagating #NA for BB09, stmt STMT00016, tree [000056], tree -> #NA
Propagating #NA for BB09, stmt STMT00016, tree [000058], tree -> #NA
Propagating #NA for BB09, stmt STMT00016, tree [000059], tree -> #NA
Propagating #NA for BB09, stmt STMT00016, tree [000060], tree -> #NA
Propagating #NA for BB09, stmt STMT00020, tree [000071], tree -> #NA
Propagating #NA for BB09, stmt STMT00020, tree [000073], tree -> #NA
Propagating #NA for BB09, stmt STMT00020, tree [000074], tree -> #NA
Propagating #NA for BB09, stmt STMT00020, tree [000075], tree -> #NA
Propagating #NA for BB09, stmt STMT00021, tree [000076], tree -> #NA
Propagating #NA for BB09, stmt STMT00021, tree [000077], tree -> #NA
Propagating #NA for BB09, stmt STMT00021, tree [000078], tree -> #NA
Propagating #NA for BB09, stmt STMT00021, tree [000079], tree -> #03
Compiler::optImpliedByConstAssertion: const assertion #03 implies assertion #06
Compiler::optImpliedByConstAssertion: const assertion #03 implies assertion #08
Propagating #04 for BB10, stmt STMT00041, tree [000135], tree -> #NA
Propagating #04 for BB10, stmt STMT00041, tree [000136], tree -> #NA
Propagating #04 for BB10, stmt STMT00041, tree [000137], tree -> #NA
Propagating #04 for BB10, stmt STMT00041, tree [000138], tree -> #05
Compiler::optImpliedByConstAssertion: const assertion #05 implies assertion #04
Compiler::optImpliedByConstAssertion: const assertion #05 implies assertion #08
Propagating #04 #06 for BB11, stmt STMT00054, tree [000171], tree -> #NA
Propagating #04 #06 for BB11, stmt STMT00054, tree [000172], tree -> #NA
Propagating #04 #06 for BB11, stmt STMT00054, tree [000173], tree -> #NA
Propagating #04 #06 for BB11, stmt STMT00054, tree [000174], tree -> #07
Compiler::optImpliedByConstAssertion: const assertion #07 implies assertion #04
Compiler::optImpliedByConstAssertion: const assertion #07 implies assertion #06
Propagating #06 #08 for BB12, stmt STMT00022, tree [000082], tree -> #NA
Propagating #06 #08 for BB12, stmt STMT00022, tree [000083], tree -> #NA
Propagating #06 #08 for BB12, stmt STMT00022, tree [000085], tree -> #NA
Propagating #06 #08 for BB12, stmt STMT00024, tree [000086], tree -> #NA
Propagating #06 #08 for BB12, stmt STMT00024, tree [000087], tree -> #09
Propagating #06 #08 #09 for BB12, stmt STMT00024, tree [000089], tree -> #NA
Propagating #06 #08 #09 for BB12, stmt STMT00024, tree [000091], tree -> #10
Propagating #06 #08 #09 #10 for BB12, stmt STMT00026, tree [000092], tree -> #NA
Propagating #06 #08 #09 #10 for BB12, stmt STMT00026, tree [000093], tree -> #11
Propagating #06 #08 #09 #10 #11 for BB12, stmt STMT00026, tree [000095], tree -> #NA
Propagating #06 #08 #09 #10 #11 for BB12, stmt STMT00026, tree [000097], tree -> #12
Propagating #06 #08 #09 #10 #11 #12 for BB12, stmt STMT00028, tree [000098], tree -> #NA
Propagating #06 #08 #09 #10 #11 #12 for BB12, stmt STMT00028, tree [000099], tree -> #13
Propagating #06 #08 #09 #10 #11 #12 #13 for BB12, stmt STMT00028, tree [000101], tree -> #NA
Propagating #06 #08 #09 #10 #11 #12 #13 for BB12, stmt STMT00028, tree [000103], tree -> #14
Propagating #06 #08 #09 #10 #11 #12 #13 #14 for BB12, stmt STMT00030, tree [000104], tree -> #NA
Propagating #06 #08 #09 #10 #11 #12 #13 #14 for BB12, stmt STMT00030, tree [000105], tree -> #15
Propagating #06 #08 #09 #10 #11 #12 #13 #14 #15 for BB12, stmt STMT00030, tree [000107], tree -> #NA
Propagating #06 #08 #09 #10 #11 #12 #13 #14 #15 for BB12, stmt STMT00030, tree [000109], tree -> #16
Propagating #06 #08 #09 #10 #11 #12 #13 #14 #15 #16 for BB12, stmt STMT00031, tree [000110], tree -> #NA
Propagating #06 #08 #09 #10 #11 #12 #13 #14 #15 #16 for BB12, stmt STMT00031, tree [000111], tree -> #NA
Propagating #06 #08 #09 #10 #11 #12 #13 #14 #15 #16 for BB12, stmt STMT00031, tree [000112], tree -> #17
Propagating #06 #08 #09 #10 #11 #12 #13 #14 #15 #16 #17 for BB12, stmt STMT00032, tree [000113], tree -> #NA
Propagating #06 #08 #09 #10 #11 #12 #13 #14 #15 #16 #17 for BB12, stmt STMT00032, tree [000114], tree -> #02
Propagating #02 #06 #08 #09 #10 #11 #12 #13 #14 #15 #16 #17 for BB12, stmt STMT00032, tree [000115], tree -> #NA
Propagating #02 #06 #08 #09 #10 #11 #12 #13 #14 #15 #16 #17 for BB12, stmt STMT00032, tree [000116], tree -> #NA
Propagating #06 #08 for BB13, stmt STMT00034, tree [000081], tree -> #NA
Propagating #06 #08 for BB13, stmt STMT00034, tree [000118], tree -> #NA
Propagating #06 #08 for BB13, stmt STMT00035, tree [000119], tree -> #NA
Propagating #06 #08 for BB13, stmt STMT00035, tree [000120], tree -> #NA
Propagating #06 #08 for BB13, stmt STMT00035, tree [000121], tree -> #NA
Propagating #06 for BB14, stmt STMT00033, tree [000117], tree -> #NA
Propagating #04 #05 #08 for BB15, stmt STMT00043, tree [000139], tree -> #NA
Propagating #04 #05 #08 for BB15, stmt STMT00043, tree [000140], tree -> #10
Propagating #04 #05 #08 #10 for BB15, stmt STMT00043, tree [000142], tree -> #NA
Propagating #04 #05 #08 #10 for BB15, stmt STMT00043, tree [000144], tree -> #09
Propagating #04 #05 #08 #09 #10 for BB15, stmt STMT00045, tree [000145], tree -> #NA
Propagating #04 #05 #08 #09 #10 for BB15, stmt STMT00045, tree [000146], tree -> #12
Propagating #04 #05 #08 #09 #10 #12 for BB15, stmt STMT00045, tree [000148], tree -> #NA
Propagating #04 #05 #08 #09 #10 #12 for BB15, stmt STMT00045, tree [000150], tree -> #11
Propagating #04 #05 #08 #09 #10 #11 #12 for BB15, stmt STMT00047, tree [000151], tree -> #NA
Propagating #04 #05 #08 #09 #10 #11 #12 for BB15, stmt STMT00047, tree [000152], tree -> #14
Propagating #04 #05 #08 #09 #10 #11 #12 #14 for BB15, stmt STMT00047, tree [000154], tree -> #NA
Propagating #04 #05 #08 #09 #10 #11 #12 #14 for BB15, stmt STMT00047, tree [000156], tree -> #13
Propagating #04 #05 #08 #09 #10 #11 #12 #13 #14 for BB15, stmt STMT00049, tree [000157], tree -> #NA
Propagating #04 #05 #08 #09 #10 #11 #12 #13 #14 for BB15, stmt STMT00049, tree [000158], tree -> #16
Propagating #04 #05 #08 #09 #10 #11 #12 #13 #14 #16 for BB15, stmt STMT00049, tree [000160], tree -> #NA
Propagating #04 #05 #08 #09 #10 #11 #12 #13 #14 #16 for BB15, stmt STMT00049, tree [000162], tree -> #15
Propagating #04 #05 #08 #09 #10 #11 #12 #13 #14 #15 #16 for BB15, stmt STMT00052, tree [000163], tree -> #NA
Propagating #04 #05 #08 #09 #10 #11 #12 #13 #14 #15 #16 for BB15, stmt STMT00052, tree [000164], tree -> #NA
Propagating #04 #05 #08 #09 #10 #11 #12 #13 #14 #15 #16 for BB15, stmt STMT00052, tree [000167], tree -> #NA
Propagating #04 #05 #08 #09 #10 #11 #12 #13 #14 #15 #16 for BB15, stmt STMT00052, tree [000169], tree -> #02
Trying to determine the exact type of write barrier for STOREIND [16906]: unknown (checked).
Propagating #02 #04 #05 #08 #09 #10 #11 #12 #13 #14 #15 #16 for BB15, stmt STMT00053, tree [000170], tree -> #NA
Propagating #06 for BB16, stmt STMT00036, tree [000122], tree -> #NA
Propagating #06 for BB16, stmt STMT00036, tree [000123], tree -> #NA
Propagating #06 for BB16, stmt STMT00037, tree [000124], tree -> #NA
Propagating #06 for BB16, stmt STMT00037, tree [000125], tree -> #NA
Propagating #06 for BB16, stmt STMT00037, tree [000127], tree -> #NA
Propagating #06 for BB16, stmt STMT00038, tree [000128], tree -> #NA
Propagating #06 for BB16, stmt STMT00038, tree [000129], tree -> #NA
Propagating #06 for BB16, stmt STMT00038, tree [000130], tree -> #NA
Propagating #06 for BB16, stmt STMT00038, tree [000131], tree -> #18
Propagating #06 #19 for BB17, stmt STMT00039, tree [000132], tree -> #NA
Propagating #06 #19 for BB17, stmt STMT00039, tree [000133], tree -> #NA

*************** Finishing PHASE Assertion prop [no changes]

*************** Starting PHASE Optimize index checks

*************** Finishing PHASE Optimize index checks [no changes]

*************** Starting PHASE Optimize Induction Variables
*************** In optInductionVariables()
  Skipping since this method has no natural loops

*************** Finishing PHASE Optimize Induction Variables [no changes]

*************** Starting PHASE VN-based dead store removal
Considering [000001] for removal...
 -- no; first explicit def of a non-STRUCT local
Considering [000121] for removal...
 -- no; last def not in the same block
Considering [000198] for removal...
 -- no; last def not in the same block
Considering [000015] for removal...
 -- no; last def not in the same block
Considering [000030] for removal...
 -- no; last def not in the same block
Considering [000045] for removal...
 -- no; last def not in the same block
Considering [000060] for removal...
 -- no; last def not in the same block
Considering [000075] for removal...
 -- no; last def not in the same block
Considering [000007] for removal...
 -- no; first explicit def of a non-STRUCT local
Considering [000194] for removal...
 -- no; last def not in the same block
Considering [000206] for removal...
 -- no; last def not in the same block
Considering [000021] for removal...
 -- no; last def not in the same block
Considering [000190] for removal...
 -- no; last def not in the same block
Considering [000204] for removal...
 -- no; last def not in the same block
Considering [000036] for removal...
 -- no; last def not in the same block
Considering [000186] for removal...
 -- no; last def not in the same block
Considering [000202] for removal...
 -- no; last def not in the same block
Considering [000051] for removal...
 -- no; last def not in the same block
Considering [000182] for removal...
 -- no; last def not in the same block
Considering [000200] for removal...
 -- no; last def not in the same block
Considering [000118] for removal...
 -- no; last def not in the same block

*************** Finishing PHASE VN-based dead store removal [no changes]

*************** Starting PHASE VN based intrinsic expansion

*************** Finishing PHASE VN based intrinsic expansion [no changes]

*************** Starting PHASE Stress gtSplitTree

*************** Finishing PHASE Stress gtSplitTree [no changes]

*************** Starting PHASE Remove empty finally 2

*************** Before fgRemoveEmptyFinally()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC rare keep hascall xentry gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB12..BB12 [08C..0F8), Handler at BB13..BB13 [0F8..103)

EH#0 is not a try-finally or try-fault; skipping.

*************** Finishing PHASE Remove empty finally 2 [no changes]

*************** Starting PHASE Create EH funclets
Relocating handler range BB13..BB13 (EH#0) to end of BBlist

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0   catch { }   i IBC rare keep hascall xentry gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB12..BB12 [08C..0F8), Handler at BB13..BB13 [0F8..103)
Relocated block [BB13..BB13] inserted after BB17 at the end of method
Create funclets: moved region

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB12..BB12 [08C..0F8), Handler at BB13..BB13 [0F8..103)

*************** Finishing PHASE Create EH funclets
Trees after Create EH funclets

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null $VN.Null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000005] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
N004 (  3,  3) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N003 (  3,  3) [000193] -----+-----                         \--*  ADD       byref  $240
N001 (  1,  1) [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000192] -----+-----                            \--*  CNS_INT   long   8 $200

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00064 ( ??? ... ??? )
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4 $VN.Void
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref  $280
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3 $240
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2 $80

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1 $c0

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
N004 (  5,  5) [000020] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000019] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
N004 (  3,  3) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N003 (  3,  3) [000189] -----+-----                         \--*  ADD       byref  $242
N001 (  1,  1) [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000188] -----+-----                            \--*  CNS_INT   long   12 $201

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00063 ( ??? ... ??? )
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4 $VN.Void
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref  $281
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3 $242
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2 $80

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long   $2c0
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4 $202

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
N004 (  5,  5) [000035] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000034] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
N004 (  3,  3) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N003 (  3,  3) [000185] -----+-----                         \--*  ADD       byref  $244
N001 (  1,  1) [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000184] -----+-----                            \--*  CNS_INT   long   16 $204

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00062 ( ??? ... ??? )
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4 $VN.Void
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref  $282
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3 $244
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2 $80

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long   $2c1
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8 $200

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
N004 (  5,  5) [000050] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000049] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
N004 (  3,  3) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N003 (  3,  3) [000181] -----+-----                         \--*  ADD       byref  $246
N001 (  1,  1) [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000180] -----+-----                            \--*  CNS_INT   long   24 $205

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}

***** BB09 [0008]
STMT00061 ( ??? ... ??? )
N004 (  0,  0) [000200] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         d:4 $VN.Void
N003 (  0,  0) [000199] -----------                         \--*  PHI       byref  $283
N001 (  0,  0) [000214] ----------- pred BB08                  +--*  PHI_ARG   byref  V29 tmp4         u:3 $246
N002 (  0,  0) [000213] ----------- pred BB07                  \--*  PHI_ARG   byref  V29 tmp4         u:2 $80

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long   $2c2
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16 $204

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long   $2c3
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48 $206

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int    $1c1
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0 $40

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000137] J----+-N---                         \--*  EQ        int    $1c2
N001 (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1 $41

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000173] J----+-N---                         \--*  EQ        int    $1c9
N001 (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2 $42

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241
N002 (  3,  2) [000087] U--XG+-----                         \--*  IND       int    <l:$1cb, c:$1ca>
N001 (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243
N002 (  3,  2) [000093] U--XG+-----                         \--*  IND       int    <l:$1cd, c:$1cc>
N001 (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245
N002 (  3,  2) [000099] U--XG+-----                         \--*  IND       int    <l:$1cf, c:$1ce>
N001 (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247
N002 (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$403, c:$402>
N001 (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
N001 (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N002 (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref    <l:$39f, c:$39e>
N001 (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N003 (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        u:2 $248

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void   $VN.Void

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
N004 ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
N002 (  6,  4) [000140] U--XG+-----                         \--*  IND       int    <l:$1c4, c:$1c3>
N001 (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
N004 ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
N002 (  6,  4) [000146] U--XG+-----                         \--*  IND       int    <l:$1c6, c:$1c5>
N001 (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
N004 ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
N002 (  6,  4) [000152] U--XG+-----                         \--*  IND       int    <l:$1c8, c:$1c7>
N001 (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
N004 ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
N002 (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$401, c:$400>
N001 (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
N004 ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref    $395
N003 (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N002 ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method> $348
N001 (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void   $VN.Void

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}

***** BB16 [0019]
STMT00060 ( ??? ... ??? )
N004 (  0,  0) [000198] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         d:4 $VN.Void
N003 (  0,  0) [000197] -----------                         \--*  PHI       ref    $480
N001 (  0,  0) [000216] ----------- pred BB13                  +--*  PHI_ARG   ref    V05 loc1         u:3 $34e
N002 (  0,  0) [000215] ----------- pred BB11                  \--*  PHI_ARG   ref    V05 loc1         u:2 $VN.Null

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N001 (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int    $1d0
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null $VN.Null

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void
N001 (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         u:4 (last use) $480

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void
N001 (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref    $34d

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void
N002 ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method> $34e
N001 (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Expand casts

*************** Finishing PHASE Expand casts [no changes]

*************** Starting PHASE Expand runtime lookups

*************** Finishing PHASE Expand runtime lookups [no changes]

*************** Starting PHASE Expand static init
Nothing to expand.

*************** Finishing PHASE Expand static init [no changes]

*************** Starting PHASE Expand TLS access
Nothing to expand.

*************** Finishing PHASE Expand TLS access [no changes]

*************** Starting PHASE Insert GC Polls

*************** Finishing PHASE Insert GC Polls [no changes]

*************** Starting PHASE Create throw helper blocks

*************** Finishing PHASE Create throw helper blocks [no changes]

*************** Starting PHASE Optimize bools
*************** In optOptimizeBools()

optimized 0 BBJ_COND cases, 0 BBJ_RETURN cases in 1 passes

*************** Finishing PHASE Optimize bools
Trees after Optimize bools

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(0.48),BB02(0.52)   ( cond )                     i IBC
BB02 [0001]  1       BB01                  0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(0.48),BB04(0.52)   ( cond )                     i IBC
BB04 [0003]  1       BB03                  0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(0.48),BB06(0.52)   ( cond )                     i IBC
BB06 [0005]  1       BB05                  0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(0.48),BB08(0.52)   ( cond )                     i IBC
BB08 [0007]  1       BB07                  0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null $VN.Null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000005] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
N004 (  3,  3) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N003 (  3,  3) [000193] -----+-----                         \--*  ADD       byref  $240
N001 (  1,  1) [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000192] -----+-----                            \--*  CNS_INT   long   8 $200

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00064 ( ??? ... ??? )
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4 $VN.Void
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref  $280
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3 $240
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2 $80

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1 $c0

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
N004 (  5,  5) [000020] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000019] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
N004 (  3,  3) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N003 (  3,  3) [000189] -----+-----                         \--*  ADD       byref  $242
N001 (  1,  1) [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000188] -----+-----                            \--*  CNS_INT   long   12 $201

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00063 ( ??? ... ??? )
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4 $VN.Void
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref  $281
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3 $242
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2 $80

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long   $2c0
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4 $202

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
N004 (  5,  5) [000035] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000034] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
N004 (  3,  3) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N003 (  3,  3) [000185] -----+-----                         \--*  ADD       byref  $244
N001 (  1,  1) [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000184] -----+-----                            \--*  CNS_INT   long   16 $204

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00062 ( ??? ... ??? )
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4 $VN.Void
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref  $282
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3 $244
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2 $80

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long   $2c1
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8 $200

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
N004 (  5,  5) [000050] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000049] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
N004 (  3,  3) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N003 (  3,  3) [000181] -----+-----                         \--*  ADD       byref  $246
N001 (  1,  1) [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000180] -----+-----                            \--*  CNS_INT   long   24 $205

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}

***** BB09 [0008]
STMT00061 ( ??? ... ??? )
N004 (  0,  0) [000200] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         d:4 $VN.Void
N003 (  0,  0) [000199] -----------                         \--*  PHI       byref  $283
N001 (  0,  0) [000214] ----------- pred BB08                  +--*  PHI_ARG   byref  V29 tmp4         u:3 $246
N002 (  0,  0) [000213] ----------- pred BB07                  \--*  PHI_ARG   byref  V29 tmp4         u:2 $80

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long   $2c2
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16 $204

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long   $2c3
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48 $206

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int    $1c1
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0 $40

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000137] J----+-N---                         \--*  EQ        int    $1c2
N001 (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1 $41

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000173] J----+-N---                         \--*  EQ        int    $1c9
N001 (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2 $42

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241
N002 (  3,  2) [000087] U--XG+-----                         \--*  IND       int    <l:$1cb, c:$1ca>
N001 (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243
N002 (  3,  2) [000093] U--XG+-----                         \--*  IND       int    <l:$1cd, c:$1cc>
N001 (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245
N002 (  3,  2) [000099] U--XG+-----                         \--*  IND       int    <l:$1cf, c:$1ce>
N001 (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247
N002 (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$403, c:$402>
N001 (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
N001 (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N002 (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref    <l:$39f, c:$39e>
N001 (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N003 (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        u:2 $248

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void   $VN.Void

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
N004 ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
N002 (  6,  4) [000140] U--XG+-----                         \--*  IND       int    <l:$1c4, c:$1c3>
N001 (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
N004 ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
N002 (  6,  4) [000146] U--XG+-----                         \--*  IND       int    <l:$1c6, c:$1c5>
N001 (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
N004 ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
N002 (  6,  4) [000152] U--XG+-----                         \--*  IND       int    <l:$1c8, c:$1c7>
N001 (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
N004 ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
N002 (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$401, c:$400>
N001 (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
N004 ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref    $395
N003 (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N002 ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method> $348
N001 (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void   $VN.Void

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}

***** BB16 [0019]
STMT00060 ( ??? ... ??? )
N004 (  0,  0) [000198] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         d:4 $VN.Void
N003 (  0,  0) [000197] -----------                         \--*  PHI       ref    $480
N001 (  0,  0) [000216] ----------- pred BB13                  +--*  PHI_ARG   ref    V05 loc1         u:3 $34e
N002 (  0,  0) [000215] ----------- pred BB11                  \--*  PHI_ARG   ref    V05 loc1         u:2 $VN.Null

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N001 (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int    $1d0
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null $VN.Null

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void
N001 (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         u:4 (last use) $480

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void
N001 (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref    $34d

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void
N002 ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method> $34e
N001 (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE If conversion

Conditionally executing BB08 inside BB07

------------ BB07 [0006] [039..04D) -> BB09(0.48),BB08(0.52) (cond), preds={BB05,BB06} succs={BB08,BB09}

***** BB07 [0006]
STMT00062 ( ??? ... ??? )
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4 $VN.Void
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref  $282
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3 $244
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2 $80

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long   $2c1
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8 $200

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
N004 (  5,  5) [000050] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000049] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                            +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={BB07} succs={BB09}

***** BB08 [0007]
STMT00056 ( ??? ... 0x04F )
N004 (  3,  3) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N003 (  3,  3) [000181] -----+-----                         \--*  ADD       byref  $246
N001 (  1,  1) [000053] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000180] -----+-----                            \--*  CNS_INT   long   24 $205
setting likelihood of BB07 -> BB09 from 0.48 to 1

After if conversion

------------ BB07 [0006] [039..04D) -> BB09(1) (always), preds={BB05,BB06} succs={BB09}

***** BB07 [0006]
STMT00062 ( ??? ... ??? )
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4 $VN.Void
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref  $282
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3 $244
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2 $80

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long   $2c1
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8 $200

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
N001 (  0,  0) [000050] -----+-----                         *  NOP       void  

***** BB07 [0006]
STMT00056 ( ??? ... 0x04F )
N009 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N008 (  8,  8) [000218] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000049] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                            |  +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000217] -----------                            +--*  LCL_VAR   byref  V29 tmp4         
N007 (  3,  3) [000181] -----+-----                            \--*  ADD       byref  $246
N005 (  1,  1) [000053] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000180] -----+-----                               \--*  CNS_INT   long   24 $205

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={} succs={BB09}

Conditionally executing BB06 inside BB05

------------ BB05 [0004] [022..036) -> BB07(0.48),BB06(0.52) (cond), preds={BB03,BB04} succs={BB06,BB07}

***** BB05 [0004]
STMT00063 ( ??? ... ??? )
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4 $VN.Void
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref  $281
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3 $242
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2 $80

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long   $2c0
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4 $202

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
N004 (  5,  5) [000035] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000034] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                            +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={BB05} succs={BB07}

***** BB06 [0005]
STMT00057 ( ??? ... 0x038 )
N004 (  3,  3) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N003 (  3,  3) [000185] -----+-----                         \--*  ADD       byref  $244
N001 (  1,  1) [000038] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000184] -----+-----                            \--*  CNS_INT   long   16 $204
setting likelihood of BB05 -> BB07 from 0.48 to 1

After if conversion

------------ BB05 [0004] [022..036) -> BB07(1) (always), preds={BB03,BB04} succs={BB07}

***** BB05 [0004]
STMT00063 ( ??? ... ??? )
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4 $VN.Void
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref  $281
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3 $242
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2 $80

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long   $2c0
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4 $202

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
N001 (  0,  0) [000035] -----+-----                         *  NOP       void  

***** BB05 [0004]
STMT00057 ( ??? ... 0x038 )
N009 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N008 (  8,  8) [000222] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000034] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                            |  +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000221] -----------                            +--*  LCL_VAR   byref  V28 tmp3         
N007 (  3,  3) [000185] -----+-----                            \--*  ADD       byref  $244
N005 (  1,  1) [000038] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000184] -----+-----                               \--*  CNS_INT   long   16 $204

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={} succs={BB07}

Conditionally executing BB04 inside BB03

------------ BB03 [0002] [00D..01F) -> BB05(0.48),BB04(0.52) (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03 [0002]
STMT00064 ( ??? ... ??? )
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4 $VN.Void
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref  $280
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3 $240
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2 $80

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1 $c0

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
N004 (  5,  5) [000020] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000019] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                            +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={BB03} succs={BB05}

***** BB04 [0003]
STMT00058 ( ??? ... 0x021 )
N004 (  3,  3) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N003 (  3,  3) [000189] -----+-----                         \--*  ADD       byref  $242
N001 (  1,  1) [000023] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000188] -----+-----                            \--*  CNS_INT   long   12 $201
setting likelihood of BB03 -> BB05 from 0.48 to 1

After if conversion

------------ BB03 [0002] [00D..01F) -> BB05(1) (always), preds={BB01,BB02} succs={BB05}

***** BB03 [0002]
STMT00064 ( ??? ... ??? )
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4 $VN.Void
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref  $280
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3 $240
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2 $80

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1 $c0

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
N001 (  0,  0) [000020] -----+-----                         *  NOP       void  

***** BB03 [0002]
STMT00058 ( ??? ... 0x021 )
N009 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N008 (  8,  8) [000224] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000019] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                            |  +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000223] -----------                            +--*  LCL_VAR   byref  V27 tmp2         
N007 (  3,  3) [000189] -----+-----                            \--*  ADD       byref  $242
N005 (  1,  1) [000023] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000188] -----+-----                               \--*  CNS_INT   long   12 $201

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={} succs={BB05}

Conditionally executing BB02 inside BB01

------------ BB01 [0000] [000..00B) -> BB03(0.48),BB02(0.52) (cond), preds={} succs={BB02,BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null $VN.Null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
N004 (  5,  5) [000006] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000005] J----+-N---                         \--*  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                            +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                            \--*  CNS_INT   byref  0 $VN.Null

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={BB01} succs={BB03}

***** BB02 [0001]
STMT00059 ( ??? ... 0x00C )
N004 (  3,  3) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N003 (  3,  3) [000193] -----+-----                         \--*  ADD       byref  $240
N001 (  1,  1) [000009] -----+-----                            +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N002 (  1,  1) [000192] -----+-----                            \--*  CNS_INT   long   8 $200
setting likelihood of BB01 -> BB03 from 0.48 to 1

After if conversion

------------ BB01 [0000] [000..00B) -> BB03(1) (always), preds={} succs={BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null $VN.Null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
N001 (  0,  0) [000006] -----+-----                         *  NOP       void  

***** BB01 [0000]
STMT00059 ( ??? ... 0x00C )
N009 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N008 (  8,  8) [000226] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000005] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                            |  +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000225] -----------                            +--*  LCL_VAR   byref  V26 tmp1         
N007 (  3,  3) [000193] -----+-----                            \--*  ADD       byref  $240
N005 (  1,  1) [000009] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000192] -----+-----                               \--*  CNS_INT   long   8 $200

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={} succs={BB03}

*************** Finishing PHASE If conversion
Trees after If conversion

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(1)                 (always)                     i IBC
BB02 [0001]  0                             0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(1)                 (always)                     i IBC
BB04 [0003]  0                             0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(1)                 (always)                     i IBC
BB06 [0005]  0                             0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(1)                 (always)                     i IBC
BB08 [0007]  0                             0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..00B) -> BB03(1) (always), preds={} succs={BB03}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null $VN.Null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
N001 (  0,  0) [000006] -----+-----                         *  NOP       void  

***** BB01 [0000]
STMT00059 ( ??? ... 0x00C )
N009 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N008 (  8,  8) [000226] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000005] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                            |  +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000225] -----------                            +--*  LCL_VAR   byref  V26 tmp1         
N007 (  3,  3) [000193] -----+-----                            \--*  ADD       byref  $240
N005 (  1,  1) [000009] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000192] -----+-----                               \--*  CNS_INT   long   8 $200

------------ BB02 [0001] [00B..00D) -> BB03(1) (always), preds={} succs={BB03}

------------ BB03 [0002] [00D..01F) -> BB05(1) (always), preds={BB01,BB02} succs={BB05}

***** BB03 [0002]
STMT00064 ( ??? ... ??? )
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4 $VN.Void
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref  $280
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3 $240
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2 $80

***** BB03 [0002]
STMT00004 ( ??? ... 0x013 )
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1 $c0

***** BB03 [0002]
STMT00006 ( ??? ... 0x01A )
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB03 [0002]
STMT00005 ( ??? ... 0x01A )
N001 (  0,  0) [000020] -----+-----                         *  NOP       void  

***** BB03 [0002]
STMT00058 ( ??? ... 0x021 )
N009 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N008 (  8,  8) [000224] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000019] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                            |  +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000223] -----------                            +--*  LCL_VAR   byref  V27 tmp2         
N007 (  3,  3) [000189] -----+-----                            \--*  ADD       byref  $242
N005 (  1,  1) [000023] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000188] -----+-----                               \--*  CNS_INT   long   12 $201

------------ BB04 [0003] [01F..022) -> BB05(1) (always), preds={} succs={BB05}

------------ BB05 [0004] [022..036) -> BB07(1) (always), preds={BB03,BB04} succs={BB07}

***** BB05 [0004]
STMT00063 ( ??? ... ??? )
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4 $VN.Void
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref  $281
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3 $242
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2 $80

***** BB05 [0004]
STMT00008 ( ??? ... 0x029 )
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long   $2c0
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4 $202

***** BB05 [0004]
STMT00010 ( ??? ... 0x031 )
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB05 [0004]
STMT00009 ( ??? ... 0x031 )
N001 (  0,  0) [000035] -----+-----                         *  NOP       void  

***** BB05 [0004]
STMT00057 ( ??? ... 0x038 )
N009 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N008 (  8,  8) [000222] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000034] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                            |  +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000221] -----------                            +--*  LCL_VAR   byref  V28 tmp3         
N007 (  3,  3) [000185] -----+-----                            \--*  ADD       byref  $244
N005 (  1,  1) [000038] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000184] -----+-----                               \--*  CNS_INT   long   16 $204

------------ BB06 [0005] [036..039) -> BB07(1) (always), preds={} succs={BB07}

------------ BB07 [0006] [039..04D) -> BB09(1) (always), preds={BB05,BB06} succs={BB09}

***** BB07 [0006]
STMT00062 ( ??? ... ??? )
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4 $VN.Void
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref  $282
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3 $244
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2 $80

***** BB07 [0006]
STMT00012 ( ??? ... 0x040 )
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long   $2c1
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8 $200

***** BB07 [0006]
STMT00014 ( ??? ... 0x048 )
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB07 [0006]
STMT00013 ( ??? ... 0x048 )
N001 (  0,  0) [000050] -----+-----                         *  NOP       void  

***** BB07 [0006]
STMT00056 ( ??? ... 0x04F )
N009 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N008 (  8,  8) [000218] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000049] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                            |  +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000217] -----------                            +--*  LCL_VAR   byref  V29 tmp4         
N007 (  3,  3) [000181] -----+-----                            \--*  ADD       byref  $246
N005 (  1,  1) [000053] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000180] -----+-----                               \--*  CNS_INT   long   24 $205

------------ BB08 [0007] [04D..050) -> BB09(1) (always), preds={} succs={BB09}

------------ BB09 [0008] [050..07B) -> BB12(0.48),BB10(0.52) (cond), preds={BB07,BB08} succs={BB10,BB12}

***** BB09 [0008]
STMT00061 ( ??? ... ??? )
N004 (  0,  0) [000200] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         d:4 $VN.Void
N003 (  0,  0) [000199] -----------                         \--*  PHI       byref  $283
N001 (  0,  0) [000214] ----------- pred BB08                  +--*  PHI_ARG   byref  V29 tmp4         u:3 $246
N002 (  0,  0) [000213] ----------- pred BB07                  \--*  PHI_ARG   byref  V29 tmp4         u:2 $80

***** BB09 [0008]
STMT00016 ( ??? ... 0x058 )
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long   $2c2
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16 $204

***** BB09 [0008]
STMT00020 ( ??? ... 0x06F )
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long   $2c3
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48 $206

***** BB09 [0008]
STMT00021 ( ??? ... 0x076 )
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int    $1c1
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0 $40

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB09} succs={BB11,BB15}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000137] J----+-N---                         \--*  EQ        int    $1c2
N001 (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1 $41

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000173] J----+-N---                         \--*  EQ        int    $1c9
N001 (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2 $42

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB09,BB11} succs={BB14}

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241
N002 (  3,  2) [000087] U--XG+-----                         \--*  IND       int    <l:$1cb, c:$1ca>
N001 (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243
N002 (  3,  2) [000093] U--XG+-----                         \--*  IND       int    <l:$1cd, c:$1cc>
N001 (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245
N002 (  3,  2) [000099] U--XG+-----                         \--*  IND       int    <l:$1cf, c:$1ce>
N001 (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247
N002 (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$403, c:$402>
N001 (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
N001 (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N002 (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref    <l:$39f, c:$39e>
N001 (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N003 (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        u:2 $248

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void   $VN.Void

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
N004 ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
N002 (  6,  4) [000140] U--XG+-----                         \--*  IND       int    <l:$1c4, c:$1c3>
N001 (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
N004 ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
N002 (  6,  4) [000146] U--XG+-----                         \--*  IND       int    <l:$1c6, c:$1c5>
N001 (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
N004 ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
N002 (  6,  4) [000152] U--XG+-----                         \--*  IND       int    <l:$1c8, c:$1c7>
N001 (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
N004 ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
N002 (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$401, c:$400>
N001 (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
N004 ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref    $395
N003 (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N002 ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method> $348
N001 (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void   $VN.Void

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}

***** BB16 [0019]
STMT00060 ( ??? ... ??? )
N004 (  0,  0) [000198] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         d:4 $VN.Void
N003 (  0,  0) [000197] -----------                         \--*  PHI       ref    $480
N001 (  0,  0) [000216] ----------- pred BB13                  +--*  PHI_ARG   ref    V05 loc1         u:3 $34e
N002 (  0,  0) [000215] ----------- pred BB11                  \--*  PHI_ARG   ref    V05 loc1         u:2 $VN.Null

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N001 (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int    $1d0
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null $VN.Null

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void
N001 (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         u:4 (last use) $480

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void
N001 (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref    $34d

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void
N002 ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method> $34e
N001 (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Optimize layout

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..00B)-> BB03(1)                 (always)                     i IBC
BB02 [0001]  0                             0.52  52 [00B..00D)-> BB03(1)                 (always)                     i IBC
BB03 [0002]  2       BB01,BB02             1    100 [00D..01F)-> BB05(1)                 (always)                     i IBC
BB04 [0003]  0                             0.52  52 [01F..022)-> BB05(1)                 (always)                     i IBC
BB05 [0004]  2       BB03,BB04             1    100 [022..036)-> BB07(1)                 (always)                     i IBC
BB06 [0005]  0                             0.52  52 [036..039)-> BB07(1)                 (always)                     i IBC
BB07 [0006]  2       BB05,BB06             1    100 [039..04D)-> BB09(1)                 (always)                     i IBC
BB08 [0007]  0                             0.52  52 [04D..050)-> BB09(1)                 (always)                     i IBC
BB09 [0008]  2       BB07,BB08             1    100 [050..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB09                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB09,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------


Compacting BB03 into BB02:
Second block has 1 other incoming edges
setting likelihood of BB02 -> BB05 from 1 to 1
*************** In fgDebugCheckBBlist

Compacting BB05 into BB04:
Second block has 1 other incoming edges
setting likelihood of BB04 -> BB07 from 1 to 1
*************** In fgDebugCheckBBlist

Compacting BB07 into BB06:
Second block has 1 other incoming edges
setting likelihood of BB06 -> BB09 from 1 to 1
*************** In fgDebugCheckBBlist

Compacting BB09 into BB08:
Second block has 1 other incoming edges
*************** In fgDebugCheckBBlist

Compacting BB02 into BB01:
setting likelihood of BB01 -> BB04 from 1 to 1
*************** In fgDebugCheckBBlist

Compacting BB04 into BB01:
setting likelihood of BB01 -> BB06 from 1 to 1
*************** In fgDebugCheckBBlist

Compacting BB06 into BB01:
setting likelihood of BB01 -> BB08 from 1 to 1
*************** In fgDebugCheckBBlist

Compacting BB08 into BB01:
*************** In fgDebugCheckBBlist

After updating the flow graph:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB12..BB12 [08C..0F8), Handler at BB13..BB13 [0F8..103)
*************** In fgDebugCheckBBlist

*************** In fgExpandRarelyRunBlocks()

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize layout
Trees after Optimize layout

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i IBC
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12}

***** BB01 [0000]
STMT00064 ( ??? ... ??? )
N004 (  0,  0) [000206] DA---------                         *  STORE_LCL_VAR byref  V26 tmp1         d:4 $VN.Void
N003 (  0,  0) [000205] -----------                         \--*  PHI       byref  $280
N001 (  0,  0) [000208] ----------- pred BB02                  +--*  PHI_ARG   byref  V26 tmp1         u:3 $240
N002 (  0,  0) [000207] ----------- pred BB01                  \--*  PHI_ARG   byref  V26 tmp1         u:2 $80

***** BB01 [0000]
STMT00063 ( ??? ... ??? )
N004 (  0,  0) [000204] DA---------                         *  STORE_LCL_VAR byref  V27 tmp2         d:4 $VN.Void
N003 (  0,  0) [000203] -----------                         \--*  PHI       byref  $281
N001 (  0,  0) [000210] ----------- pred BB04                  +--*  PHI_ARG   byref  V27 tmp2         u:3 $242
N002 (  0,  0) [000209] ----------- pred BB03                  \--*  PHI_ARG   byref  V27 tmp2         u:2 $80

***** BB01 [0000]
STMT00062 ( ??? ... ??? )
N004 (  0,  0) [000202] DA---------                         *  STORE_LCL_VAR byref  V28 tmp3         d:4 $VN.Void
N003 (  0,  0) [000201] -----------                         \--*  PHI       byref  $282
N001 (  0,  0) [000212] ----------- pred BB06                  +--*  PHI_ARG   byref  V28 tmp3         u:3 $244
N002 (  0,  0) [000211] ----------- pred BB05                  \--*  PHI_ARG   byref  V28 tmp3         u:2 $80

***** BB01 [0000]
STMT00061 ( ??? ... ??? )
N004 (  0,  0) [000200] DA---------                         *  STORE_LCL_VAR byref  V29 tmp4         d:4 $VN.Void
N003 (  0,  0) [000199] -----------                         \--*  PHI       byref  $283
N001 (  0,  0) [000214] ----------- pred BB08                  +--*  PHI_ARG   byref  V29 tmp4         u:3 $246
N002 (  0,  0) [000213] ----------- pred BB07                  \--*  PHI_ARG   byref  V29 tmp4         u:2 $80

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x001 )
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000000] -----+-----                         \--*  CNS_INT   ref    null $VN.Null

***** BB01 [0000]
STMT00002 ( ??? ... 0x006 )
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00001 ( ??? ... 0x006 )
N001 (  0,  0) [000006] -----+-----                         *  NOP       void  

***** BB01 [0000]
STMT00059 ( ??? ... 0x00C )
N009 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N008 (  8,  8) [000226] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000005] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000003] -----+-----                            |  +--*  LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000225] -----------                            +--*  LCL_VAR   byref  V26 tmp1         
N007 (  3,  3) [000193] -----+-----                            \--*  ADD       byref  $240
N005 (  1,  1) [000009] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000192] -----+-----                               \--*  CNS_INT   long   8 $200

***** BB01 [0000]
STMT00004 ( ??? ... 0x013 )
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000012] -----+-----                         \--*  LCL_VAR   long   V01 arg1         u:1 $c0

***** BB01 [0000]
STMT00006 ( ??? ... 0x01A )
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00005 ( ??? ... 0x01A )
N001 (  0,  0) [000020] -----+-----                         *  NOP       void  

***** BB01 [0000]
STMT00058 ( ??? ... 0x021 )
N009 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N008 (  8,  8) [000224] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000019] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000017] -----+-----                            |  +--*  LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000223] -----------                            +--*  LCL_VAR   byref  V27 tmp2         
N007 (  3,  3) [000189] -----+-----                            \--*  ADD       byref  $242
N005 (  1,  1) [000023] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000188] -----+-----                               \--*  CNS_INT   long   12 $201

***** BB01 [0000]
STMT00008 ( ??? ... 0x029 )
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N003 (  3,  3) [000029] -----+-----                         \--*  ADD       long   $2c0
N001 (  1,  1) [000026] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                            \--*  CNS_INT   long   4 $202

***** BB01 [0000]
STMT00010 ( ??? ... 0x031 )
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00009 ( ??? ... 0x031 )
N001 (  0,  0) [000035] -----+-----                         *  NOP       void  

***** BB01 [0000]
STMT00057 ( ??? ... 0x038 )
N009 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N008 (  8,  8) [000222] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000034] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000032] -----+-----                            |  +--*  LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000221] -----------                            +--*  LCL_VAR   byref  V28 tmp3         
N007 (  3,  3) [000185] -----+-----                            \--*  ADD       byref  $244
N005 (  1,  1) [000038] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000184] -----+-----                               \--*  CNS_INT   long   16 $204

***** BB01 [0000]
STMT00012 ( ??? ... 0x040 )
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N003 (  3,  3) [000044] -----+-----                         \--*  ADD       long   $2c1
N001 (  1,  1) [000041] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                            \--*  CNS_INT   long   8 $200

***** BB01 [0000]
STMT00014 ( ??? ... 0x048 )
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                         \--*  LCL_VAR   byref  V00 arg0         u:1 $80

***** BB01 [0000]
STMT00013 ( ??? ... 0x048 )
N001 (  0,  0) [000050] -----+-----                         *  NOP       void  

***** BB01 [0000]
STMT00056 ( ??? ... 0x04F )
N009 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N008 (  8,  8) [000218] -----------                         \--*  SELECT    byref 
N003 (  3,  3) [000049] J----+-N---                            +--*  EQ        int    $1c0
N001 (  1,  1) [000047] -----+-----                            |  +--*  LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                            |  \--*  CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000217] -----------                            +--*  LCL_VAR   byref  V29 tmp4         
N007 (  3,  3) [000181] -----+-----                            \--*  ADD       byref  $246
N005 (  1,  1) [000053] -----+-----                               +--*  LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000180] -----+-----                               \--*  CNS_INT   long   24 $205

***** BB01 [0000]
STMT00016 ( ??? ... 0x058 )
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N003 (  3,  3) [000059] -----+-----                         \--*  ADD       long   $2c2
N001 (  1,  1) [000056] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -----+-----                            \--*  CNS_INT   long   16 $204

***** BB01 [0000]
STMT00020 ( ??? ... 0x06F )
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N003 (  3,  3) [000074] -----+-----                         \--*  ADD       long   $2c3
N001 (  1,  1) [000071] -----+-----                            +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -----+-----                            \--*  CNS_INT   long   48 $206

***** BB01 [0000]
STMT00021 ( ??? ... 0x076 )
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000078] J----+-N---                         \--*  EQ        int    $1c1
N001 (  1,  1) [000076] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -----+-----                            \--*  CNS_INT   int    0 $40

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15}

***** BB10 [0011]
STMT00041 ( ??? ... 0x07D )
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000137] J----+-N---                         \--*  EQ        int    $1c2
N001 (  1,  1) [000135] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -----+-----                            \--*  CNS_INT   int    1 $41

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}

***** BB11 [0012]
STMT00054 ( ??? ... 0x084 )
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  3,  3) [000173] J----+-N---                         \--*  EQ        int    $1c9
N001 (  1,  1) [000171] -----+-----                            +--*  LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -----+-----                            \--*  CNS_INT   int    2 $42

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14}

***** BB12 [0014]
STMT00022 ( ??? ... 0x091 )
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000082] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000083] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00024 ( ??? ... 0x0A0 )
N004 ( 10,  7) [000091] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  3,  2) [000089] -----+-----                         +--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241
N002 (  3,  2) [000087] U--XG+-----                         \--*  IND       int    <l:$1cb, c:$1ca>
N001 (  1,  1) [000086] -----+-----                            \--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280

***** BB12 [0014]
STMT00026 ( ??? ... 0x0B2 )
N004 ( 10,  7) [000097] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  3,  2) [000095] -----+-----                         +--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243
N002 (  3,  2) [000093] U--XG+-----                         \--*  IND       int    <l:$1cd, c:$1cc>
N001 (  1,  1) [000092] -----+-----                            \--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281

***** BB12 [0014]
STMT00028 ( ??? ... 0x0C4 )
N004 ( 10,  7) [000103] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  3,  2) [000101] -----+-----                         +--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245
N002 (  3,  2) [000099] U--XG+-----                         \--*  IND       int    <l:$1cf, c:$1ce>
N001 (  1,  1) [000098] -----+-----                            \--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282

***** BB12 [0014]
STMT00030 ( ??? ... 0x0DA )
N004 ( 17, 12) [000109] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  3,  2) [000107] -----+-----                         +--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247
N002 (  7,  5) [000105] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$403, c:$402>
N001 (  1,  1) [000104] -----+-----                            \--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283

***** BB12 [0014]
STMT00031 ( ??? ... 0x0E4 )
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
N001 (  3,  2) [000110] -----+-----                         +--*  LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -----+-----                         \--*  CNS_INT   int    0 $40

***** BB12 [0014]
STMT00032 ( ??? ... 0x0F3 )
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N002 (  3,  2) [000114] U--XG+----- arg0 in rcx             +--*  IND       ref    <l:$39f, c:$39e>
N001 (  1,  1) [000113] -----+-----                         |  \--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N003 (  3,  2) [000115] -----+----- arg1 in rdx             \--*  LCL_VAR   byref  V23 loc19        u:2 $248

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}

***** BB14 [0016]
STMT00033 ( ??? ... 0x103 )
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void   $VN.Void

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}

***** BB15 [0017]
STMT00043 ( ??? ... 0x112 )
N004 ( 10,  7) [000144] UA-XG+--R--                         *  STOREIND  int    $384
N003 (  1,  1) [000142] -----+-----                         +--*  LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
N002 (  6,  4) [000140] U--XG+-----                         \--*  IND       int    <l:$1c4, c:$1c3>
N001 (  3,  2) [000139] -----+-----                            \--*  LCL_VAR   byref  V07 loc3         u:2 (last use) $241

***** BB15 [0017]
STMT00045 ( ??? ... 0x124 )
N004 ( 10,  7) [000150] UA-XG+--R--                         *  STOREIND  int    $389
N003 (  1,  1) [000148] -----+-----                         +--*  LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
N002 (  6,  4) [000146] U--XG+-----                         \--*  IND       int    <l:$1c6, c:$1c5>
N001 (  3,  2) [000145] -----+-----                            \--*  LCL_VAR   byref  V11 loc7         u:2 (last use) $243

***** BB15 [0017]
STMT00047 ( ??? ... 0x136 )
N004 ( 10,  7) [000156] UA-XG+--R--                         *  STOREIND  int    $38e
N003 (  1,  1) [000154] -----+-----                         +--*  LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
N002 (  6,  4) [000152] U--XG+-----                         \--*  IND       int    <l:$1c8, c:$1c7>
N001 (  3,  2) [000151] -----+-----                            \--*  LCL_VAR   byref  V15 loc11        u:2 (last use) $245

***** BB15 [0017]
STMT00049 ( ??? ... 0x14C )
N004 ( 17, 12) [000162] UA-XG+--R--                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N003 (  1,  1) [000160] -----+-----                         +--*  LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
N002 (  9,  6) [000158] U--XG+-----                         \--*  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$401, c:$400>
N001 (  3,  2) [000157] -----+-----                            \--*  LCL_VAR   byref  V19 loc15        u:2 (last use) $247

***** BB15 [0017]
STMT00052 ( ??? ... 0x163 )
N004 ( 21, 11) [000169] UACXG+--R--                         *  STOREIND  ref    $395
N003 (  1,  1) [000167] -----+-----                         +--*  LCL_VAR   byref  V00 arg0         u:1 (last use) $80
N002 ( 17,  8) [000164] --CXG+-----                         \--*  CALL      ref    <unknown method> $348
N001 (  3,  2) [000163] -----+----- arg0 in rcx                \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB15 [0017]
STMT00053 ( ??? ... 0x165 )
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void   $VN.Void

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}

***** BB16 [0019]
STMT00060 ( ??? ... ??? )
N004 (  0,  0) [000198] DA---------                         *  STORE_LCL_VAR ref    V05 loc1         d:4 $VN.Void
N003 (  0,  0) [000197] -----------                         \--*  PHI       ref    $480
N001 (  0,  0) [000216] ----------- pred BB13                  +--*  PHI_ARG   ref    V05 loc1         u:3 $34e
N002 (  0,  0) [000215] ----------- pred BB11                  \--*  PHI_ARG   ref    V05 loc1         u:2 $VN.Null

***** BB16 [0019]
STMT00036 ( ??? ... 0x173 )
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N001 (  3,  2) [000122] -----+----- arg0 in rcx             \--*  LCL_VAR   byref  V23 loc19        u:2 (last use) $248

***** BB16 [0019]
STMT00037 ( ??? ... ??? )
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000124] -----+-----                         +--*  LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -----+-N---                         \--*  CNS_INT   int    0 $40

***** BB16 [0019]
STMT00038 ( ??? ... 0x175 )
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void
N003 (  5,  4) [000130] J----+-N---                         \--*  EQ        int    $1d0
N001 (  3,  2) [000128] -----+-----                            +--*  LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -----+-----                            \--*  CNS_INT   ref    null $VN.Null

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}

***** BB17 [0020]
STMT00039 ( ??? ... 0x180 )
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void
N001 (  3,  2) [000132] -----+----- this in rcx             \--*  LCL_VAR   ref    V05 loc1         u:4 (last use) $480

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}

***** BB13 [0015]
STMT00034 ( ??? ... 0x0FD )
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void
N001 (  1,  1) [000081] -----+-----                         \--*  CATCH_ARG ref    $34d

***** BB13 [0015]
STMT00035 ( ??? ... ??? )
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void
N002 ( 17,  8) [000120] --CXG+-----                         \--*  CALL      ref    <unknown method> $34e
N001 (  3,  2) [000119] -----+----- arg0 in rcx                \--*  LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Recognize Switch

*************** Finishing PHASE Recognize Switch [no changes]

*************** Starting PHASE Rationalize IR

*************** Finishing PHASE Rationalize IR
Trees after Rationalize IR

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12}
               [000227] -----------                            IL_OFFSET void   INLRT @ 0x000[E-]
N001 (  1,  1) [000000] -----+-----                    t0 =    CNS_INT   ref    null $VN.Null
                                                            /--*  t0     ref    
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                    t2 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t2     byref  
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  0,  0) [000006] -----+-----                            NOP       void  
N001 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -----+-----                    t4 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N003 (  3,  3) [000005] J----+-N---                    t5 = *  EQ        int    $1c0
N004 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1         
N005 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000192] -----+-----                  t192 =    CNS_INT   long   8 $200
                                                            /--*  t9     byref  
                                                            +--*  t192   long   
N007 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  $240
                                                            /--*  t5     int    
                                                            +--*  t225   byref  
                                                            +--*  t193   byref  
N008 (  8,  8) [000226] -----------                  t226 = *  SELECT    byref 
                                                            /--*  t226   byref  
N009 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N001 (  1,  1) [000012] -----+-----                   t12 =    LCL_VAR   long   V01 arg1         u:1 $c0
                                                            /--*  t12    long   
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                   t16 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t16    byref  
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  0,  0) [000020] -----+-----                            NOP       void  
N001 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -----+-----                   t18 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N003 (  3,  3) [000019] J----+-N---                   t19 = *  EQ        int    $1c0
N004 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2         
N005 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000188] -----+-----                  t188 =    CNS_INT   long   12 $201
                                                            /--*  t23    byref  
                                                            +--*  t188   long   
N007 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  $242
                                                            /--*  t19    int    
                                                            +--*  t223   byref  
                                                            +--*  t189   byref  
N008 (  8,  8) [000224] -----------                  t224 = *  SELECT    byref 
                                                            /--*  t224   byref  
N009 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N001 (  1,  1) [000026] -----+-----                   t26 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -----+-----                   t28 =    CNS_INT   long   4 $202
                                                            /--*  t26    long   
                                                            +--*  t28    long   
N003 (  3,  3) [000029] -----+-----                   t29 = *  ADD       long   $2c0
                                                            /--*  t29    long   
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                   t31 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t31    byref  
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  0,  0) [000035] -----+-----                            NOP       void  
N001 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -----+-----                   t33 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N003 (  3,  3) [000034] J----+-N---                   t34 = *  EQ        int    $1c0
N004 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3         
N005 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000184] -----+-----                  t184 =    CNS_INT   long   16 $204
                                                            /--*  t38    byref  
                                                            +--*  t184   long   
N007 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  $244
                                                            /--*  t34    int    
                                                            +--*  t221   byref  
                                                            +--*  t185   byref  
N008 (  8,  8) [000222] -----------                  t222 = *  SELECT    byref 
                                                            /--*  t222   byref  
N009 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N001 (  1,  1) [000041] -----+-----                   t41 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -----+-----                   t43 =    CNS_INT   long   8 $200
                                                            /--*  t41    long   
                                                            +--*  t43    long   
N003 (  3,  3) [000044] -----+-----                   t44 = *  ADD       long   $2c1
                                                            /--*  t44    long   
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                   t46 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t46    byref  
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  0,  0) [000050] -----+-----                            NOP       void  
N001 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -----+-----                   t48 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N003 (  3,  3) [000049] J----+-N---                   t49 = *  EQ        int    $1c0
N004 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4         
N005 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000180] -----+-----                  t180 =    CNS_INT   long   24 $205
                                                            /--*  t53    byref  
                                                            +--*  t180   long   
N007 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  $246
                                                            /--*  t49    int    
                                                            +--*  t217   byref  
                                                            +--*  t181   byref  
N008 (  8,  8) [000218] -----------                  t218 = *  SELECT    byref 
                                                            /--*  t218   byref  
N009 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N001 (  1,  1) [000056] -----+-----                   t56 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -----+-----                   t58 =    CNS_INT   long   16 $204
                                                            /--*  t56    long   
                                                            +--*  t58    long   
N003 (  3,  3) [000059] -----+-----                   t59 = *  ADD       long   $2c2
                                                            /--*  t59    long   
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N001 (  1,  1) [000071] -----+-----                   t71 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -----+-----                   t73 =    CNS_INT   long   48 $206
                                                            /--*  t71    long   
                                                            +--*  t73    long   
N003 (  3,  3) [000074] -----+-----                   t74 = *  ADD       long   $2c3
                                                            /--*  t74    long   
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N001 (  1,  1) [000076] -----+-----                   t76 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -----+-----                   t77 =    CNS_INT   int    0 $40
                                                            /--*  t76    int    
                                                            +--*  t77    int    
N003 (  3,  3) [000078] J----+-N---                   t78 = *  EQ        int    $1c1
                                                            /--*  t78    int    
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15}
N001 (  1,  1) [000135] -----+-----                  t135 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -----+-----                  t136 =    CNS_INT   int    1 $41
                                                            /--*  t135   int    
                                                            +--*  t136   int    
N003 (  3,  3) [000137] J----+-N---                  t137 = *  EQ        int    $1c2
                                                            /--*  t137   int    
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
N001 (  1,  1) [000171] -----+-----                  t171 =    LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -----+-----                  t172 =    CNS_INT   int    2 $42
                                                            /--*  t171   int    
                                                            +--*  t172   int    
N003 (  3,  3) [000173] J----+-N---                  t173 = *  EQ        int    $1c9
                                                            /--*  t173   int    
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14}
N001 (  1,  1) [000082] -----+-----                   t82 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000083] -----+-N---                   t83 =    CNS_INT   int    0 $40
                                                            /--*  t82    long   
                                                            +--*  t83    int    
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  1,  1) [000086] -----+-----                   t86 =    LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
                                                            /--*  t86    byref  
N002 (  3,  2) [000087] U--XG+-----                   t87 = *  IND       int    <l:$1cb, c:$1ca>
N003 (  3,  2) [000089] -----+-----                   t89 =    LCL_VAR   byref  V07 loc3         u:2 (last use) $241
                                                            /--*  t89    byref  
                                                            +--*  t87    int    
N004 ( 10,  7) [000091] UA-XG+-----                         *  STOREIND  int    $384
N001 (  1,  1) [000092] -----+-----                   t92 =    LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
                                                            /--*  t92    byref  
N002 (  3,  2) [000093] U--XG+-----                   t93 = *  IND       int    <l:$1cd, c:$1cc>
N003 (  3,  2) [000095] -----+-----                   t95 =    LCL_VAR   byref  V11 loc7         u:2 (last use) $243
                                                            /--*  t95    byref  
                                                            +--*  t93    int    
N004 ( 10,  7) [000097] UA-XG+-----                         *  STOREIND  int    $389
N001 (  1,  1) [000098] -----+-----                   t98 =    LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
                                                            /--*  t98    byref  
N002 (  3,  2) [000099] U--XG+-----                   t99 = *  IND       int    <l:$1cf, c:$1ce>
N003 (  3,  2) [000101] -----+-----                  t101 =    LCL_VAR   byref  V15 loc11        u:2 (last use) $245
                                                            /--*  t101   byref  
                                                            +--*  t99    int    
N004 ( 10,  7) [000103] UA-XG+-----                         *  STOREIND  int    $38e
N001 (  1,  1) [000104] -----+-----                  t104 =    LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
                                                            /--*  t104   byref  
N002 (  7,  5) [000105] U--XG+-----                  t105 = *  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$403, c:$402>
N003 (  3,  2) [000107] -----+-----                  t107 =    LCL_VAR   byref  V19 loc15        u:2 (last use) $247
                                                            /--*  t107   byref  
                                                            +--*  t105   struct 
N004 ( 17, 12) [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N001 (  3,  2) [000110] -----+-----                  t110 =    LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -----+-----                  t111 =    CNS_INT   int    0 $40
                                                            /--*  t110   byref  
                                                            +--*  t111   int    
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
N001 (  1,  1) [000113] -----+-----                  t113 =    LCL_VAR   byref  V00 arg0         u:1 (last use) $80
                                                            /--*  t113   byref  
N002 (  3,  2) [000114] U--XG+-----                  t114 = *  IND       ref    <l:$39f, c:$39e>
N003 (  3,  2) [000115] -----+-----                  t115 =    LCL_VAR   byref  V23 loc19        u:2 $248
                                                            /--*  t114   ref    arg0 in rcx
                                                            +--*  t115   byref  arg1 in rdx
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
N001 (  0,  0) [000117] -----+-----                            RETURN    void   $VN.Void

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}
N001 (  3,  2) [000139] -----+-----                  t139 =    LCL_VAR   byref  V07 loc3         u:2 (last use) $241
                                                            /--*  t139   byref  
N002 (  6,  4) [000140] U--XG+-----                  t140 = *  IND       int    <l:$1c4, c:$1c3>
N003 (  1,  1) [000142] -----+-----                  t142 =    LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
                                                            /--*  t142   byref  
                                                            +--*  t140   int    
N004 ( 10,  7) [000144] UA-XG+-----                         *  STOREIND  int    $384
N001 (  3,  2) [000145] -----+-----                  t145 =    LCL_VAR   byref  V11 loc7         u:2 (last use) $243
                                                            /--*  t145   byref  
N002 (  6,  4) [000146] U--XG+-----                  t146 = *  IND       int    <l:$1c6, c:$1c5>
N003 (  1,  1) [000148] -----+-----                  t148 =    LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
                                                            /--*  t148   byref  
                                                            +--*  t146   int    
N004 ( 10,  7) [000150] UA-XG+-----                         *  STOREIND  int    $389
N001 (  3,  2) [000151] -----+-----                  t151 =    LCL_VAR   byref  V15 loc11        u:2 (last use) $245
                                                            /--*  t151   byref  
N002 (  6,  4) [000152] U--XG+-----                  t152 = *  IND       int    <l:$1c8, c:$1c7>
N003 (  1,  1) [000154] -----+-----                  t154 =    LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
                                                            /--*  t154   byref  
                                                            +--*  t152   int    
N004 ( 10,  7) [000156] UA-XG+-----                         *  STOREIND  int    $38e
N001 (  3,  2) [000157] -----+-----                  t157 =    LCL_VAR   byref  V19 loc15        u:2 (last use) $247
                                                            /--*  t157   byref  
N002 (  9,  6) [000158] U--XG+-----                  t158 = *  BLK       struct<System.Data.OleDb.tagDBIDX, 32> <l:$401, c:$400>
N003 (  1,  1) [000160] -----+-----                  t160 =    LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
                                                            /--*  t160   byref  
                                                            +--*  t158   struct 
N004 ( 17, 12) [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) $393
N001 (  3,  2) [000163] -----+-----                  t163 =    LCL_VAR   byref  V23 loc19        u:2 (last use) $248
                                                            /--*  t163   byref  arg0 in rcx
N002 ( 17,  8) [000164] --CXG+-----                  t164 = *  CALL      ref    <unknown method> $348
N003 (  1,  1) [000167] -----+-----                  t167 =    LCL_VAR   byref  V00 arg0         u:1 (last use) $80
                                                            /--*  t167   byref  
                                                            +--*  t164   ref    
N004 ( 21, 11) [000169] UACXG+-----                         *  STOREIND  ref    $395
N001 (  0,  0) [000170] -----+-----                            RETURN    void   $VN.Void

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
N001 (  3,  2) [000122] -----+-----                  t122 =    LCL_VAR   byref  V23 loc19        u:2 (last use) $248
                                                            /--*  t122   byref  arg0 in rcx
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N001 (  1,  1) [000124] -----+-----                  t124 =    LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -----+-N---                  t125 =    CNS_INT   int    0 $40
                                                            /--*  t124   long   
                                                            +--*  t125   int    
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) $397
N001 (  3,  2) [000128] -----+-----                  t128 =    LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -----+-----                  t129 =    CNS_INT   ref    null $VN.Null
                                                            /--*  t128   ref    
                                                            +--*  t129   ref    
N003 (  5,  4) [000130] J----+-N---                  t130 = *  EQ        int    $1d0
                                                            /--*  t130   int    
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
N001 (  3,  2) [000132] -----+-----                  t132 =    LCL_VAR   ref    V05 loc1         u:4 (last use) $480
                                                            /--*  t132   ref    this in rcx
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
N001 (  1,  1) [000081] -----+-----                   t81 =    CATCH_ARG ref    $34d
                                                            /--*  t81    ref    
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void
N001 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d
                                                            /--*  t119   ref    arg0 in rcx
N002 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> $34e
                                                            /--*  t120   ref    
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Lowering nodeinfo
lowering store lcl var/field (before):
N001 (  1,  1) [000000] -----+-----                    t0 =    CNS_INT   ref    null $VN.Null
                                                            /--*  t0     ref    
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000000] -----+-----                    t0 =    CNS_INT   ref    null $VN.Null
                                                            /--*  t0     ref    
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000002] -----+-----                    t2 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t2     byref  
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000002] -----+-----                    t2 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t2     byref  
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void

Lowering select:
N001 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N003 (  3,  3) [000005] J----+-N---                    t5 = *  EQ        int    $1c0
N004 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1         
N005 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000192] -c---+-----                  t192 =    CNS_INT   long   8 $200
                                                            /--*  t9     byref  
                                                            +--*  t192   long   
N007 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  $240
                                                            /--*  t5     int    
                                                            +--*  t225   byref  
                                                            +--*  t193   byref  
N008 (  8,  8) [000226] -----------                  t226 = *  SELECT    byref 

Lowering condition:
N001 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N003 (  3,  3) [000005] J----+-N---                    t5 = *  EQ        int    $1c0

Converted to SELECTCC:
N001 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1         
N005 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000192] -c---+-----                  t192 =    CNS_INT   long   8 $200
                                                            /--*  t9     byref  
                                                            +--*  t192   long   
N007 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  $240
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N003 (  3,  3) [000005] -----+-N---                         *  CMP       void  
                                                            /--*  t225   byref  
                                                            +--*  t193   byref  
N008 (  8,  8) [000226] -----------                  t226 = *  SELECTCC  byref  cond=UEQ

lowering store lcl var/field (before):
N001 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1         
N005 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000192] -c---+-----                  t192 =    CNS_INT   long   8 $200
                                                            /--*  t9     byref  
                                                            +--*  t192   long   
N007 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  $240
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N003 (  3,  3) [000005] -----+-N---                         *  CMP       void  
                                                            /--*  t225   byref  
                                                            +--*  t193   byref  
N008 (  8,  8) [000226] -----------                  t226 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t226   byref  
N009 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1         
N005 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000192] -c---+-----                  t192 =    CNS_INT   long   8 $200
                                                            /--*  t9     byref  
                                                            +--*  t192   long   
N007 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  $240
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N003 (  3,  3) [000005] -----+-N---                         *  CMP       void  
                                                            /--*  t225   byref  
                                                            +--*  t193   byref  
N008 (  8,  8) [000226] -----------                  t226 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t226   byref  
N009 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000012] -----+-----                   t12 =    LCL_VAR   long   V01 arg1         u:1 $c0
                                                            /--*  t12    long   
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000012] -----+-----                   t12 =    LCL_VAR   long   V01 arg1         u:1 $c0
                                                            /--*  t12    long   
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000016] -----+-----                   t16 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t16    byref  
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000016] -----+-----                   t16 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t16    byref  
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void

Lowering select:
N001 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N003 (  3,  3) [000019] J----+-N---                   t19 = *  EQ        int    $1c0
N004 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2         
N005 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000188] -c---+-----                  t188 =    CNS_INT   long   12 $201
                                                            /--*  t23    byref  
                                                            +--*  t188   long   
N007 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  $242
                                                            /--*  t19    int    
                                                            +--*  t223   byref  
                                                            +--*  t189   byref  
N008 (  8,  8) [000224] -----------                  t224 = *  SELECT    byref 

Lowering condition:
N001 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N003 (  3,  3) [000019] J----+-N---                   t19 = *  EQ        int    $1c0

Converted to SELECTCC:
N001 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2         
N005 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000188] -c---+-----                  t188 =    CNS_INT   long   12 $201
                                                            /--*  t23    byref  
                                                            +--*  t188   long   
N007 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  $242
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N003 (  3,  3) [000019] -----+-N---                         *  CMP       void  
                                                            /--*  t223   byref  
                                                            +--*  t189   byref  
N008 (  8,  8) [000224] -----------                  t224 = *  SELECTCC  byref  cond=UEQ

lowering store lcl var/field (before):
N001 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2         
N005 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000188] -c---+-----                  t188 =    CNS_INT   long   12 $201
                                                            /--*  t23    byref  
                                                            +--*  t188   long   
N007 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  $242
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N003 (  3,  3) [000019] -----+-N---                         *  CMP       void  
                                                            /--*  t223   byref  
                                                            +--*  t189   byref  
N008 (  8,  8) [000224] -----------                  t224 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t224   byref  
N009 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2         
N005 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000188] -c---+-----                  t188 =    CNS_INT   long   12 $201
                                                            /--*  t23    byref  
                                                            +--*  t188   long   
N007 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  $242
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N003 (  3,  3) [000019] -----+-N---                         *  CMP       void  
                                                            /--*  t223   byref  
                                                            +--*  t189   byref  
N008 (  8,  8) [000224] -----------                  t224 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t224   byref  
N009 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000026] -----+-----                   t26 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -c---+-----                   t28 =    CNS_INT   long   4 $202
                                                            /--*  t26    long   
                                                            +--*  t28    long   
N003 (  3,  3) [000029] -----+-----                   t29 = *  ADD       long   $2c0
                                                            /--*  t29    long   
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000026] -----+-----                   t26 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -c---+-----                   t28 =    CNS_INT   long   4 $202
                                                            /--*  t26    long   
                                                            +--*  t28    long   
N003 (  3,  3) [000029] -----+-----                   t29 = *  ADD       long   $2c0
                                                            /--*  t29    long   
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000031] -----+-----                   t31 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t31    byref  
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000031] -----+-----                   t31 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t31    byref  
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void

Lowering select:
N001 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N003 (  3,  3) [000034] J----+-N---                   t34 = *  EQ        int    $1c0
N004 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3         
N005 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000184] -c---+-----                  t184 =    CNS_INT   long   16 $204
                                                            /--*  t38    byref  
                                                            +--*  t184   long   
N007 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  $244
                                                            /--*  t34    int    
                                                            +--*  t221   byref  
                                                            +--*  t185   byref  
N008 (  8,  8) [000222] -----------                  t222 = *  SELECT    byref 

Lowering condition:
N001 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N003 (  3,  3) [000034] J----+-N---                   t34 = *  EQ        int    $1c0

Converted to SELECTCC:
N001 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3         
N005 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000184] -c---+-----                  t184 =    CNS_INT   long   16 $204
                                                            /--*  t38    byref  
                                                            +--*  t184   long   
N007 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  $244
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N003 (  3,  3) [000034] -----+-N---                         *  CMP       void  
                                                            /--*  t221   byref  
                                                            +--*  t185   byref  
N008 (  8,  8) [000222] -----------                  t222 = *  SELECTCC  byref  cond=UEQ

lowering store lcl var/field (before):
N001 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3         
N005 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000184] -c---+-----                  t184 =    CNS_INT   long   16 $204
                                                            /--*  t38    byref  
                                                            +--*  t184   long   
N007 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  $244
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N003 (  3,  3) [000034] -----+-N---                         *  CMP       void  
                                                            /--*  t221   byref  
                                                            +--*  t185   byref  
N008 (  8,  8) [000222] -----------                  t222 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t222   byref  
N009 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3         
N005 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000184] -c---+-----                  t184 =    CNS_INT   long   16 $204
                                                            /--*  t38    byref  
                                                            +--*  t184   long   
N007 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  $244
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N003 (  3,  3) [000034] -----+-N---                         *  CMP       void  
                                                            /--*  t221   byref  
                                                            +--*  t185   byref  
N008 (  8,  8) [000222] -----------                  t222 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t222   byref  
N009 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000041] -----+-----                   t41 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -c---+-----                   t43 =    CNS_INT   long   8 $200
                                                            /--*  t41    long   
                                                            +--*  t43    long   
N003 (  3,  3) [000044] -----+-----                   t44 = *  ADD       long   $2c1
                                                            /--*  t44    long   
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000041] -----+-----                   t41 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -c---+-----                   t43 =    CNS_INT   long   8 $200
                                                            /--*  t41    long   
                                                            +--*  t43    long   
N003 (  3,  3) [000044] -----+-----                   t44 = *  ADD       long   $2c1
                                                            /--*  t44    long   
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000046] -----+-----                   t46 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t46    byref  
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000046] -----+-----                   t46 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t46    byref  
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void

Lowering select:
N001 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N003 (  3,  3) [000049] J----+-N---                   t49 = *  EQ        int    $1c0
N004 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4         
N005 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000180] -c---+-----                  t180 =    CNS_INT   long   24 $205
                                                            /--*  t53    byref  
                                                            +--*  t180   long   
N007 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  $246
                                                            /--*  t49    int    
                                                            +--*  t217   byref  
                                                            +--*  t181   byref  
N008 (  8,  8) [000218] -----------                  t218 = *  SELECT    byref 

Lowering condition:
N001 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 $VN.Null
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N003 (  3,  3) [000049] J----+-N---                   t49 = *  EQ        int    $1c0

Converted to SELECTCC:
N001 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4         
N005 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000180] -c---+-----                  t180 =    CNS_INT   long   24 $205
                                                            /--*  t53    byref  
                                                            +--*  t180   long   
N007 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  $246
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N003 (  3,  3) [000049] -----+-N---                         *  CMP       void  
                                                            /--*  t217   byref  
                                                            +--*  t181   byref  
N008 (  8,  8) [000218] -----------                  t218 = *  SELECTCC  byref  cond=UEQ

lowering store lcl var/field (before):
N001 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4         
N005 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000180] -c---+-----                  t180 =    CNS_INT   long   24 $205
                                                            /--*  t53    byref  
                                                            +--*  t180   long   
N007 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  $246
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N003 (  3,  3) [000049] -----+-N---                         *  CMP       void  
                                                            /--*  t217   byref  
                                                            +--*  t181   byref  
N008 (  8,  8) [000218] -----------                  t218 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t218   byref  
N009 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4         
N005 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000180] -c---+-----                  t180 =    CNS_INT   long   24 $205
                                                            /--*  t53    byref  
                                                            +--*  t180   long   
N007 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  $246
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N003 (  3,  3) [000049] -----+-N---                         *  CMP       void  
                                                            /--*  t217   byref  
                                                            +--*  t181   byref  
N008 (  8,  8) [000218] -----------                  t218 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t218   byref  
N009 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000056] -----+-----                   t56 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -c---+-----                   t58 =    CNS_INT   long   16 $204
                                                            /--*  t56    long   
                                                            +--*  t58    long   
N003 (  3,  3) [000059] -----+-----                   t59 = *  ADD       long   $2c2
                                                            /--*  t59    long   
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000056] -----+-----                   t56 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -c---+-----                   t58 =    CNS_INT   long   16 $204
                                                            /--*  t56    long   
                                                            +--*  t58    long   
N003 (  3,  3) [000059] -----+-----                   t59 = *  ADD       long   $2c2
                                                            /--*  t59    long   
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000071] -----+-----                   t71 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -c---+-----                   t73 =    CNS_INT   long   48 $206
                                                            /--*  t71    long   
                                                            +--*  t73    long   
N003 (  3,  3) [000074] -----+-----                   t74 = *  ADD       long   $2c3
                                                            /--*  t74    long   
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000071] -----+-----                   t71 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -c---+-----                   t73 =    CNS_INT   long   48 $206
                                                            /--*  t71    long   
                                                            +--*  t73    long   
N003 (  3,  3) [000074] -----+-----                   t74 = *  ADD       long   $2c3
                                                            /--*  t74    long   
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void

Lowering JTRUE:
N001 (  1,  1) [000076] -----+-----                   t76 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -c---+-----                   t77 =    CNS_INT   int    0 $40
                                                            /--*  t76    int    
                                                            +--*  t77    int    
N003 (  3,  3) [000078] J----+-N---                   t78 = *  EQ        int    $1c1
                                                            /--*  t78    int    
N004 (  5,  5) [000079] -----+-----                         *  JTRUE     void   $VN.Void

Lowering condition:
N001 (  1,  1) [000076] -----+-----                   t76 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -c---+-----                   t77 =    CNS_INT   int    0 $40
                                                            /--*  t76    int    
                                                            +--*  t77    int    
N003 (  3,  3) [000078] J----+-N---                   t78 = *  EQ        int    $1c1

Lowering JTRUE Result:
N001 (  1,  1) [000076] -----+-----                   t76 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -c---+-----                   t77 =    CNS_INT   int    0 $40
                                                            /--*  t76    int    
                                                            +--*  t77    int    
N003 (  3,  3) [000078] -----+-N---                         *  CMP       void  
N004 (  5,  5) [000079] -----+-----                            JCC       void   cond=UEQ

Lowering JTRUE:
N001 (  1,  1) [000135] -----+-----                  t135 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -c---+-----                  t136 =    CNS_INT   int    1 $41
                                                            /--*  t135   int    
                                                            +--*  t136   int    
N003 (  3,  3) [000137] J----+-N---                  t137 = *  EQ        int    $1c2
                                                            /--*  t137   int    
N004 (  5,  5) [000138] -----+-----                         *  JTRUE     void   $VN.Void

Lowering condition:
N001 (  1,  1) [000135] -----+-----                  t135 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -c---+-----                  t136 =    CNS_INT   int    1 $41
                                                            /--*  t135   int    
                                                            +--*  t136   int    
N003 (  3,  3) [000137] J----+-N---                  t137 = *  EQ        int    $1c2

Lowering JTRUE Result:
N001 (  1,  1) [000135] -----+-----                  t135 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -c---+-----                  t136 =    CNS_INT   int    1 $41
                                                            /--*  t135   int    
                                                            +--*  t136   int    
N003 (  3,  3) [000137] -----+-N---                         *  CMP       void  
N004 (  5,  5) [000138] -----+-----                            JCC       void   cond=UEQ

Lowering JTRUE:
N001 (  1,  1) [000171] -----+-----                  t171 =    LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -c---+-----                  t172 =    CNS_INT   int    2 $42
                                                            /--*  t171   int    
                                                            +--*  t172   int    
N003 (  3,  3) [000173] J----+-N---                  t173 = *  EQ        int    $1c9
                                                            /--*  t173   int    
N004 (  5,  5) [000174] -----+-----                         *  JTRUE     void   $VN.Void

Lowering condition:
N001 (  1,  1) [000171] -----+-----                  t171 =    LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -c---+-----                  t172 =    CNS_INT   int    2 $42
                                                            /--*  t171   int    
                                                            +--*  t172   int    
N003 (  3,  3) [000173] J----+-N---                  t173 = *  EQ        int    $1c9

Lowering JTRUE Result:
N001 (  1,  1) [000171] -----+-----                  t171 =    LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -c---+-----                  t172 =    CNS_INT   int    2 $42
                                                            /--*  t171   int    
                                                            +--*  t172   int    
N003 (  3,  3) [000173] -----+-N---                         *  CMP       void  
N004 (  5,  5) [000174] -----+-----                            JCC       void   cond=UEQ

Notify VM instruction set (SSE2) must be supported.
Lower of StoreInd didn't mark the node as self contained for reason: oper is not supported
N001 (  1,  1) [000086] -----+-----                   t86 =    LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
                                                            /--*  t86    byref  
N002 (  3,  2) [000087] U--XG+-----                   t87 = *  IND       int    <l:$1cb, c:$1ca>
N003 (  3,  2) [000089] -----+-----                   t89 =    LCL_VAR   byref  V07 loc3         u:2 (last use) $241
                                                            /--*  t89    byref  
                                                            +--*  t87    int    
N004 ( 10,  7) [000091] UA-XG+-----                         *  STOREIND  int    $384
Lower of StoreInd didn't mark the node as self contained for reason: oper is not supported
N001 (  1,  1) [000092] -----+-----                   t92 =    LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
                                                            /--*  t92    byref  
N002 (  3,  2) [000093] U--XG+-----                   t93 = *  IND       int    <l:$1cd, c:$1cc>
N003 (  3,  2) [000095] -----+-----                   t95 =    LCL_VAR   byref  V11 loc7         u:2 (last use) $243
                                                            /--*  t95    byref  
                                                            +--*  t93    int    
N004 ( 10,  7) [000097] UA-XG+-----                         *  STOREIND  int    $389
Lower of StoreInd didn't mark the node as self contained for reason: oper is not supported
N001 (  1,  1) [000098] -----+-----                   t98 =    LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
                                                            /--*  t98    byref  
N002 (  3,  2) [000099] U--XG+-----                   t99 = *  IND       int    <l:$1cf, c:$1ce>
N003 (  3,  2) [000101] -----+-----                  t101 =    LCL_VAR   byref  V15 loc11        u:2 (last use) $245
                                                            /--*  t101   byref  
                                                            +--*  t99    int    
N004 ( 10,  7) [000103] UA-XG+-----                         *  STOREIND  int    $38e
Lower of StoreInd didn't mark the node as self contained for reason: oper is not supported
N001 (  3,  2) [000110] -----+-----                  t110 =    LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -----+-----                  t111 =    CNS_INT   int    0 $40
                                                            /--*  t110   byref  
                                                            +--*  t111   int    
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
lowering call (before):
N001 (  1,  1) [000113] -----+-----                  t113 =    LCL_VAR   byref  V00 arg0         u:1 (last use) $80
                                                            /--*  t113   byref  
N002 (  3,  2) [000114] U--XG+-----                  t114 = *  IND       ref    <l:$39f, c:$39e>
N003 (  3,  2) [000115] -----+-----                  t115 =    LCL_VAR   byref  V23 loc19        u:2 $248
                                                            /--*  t114   ref    arg0 in rcx
                                                            +--*  t115   byref  arg1 in rdx
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void

args:
======

late:
======
lowering arg : N002 (  3,  2) [000114] U--XG+-----                         *  IND       ref    <l:$39f, c:$39e>
new node is :                [000228] ---XG------                         *  PUTARG_REG ref    REG rcx

lowering arg : N003 (  3,  2) [000115] -----+-----                         *  LCL_VAR   byref  V23 loc19        u:2 $248
new node is :                [000229] -----------                         *  PUTARG_REG byref  REG rdx

results of lowering call:
N001 (  3, 10) [000230] H----------                  t230 =    CNS_INT(h) long   0x7fff6f084408 ftn
                                                            /--*  t230   long   
N002 (  5, 12) [000231] n---G------                  t231 = *  IND       long  
Bumping outgoing arg space size from 0 to 32 for [000116]
lowering call (after):
N001 (  1,  1) [000113] -----+-----                  t113 =    LCL_VAR   byref  V00 arg0         u:1 (last use) $80
                                                            /--*  t113   byref  
N002 (  3,  2) [000114] U--XG+-----                  t114 = *  IND       ref    <l:$39f, c:$39e>
                                                            /--*  t114   ref    
               [000228] ---XG------                  t228 = *  PUTARG_REG ref    REG rcx
N003 (  3,  2) [000115] -----+-----                  t115 =    LCL_VAR   byref  V23 loc19        u:2 $248
                                                            /--*  t115   byref  
               [000229] -----------                  t229 = *  PUTARG_REG byref  REG rdx
N001 (  3, 10) [000230] Hc---------                  t230 =    CNS_INT(h) long   0x7fff6f084408 ftn
                                                            /--*  t230   long   
N002 (  5, 12) [000231] nc--G------                  t231 = *  IND       long   REG NA
                                                            /--*  t228   ref    arg0 in rcx
                                                            +--*  t229   byref  arg1 in rdx
                                                            +--*  t231   long   control expr
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void

lowering return node
N001 (  0,  0) [000117] -----+-----                         *  RETURN    void   $VN.Void
============
Lower of StoreInd didn't mark the node as self contained for reason: oper is not supported
N001 (  3,  2) [000139] -----+-----                  t139 =    LCL_VAR   byref  V07 loc3         u:2 (last use) $241
                                                            /--*  t139   byref  
N002 (  6,  4) [000140] U--XG+-----                  t140 = *  IND       int    <l:$1c4, c:$1c3>
N003 (  1,  1) [000142] -----+-----                  t142 =    LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
                                                            /--*  t142   byref  
                                                            +--*  t140   int    
N004 ( 10,  7) [000144] UA-XG+-----                         *  STOREIND  int    $384
Lower of StoreInd didn't mark the node as self contained for reason: oper is not supported
N001 (  3,  2) [000145] -----+-----                  t145 =    LCL_VAR   byref  V11 loc7         u:2 (last use) $243
                                                            /--*  t145   byref  
N002 (  6,  4) [000146] U--XG+-----                  t146 = *  IND       int    <l:$1c6, c:$1c5>
N003 (  1,  1) [000148] -----+-----                  t148 =    LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
                                                            /--*  t148   byref  
                                                            +--*  t146   int    
N004 ( 10,  7) [000150] UA-XG+-----                         *  STOREIND  int    $389
Lower of StoreInd didn't mark the node as self contained for reason: oper is not supported
N001 (  3,  2) [000151] -----+-----                  t151 =    LCL_VAR   byref  V15 loc11        u:2 (last use) $245
                                                            /--*  t151   byref  
N002 (  6,  4) [000152] U--XG+-----                  t152 = *  IND       int    <l:$1c8, c:$1c7>
N003 (  1,  1) [000154] -----+-----                  t154 =    LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
                                                            /--*  t154   byref  
                                                            +--*  t152   int    
N004 ( 10,  7) [000156] UA-XG+-----                         *  STOREIND  int    $38e
lowering call (before):
N001 (  3,  2) [000163] -----+-----                  t163 =    LCL_VAR   byref  V23 loc19        u:2 (last use) $248
                                                            /--*  t163   byref  arg0 in rcx
N002 ( 17,  8) [000164] --CXG+-----                  t164 = *  CALL      ref    <unknown method> $348

args:
======

late:
======
lowering arg : N001 (  3,  2) [000163] -----+-----                         *  LCL_VAR   byref  V23 loc19        u:2 (last use) $248
new node is :                [000232] -----------                         *  PUTARG_REG byref  REG rcx

results of lowering call:
N001 (  3, 10) [000233] H----------                  t233 =    CNS_INT(h) long   0x7fff6f084420 ftn
                                                            /--*  t233   long   
N002 (  5, 12) [000234] n---G------                  t234 = *  IND       long  
lowering call (after):
N001 (  3,  2) [000163] -----+-----                  t163 =    LCL_VAR   byref  V23 loc19        u:2 (last use) $248
                                                            /--*  t163   byref  
               [000232] -----------                  t232 = *  PUTARG_REG byref  REG rcx
N001 (  3, 10) [000233] Hc---------                  t233 =    CNS_INT(h) long   0x7fff6f084420 ftn
                                                            /--*  t233   long   
N002 (  5, 12) [000234] nc--G------                  t234 = *  IND       long   REG NA
                                                            /--*  t232   byref  arg0 in rcx
                                                            +--*  t234   long   control expr
N002 ( 17,  8) [000164] --CXG+-----                  t164 = *  CALL      ref    <unknown method> $348

lowering return node
N001 (  0,  0) [000170] -----+-----                         *  RETURN    void   $VN.Void
============
lowering call (before):
N001 (  3,  2) [000122] -----+-----                  t122 =    LCL_VAR   byref  V23 loc19        u:2 (last use) $248
                                                            /--*  t122   byref  arg0 in rcx
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void

args:
======

late:
======
lowering arg : N001 (  3,  2) [000122] -----+-----                         *  LCL_VAR   byref  V23 loc19        u:2 (last use) $248
new node is :                [000235] -----------                         *  PUTARG_REG byref  REG rcx

results of lowering call:
N001 (  3, 10) [000236] H----------                  t236 =    CNS_INT(h) long   0x7fff6f084438 ftn
                                                            /--*  t236   long   
N002 (  5, 12) [000237] n---G------                  t237 = *  IND       long  
lowering call (after):
N001 (  3,  2) [000122] -----+-----                  t122 =    LCL_VAR   byref  V23 loc19        u:2 (last use) $248
                                                            /--*  t122   byref  
               [000235] -----------                  t235 = *  PUTARG_REG byref  REG rcx
N001 (  3, 10) [000236] Hc---------                  t236 =    CNS_INT(h) long   0x7fff6f084438 ftn
                                                            /--*  t236   long   
N002 (  5, 12) [000237] nc--G------                  t237 = *  IND       long   REG NA
                                                            /--*  t235   byref  arg0 in rcx
                                                            +--*  t237   long   control expr
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void

Lowering JTRUE:
N001 (  3,  2) [000128] -c---+-----                  t128 =    LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -c---+-----                  t129 =    CNS_INT   ref    null $VN.Null
                                                            /--*  t128   ref    
                                                            +--*  t129   ref    
N003 (  5,  4) [000130] J----+-N---                  t130 = *  EQ        int    $1d0
                                                            /--*  t130   int    
N004 (  7,  6) [000131] -----+-----                         *  JTRUE     void   $VN.Void

Lowering condition:
N001 (  3,  2) [000128] -c---+-----                  t128 =    LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -c---+-----                  t129 =    CNS_INT   ref    null $VN.Null
                                                            /--*  t128   ref    
                                                            +--*  t129   ref    
N003 (  5,  4) [000130] J----+-N---                  t130 = *  EQ        int    $1d0

Lowering JTRUE Result:
N001 (  3,  2) [000128] -c---+-----                  t128 =    LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -c---+-----                  t129 =    CNS_INT   ref    null $VN.Null
                                                            /--*  t128   ref    
                                                            +--*  t129   ref    
N003 (  5,  4) [000130] -----+-N---                         *  CMP       void  
N004 (  7,  6) [000131] -----+-----                            JCC       void   cond=UEQ

lowering call (before):
N001 (  3,  2) [000132] -----+-----                  t132 =    LCL_VAR   ref    V05 loc1         u:4 (last use) $480
                                                            /--*  t132   ref    this in rcx
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void

args:
======

late:
======
lowering arg : N001 (  3,  2) [000132] -----+-----                         *  LCL_VAR   ref    V05 loc1         u:4 (last use) $480
new node is :                [000238] -----------                         *  PUTARG_REG ref    REG rcx

results of lowering call:
N001 (  3, 10) [000239] H----------                  t239 =    CNS_INT(h) long   0x7fff6d1fcf18 ftn
                                                            /--*  t239   long   
N002 (  5, 12) [000240] n---G------                  t240 = *  IND       long  
lowering call (after):
N001 (  3,  2) [000132] -----+-----                  t132 =    LCL_VAR   ref    V05 loc1         u:4 (last use) $480
                                                            /--*  t132   ref    
               [000238] -----------                  t238 = *  PUTARG_REG ref    REG rcx
N001 (  3, 10) [000239] Hc---------                  t239 =    CNS_INT(h) long   0x7fff6d1fcf18 ftn
                                                            /--*  t239   long   
N002 (  5, 12) [000240] nc--G------                  t240 = *  IND       long   REG NA
                                                            /--*  t238   ref    this in rcx
                                                            +--*  t240   long   control expr
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000081] -----+-----                   t81 =    CATCH_ARG ref    $34d
                                                            /--*  t81    ref    
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void

lowering store lcl var/field (after):
N001 (  1,  1) [000081] -----+-----                   t81 =    CATCH_ARG ref    $34d
                                                            /--*  t81    ref    
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void

lowering call (before):
N001 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d
                                                            /--*  t119   ref    arg0 in rcx
N002 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> $34e

args:
======

late:
======
lowering arg : N001 (  3,  2) [000119] -----+-----                         *  LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d
new node is :                [000241] -----------                         *  PUTARG_REG ref    REG rcx

results of lowering call:
N001 (  3, 10) [000242] H----------                  t242 =    CNS_INT(h) long   0x7fff6d1fcf30 ftn
                                                            /--*  t242   long   
N002 (  5, 12) [000243] n---G------                  t243 = *  IND       long  
lowering call (after):
N001 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d
                                                            /--*  t119   ref    
               [000241] -----------                  t241 = *  PUTARG_REG ref    REG rcx
N001 (  3, 10) [000242] Hc---------                  t242 =    CNS_INT(h) long   0x7fff6d1fcf30 ftn
                                                            /--*  t242   long   
N002 (  5, 12) [000243] nc--G------                  t243 = *  IND       long   REG NA
                                                            /--*  t241   ref    arg0 in rcx
                                                            +--*  t243   long   control expr
N002 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> $34e

lowering store lcl var/field (before):
N001 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d
                                                            /--*  t119   ref    
               [000241] -----------                  t241 = *  PUTARG_REG ref    REG rcx
N001 (  3, 10) [000242] Hc---------                  t242 =    CNS_INT(h) long   0x7fff6d1fcf30 ftn
                                                            /--*  t242   long   
N002 (  5, 12) [000243] nc--G------                  t243 = *  IND       long   REG NA
                                                            /--*  t241   ref    arg0 in rcx
                                                            +--*  t243   long   control expr
N002 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> $34e
                                                            /--*  t120   ref    
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void

lowering store lcl var/field (after):
N001 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d
                                                            /--*  t119   ref    
               [000241] -----------                  t241 = *  PUTARG_REG ref    REG rcx
N001 (  3, 10) [000242] Hc---------                  t242 =    CNS_INT(h) long   0x7fff6d1fcf30 ftn
                                                            /--*  t242   long   
N002 (  5, 12) [000243] nc--G------                  t243 = *  IND       long   REG NA
                                                            /--*  t241   ref    arg0 in rcx
                                                            +--*  t243   long   control expr
N002 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> $34e
                                                            /--*  t120   ref    
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void

Lower has completed modifying nodes.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12}
               [000227] -----------                            IL_OFFSET void   INLRT @ 0x000[E-]
N001 (  1,  1) [000000] -----+-----                    t0 =    CNS_INT   ref    null $VN.Null
                                                            /--*  t0     ref    
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                    t2 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t2     byref  
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  0,  0) [000006] -----+-----                            NOP       void  
N001 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1         
N005 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000192] -c---+-----                  t192 =    CNS_INT   long   8 $200
                                                            /--*  t9     byref  
                                                            +--*  t192   long   
N007 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  $240
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N003 (  3,  3) [000005] -----+-N---                         *  CMP       void  
                                                            /--*  t225   byref  
                                                            +--*  t193   byref  
N008 (  8,  8) [000226] -----------                  t226 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t226   byref  
N009 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N001 (  1,  1) [000012] -----+-----                   t12 =    LCL_VAR   long   V01 arg1         u:1 $c0
                                                            /--*  t12    long   
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                   t16 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t16    byref  
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  0,  0) [000020] -----+-----                            NOP       void  
N001 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2         
N005 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000188] -c---+-----                  t188 =    CNS_INT   long   12 $201
                                                            /--*  t23    byref  
                                                            +--*  t188   long   
N007 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  $242
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N003 (  3,  3) [000019] -----+-N---                         *  CMP       void  
                                                            /--*  t223   byref  
                                                            +--*  t189   byref  
N008 (  8,  8) [000224] -----------                  t224 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t224   byref  
N009 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N001 (  1,  1) [000026] -----+-----                   t26 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -c---+-----                   t28 =    CNS_INT   long   4 $202
                                                            /--*  t26    long   
                                                            +--*  t28    long   
N003 (  3,  3) [000029] -----+-----                   t29 = *  ADD       long   $2c0
                                                            /--*  t29    long   
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                   t31 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t31    byref  
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  0,  0) [000035] -----+-----                            NOP       void  
N001 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3         
N005 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000184] -c---+-----                  t184 =    CNS_INT   long   16 $204
                                                            /--*  t38    byref  
                                                            +--*  t184   long   
N007 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  $244
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N003 (  3,  3) [000034] -----+-N---                         *  CMP       void  
                                                            /--*  t221   byref  
                                                            +--*  t185   byref  
N008 (  8,  8) [000222] -----------                  t222 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t222   byref  
N009 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N001 (  1,  1) [000041] -----+-----                   t41 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -c---+-----                   t43 =    CNS_INT   long   8 $200
                                                            /--*  t41    long   
                                                            +--*  t43    long   
N003 (  3,  3) [000044] -----+-----                   t44 = *  ADD       long   $2c1
                                                            /--*  t44    long   
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                   t46 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t46    byref  
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  0,  0) [000050] -----+-----                            NOP       void  
N001 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4         
N005 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000180] -c---+-----                  t180 =    CNS_INT   long   24 $205
                                                            /--*  t53    byref  
                                                            +--*  t180   long   
N007 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  $246
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N003 (  3,  3) [000049] -----+-N---                         *  CMP       void  
                                                            /--*  t217   byref  
                                                            +--*  t181   byref  
N008 (  8,  8) [000218] -----------                  t218 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t218   byref  
N009 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N001 (  1,  1) [000056] -----+-----                   t56 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -c---+-----                   t58 =    CNS_INT   long   16 $204
                                                            /--*  t56    long   
                                                            +--*  t58    long   
N003 (  3,  3) [000059] -----+-----                   t59 = *  ADD       long   $2c2
                                                            /--*  t59    long   
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N001 (  1,  1) [000071] -----+-----                   t71 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -c---+-----                   t73 =    CNS_INT   long   48 $206
                                                            /--*  t71    long   
                                                            +--*  t73    long   
N003 (  3,  3) [000074] -----+-----                   t74 = *  ADD       long   $2c3
                                                            /--*  t74    long   
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N001 (  1,  1) [000076] -----+-----                   t76 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -c---+-----                   t77 =    CNS_INT   int    0 $40
                                                            /--*  t76    int    
                                                            +--*  t77    int    
N003 (  3,  3) [000078] -----+-N---                         *  CMP       void  
N004 (  5,  5) [000079] -----+-----                            JCC       void   cond=UEQ

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15}
N001 (  1,  1) [000135] -----+-----                  t135 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -c---+-----                  t136 =    CNS_INT   int    1 $41
                                                            /--*  t135   int    
                                                            +--*  t136   int    
N003 (  3,  3) [000137] -----+-N---                         *  CMP       void  
N004 (  5,  5) [000138] -----+-----                            JCC       void   cond=UEQ

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
N001 (  1,  1) [000171] -----+-----                  t171 =    LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -c---+-----                  t172 =    CNS_INT   int    2 $42
                                                            /--*  t171   int    
                                                            +--*  t172   int    
N003 (  3,  3) [000173] -----+-N---                         *  CMP       void  
N004 (  5,  5) [000174] -----+-----                            JCC       void   cond=UEQ

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14}
N001 (  1,  1) [000082] -----+-----                   t82 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000083] -c---+-N---                   t83 =    CNS_INT   int    0 $40
                                                            /--*  t82    long   
                                                            +--*  t83    int    
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) $397
N001 (  1,  1) [000086] -----+-----                   t86 =    LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
                                                            /--*  t86    byref  
N002 (  3,  2) [000087] U--XG+-----                   t87 = *  IND       int    <l:$1cb, c:$1ca>
N003 (  3,  2) [000089] -----+-----                   t89 =    LCL_VAR   byref  V07 loc3         u:2 (last use) $241
                                                            /--*  t89    byref  
                                                            +--*  t87    int    
N004 ( 10,  7) [000091] UA-XG+-----                         *  STOREIND  int    $384
N001 (  1,  1) [000092] -----+-----                   t92 =    LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
                                                            /--*  t92    byref  
N002 (  3,  2) [000093] U--XG+-----                   t93 = *  IND       int    <l:$1cd, c:$1cc>
N003 (  3,  2) [000095] -----+-----                   t95 =    LCL_VAR   byref  V11 loc7         u:2 (last use) $243
                                                            /--*  t95    byref  
                                                            +--*  t93    int    
N004 ( 10,  7) [000097] UA-XG+-----                         *  STOREIND  int    $389
N001 (  1,  1) [000098] -----+-----                   t98 =    LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
                                                            /--*  t98    byref  
N002 (  3,  2) [000099] U--XG+-----                   t99 = *  IND       int    <l:$1cf, c:$1ce>
N003 (  3,  2) [000101] -----+-----                  t101 =    LCL_VAR   byref  V15 loc11        u:2 (last use) $245
                                                            /--*  t101   byref  
                                                            +--*  t99    int    
N004 ( 10,  7) [000103] UA-XG+-----                         *  STOREIND  int    $38e
N001 (  1,  1) [000104] -----+-----                  t104 =    LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
                                                            /--*  t104   byref  
N002 (  7,  5) [000105] Uc-XG+-----                  t105 = *  IND       struct
N003 (  3,  2) [000107] -----+-----                  t107 =    LCL_VAR   byref  V19 loc15        u:2 (last use) $247
                                                            /--*  t107   byref  
                                                            +--*  t105   struct 
N004 ( 17, 12) [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) $393
N001 (  3,  2) [000110] -----+-----                  t110 =    LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -c---+-----                  t111 =    CNS_INT   int    0 $40
                                                            /--*  t110   byref  
                                                            +--*  t111   int    
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
N001 (  1,  1) [000113] -----+-----                  t113 =    LCL_VAR   byref  V00 arg0         u:1 (last use) $80
                                                            /--*  t113   byref  
N002 (  3,  2) [000114] U--XG+-----                  t114 = *  IND       ref    <l:$39f, c:$39e>
                                                            /--*  t114   ref    
               [000228] ---XG------                  t228 = *  PUTARG_REG ref    REG rcx
N003 (  3,  2) [000115] -----+-----                  t115 =    LCL_VAR   byref  V23 loc19        u:2 $248
                                                            /--*  t115   byref  
               [000229] -----------                  t229 = *  PUTARG_REG byref  REG rdx
N001 (  3, 10) [000230] Hc---------                  t230 =    CNS_INT(h) long   0x7fff6f084408 ftn
                                                            /--*  t230   long   
N002 (  5, 12) [000231] nc--G------                  t231 = *  IND       long   REG NA
                                                            /--*  t228   ref    arg0 in rcx
                                                            +--*  t229   byref  arg1 in rdx
                                                            +--*  t231   long   control expr
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
N001 (  0,  0) [000117] -----+-----                            RETURN    void   $VN.Void

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}
N001 (  3,  2) [000139] -----+-----                  t139 =    LCL_VAR   byref  V07 loc3         u:2 (last use) $241
                                                            /--*  t139   byref  
N002 (  6,  4) [000140] U--XG+-----                  t140 = *  IND       int    <l:$1c4, c:$1c3>
N003 (  1,  1) [000142] -----+-----                  t142 =    LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
                                                            /--*  t142   byref  
                                                            +--*  t140   int    
N004 ( 10,  7) [000144] UA-XG+-----                         *  STOREIND  int    $384
N001 (  3,  2) [000145] -----+-----                  t145 =    LCL_VAR   byref  V11 loc7         u:2 (last use) $243
                                                            /--*  t145   byref  
N002 (  6,  4) [000146] U--XG+-----                  t146 = *  IND       int    <l:$1c6, c:$1c5>
N003 (  1,  1) [000148] -----+-----                  t148 =    LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
                                                            /--*  t148   byref  
                                                            +--*  t146   int    
N004 ( 10,  7) [000150] UA-XG+-----                         *  STOREIND  int    $389
N001 (  3,  2) [000151] -----+-----                  t151 =    LCL_VAR   byref  V15 loc11        u:2 (last use) $245
                                                            /--*  t151   byref  
N002 (  6,  4) [000152] U--XG+-----                  t152 = *  IND       int    <l:$1c8, c:$1c7>
N003 (  1,  1) [000154] -----+-----                  t154 =    LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
                                                            /--*  t154   byref  
                                                            +--*  t152   int    
N004 ( 10,  7) [000156] UA-XG+-----                         *  STOREIND  int    $38e
N001 (  3,  2) [000157] -----+-----                  t157 =    LCL_VAR   byref  V19 loc15        u:2 (last use) $247
                                                            /--*  t157   byref  
N002 (  9,  6) [000158] Uc-XG+-----                  t158 = *  IND       struct
N003 (  1,  1) [000160] -----+-----                  t160 =    LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
                                                            /--*  t160   byref  
                                                            +--*  t158   struct 
N004 ( 17, 12) [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) $393
N001 (  3,  2) [000163] -----+-----                  t163 =    LCL_VAR   byref  V23 loc19        u:2 (last use) $248
                                                            /--*  t163   byref  
               [000232] -----------                  t232 = *  PUTARG_REG byref  REG rcx
N001 (  3, 10) [000233] Hc---------                  t233 =    CNS_INT(h) long   0x7fff6f084420 ftn
                                                            /--*  t233   long   
N002 (  5, 12) [000234] nc--G------                  t234 = *  IND       long   REG NA
                                                            /--*  t232   byref  arg0 in rcx
                                                            +--*  t234   long   control expr
N002 ( 17,  8) [000164] --CXG+-----                  t164 = *  CALL      ref    <unknown method> $348
N003 (  1,  1) [000167] -----+-----                  t167 =    LCL_VAR   byref  V00 arg0         u:1 (last use) $80
                                                            /--*  t167   byref  
                                                            +--*  t164   ref    
N004 ( 21, 11) [000169] UACXG+-----                         *  STOREIND  ref    $395
N001 (  0,  0) [000170] -----+-----                            RETURN    void   $VN.Void

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
N001 (  3,  2) [000122] -----+-----                  t122 =    LCL_VAR   byref  V23 loc19        u:2 (last use) $248
                                                            /--*  t122   byref  
               [000235] -----------                  t235 = *  PUTARG_REG byref  REG rcx
N001 (  3, 10) [000236] Hc---------                  t236 =    CNS_INT(h) long   0x7fff6f084438 ftn
                                                            /--*  t236   long   
N002 (  5, 12) [000237] nc--G------                  t237 = *  IND       long   REG NA
                                                            /--*  t235   byref  arg0 in rcx
                                                            +--*  t237   long   control expr
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N001 (  1,  1) [000124] -----+-----                  t124 =    LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -c---+-N---                  t125 =    CNS_INT   int    0 $40
                                                            /--*  t124   long   
                                                            +--*  t125   int    
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) $397
N001 (  3,  2) [000128] -c---+-----                  t128 =    LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -c---+-----                  t129 =    CNS_INT   ref    null $VN.Null
                                                            /--*  t128   ref    
                                                            +--*  t129   ref    
N003 (  5,  4) [000130] -----+-N---                         *  CMP       void  
N004 (  7,  6) [000131] -----+-----                            JCC       void   cond=UEQ

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
N001 (  3,  2) [000132] -----+-----                  t132 =    LCL_VAR   ref    V05 loc1         u:4 (last use) $480
                                                            /--*  t132   ref    
               [000238] -----------                  t238 = *  PUTARG_REG ref    REG rcx
N001 (  3, 10) [000239] Hc---------                  t239 =    CNS_INT(h) long   0x7fff6d1fcf18 ftn
                                                            /--*  t239   long   
N002 (  5, 12) [000240] nc--G------                  t240 = *  IND       long   REG NA
                                                            /--*  t238   ref    this in rcx
                                                            +--*  t240   long   control expr
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
N001 (  1,  1) [000081] -----+-----                   t81 =    CATCH_ARG ref    $34d
                                                            /--*  t81    ref    
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void
N001 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d
                                                            /--*  t119   ref    
               [000241] -----------                  t241 = *  PUTARG_REG ref    REG rcx
N001 (  3, 10) [000242] Hc---------                  t242 =    CNS_INT(h) long   0x7fff6d1fcf30 ftn
                                                            /--*  t242   long   
N002 (  5, 12) [000243] nc--G------                  t243 = *  IND       long   REG NA
                                                            /--*  t241   ref    arg0 in rcx
                                                            +--*  t243   long   control expr
N002 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> $34e
                                                            /--*  t120   ref    
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void

-------------------------------------------------------------------------------------------------------------------

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V05: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  1, refCntWtd = 1
New refCnts for V26: refCnt =  1, refCntWtd = 1
New refCnts for V26: refCnt =  2, refCntWtd = 2
New refCnts for V26: refCnt =  3, refCntWtd = 3
New refCnts for V00: refCnt =  2, refCntWtd = 2
New refCnts for V26: refCnt =  4, refCntWtd = 4
New refCnts for V01: refCnt =  1, refCntWtd = 1
New refCnts for V07: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  3, refCntWtd = 3
New refCnts for V27: refCnt =  1, refCntWtd = 1
New refCnts for V27: refCnt =  2, refCntWtd = 2
New refCnts for V27: refCnt =  3, refCntWtd = 3
New refCnts for V00: refCnt =  4, refCntWtd = 4
New refCnts for V27: refCnt =  4, refCntWtd = 4
New refCnts for V01: refCnt =  2, refCntWtd = 2
New refCnts for V11: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  5, refCntWtd = 5
New refCnts for V28: refCnt =  1, refCntWtd = 1
New refCnts for V28: refCnt =  2, refCntWtd = 2
New refCnts for V28: refCnt =  3, refCntWtd = 3
New refCnts for V00: refCnt =  6, refCntWtd = 6
New refCnts for V28: refCnt =  4, refCntWtd = 4
New refCnts for V01: refCnt =  3, refCntWtd = 3
New refCnts for V15: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  7, refCntWtd = 7
New refCnts for V29: refCnt =  1, refCntWtd = 1
New refCnts for V29: refCnt =  2, refCntWtd = 2
New refCnts for V29: refCnt =  3, refCntWtd = 3
New refCnts for V00: refCnt =  8, refCntWtd = 8
New refCnts for V29: refCnt =  4, refCntWtd = 4
New refCnts for V01: refCnt =  4, refCntWtd = 4
New refCnts for V19: refCnt =  1, refCntWtd = 1
New refCnts for V01: refCnt =  5, refCntWtd = 5
New refCnts for V23: refCnt =  1, refCntWtd = 0
New refCnts for V02: refCnt =  1, refCntWtd = 1
New refCnts for V02: refCnt =  2, refCntWtd = 1.52
New refCnts for V02: refCnt =  3, refCntWtd = 1.94
New refCnts for V01: refCnt =  6, refCntWtd = 5.70
New refCnts for V26: refCnt =  5, refCntWtd = 4.70
New refCnts for V07: refCnt =  2, refCntWtd = 1.70
New refCnts for V27: refCnt =  5, refCntWtd = 4.70
New refCnts for V11: refCnt =  2, refCntWtd = 1.70
New refCnts for V28: refCnt =  5, refCntWtd = 4.70
New refCnts for V15: refCnt =  2, refCntWtd = 1.70
New refCnts for V29: refCnt =  5, refCntWtd = 4.70
New refCnts for V19: refCnt =  2, refCntWtd = 1.70
New refCnts for V23: refCnt =  2, refCntWtd = 0.70
New refCnts for V00: refCnt =  9, refCntWtd = 8.70
New refCnts for V23: refCnt =  3, refCntWtd = 1.39
New refCnts for V07: refCnt =  3, refCntWtd = 1.80
New refCnts for V26: refCnt =  6, refCntWtd = 4.80
New refCnts for V11: refCnt =  3, refCntWtd = 1.80
New refCnts for V27: refCnt =  6, refCntWtd = 4.80
New refCnts for V15: refCnt =  3, refCntWtd = 1.80
New refCnts for V28: refCnt =  6, refCntWtd = 4.80
New refCnts for V19: refCnt =  3, refCntWtd = 1.80
New refCnts for V29: refCnt =  6, refCntWtd = 4.80
New refCnts for V23: refCnt =  4, refCntWtd = 1.50
New refCnts for V00: refCnt = 10, refCntWtd = 8.80
New refCnts for V23: refCnt =  5, refCntWtd = 1.70
New refCnts for V01: refCnt =  7, refCntWtd = 5.90
New refCnts for V05: refCnt =  2, refCntWtd = 1.20
New refCnts for V05: refCnt =  3, refCntWtd = 1.20
New refCnts for V31: refCnt =  1, refCntWtd = 0
New refCnts for V31: refCnt =  2, refCntWtd = 0
New refCnts for V05: refCnt =  4, refCntWtd = 1.20

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt = 11, refCntWtd = 9.80
New refCnts for V00: refCnt = 12, refCntWtd = 10.80
New refCnts for V01: refCnt =  8, refCntWtd = 6.90
New refCnts for V01: refCnt =  9, refCntWtd = 7.90
New refCnts for V02: refCnt =  4, refCntWtd = 2.94
New refCnts for V02: refCnt =  5, refCntWtd = 3.94
*************** In fgLocalVarLiveness()
; Initial local variable assignments
;
;  V00 arg0            byref  single-def
;  V01 arg1             long  EH-live single-def
;  V02 arg2              int  single-def
;  V03 arg3            byref  single-def
;  V04 loc0              int 
;  V05 loc1              ref  do-not-enreg[M] class-hnd EH-live <System.Runtime.ExceptionServices.ExceptionDispatchInfo>
;  V06 loc2            byref  single-def
;  V07 loc3            byref  single-def
;  V08 loc4              int 
;  V09 loc5              int 
;  V10 loc6            byref  single-def
;  V11 loc7            byref  single-def
;  V12 loc8              int 
;  V13 loc9              int 
;  V14 loc10           byref  single-def
;  V15 loc11           byref  single-def
;  V16 loc12             int 
;  V17 loc13             int 
;  V18 loc14           byref  single-def
;  V19 loc15           byref  single-def
;  V20 loc16          struct <System.Data.OleDb.tagDBIDX, 32> do-not-enreg[S] <System.Data.OleDb.tagDBIDX>
;  V21 loc17          struct <System.Data.OleDb.tagDBIDX, 32> do-not-enreg[S] <System.Data.OleDb.tagDBIDX>
;  V22 loc18           byref  single-def
;  V23 loc19           byref  EH-live single-def
;  V24 loc20             ref  class-hnd <<unknown class>>
;  V25 OutArgs        struct <0> do-not-enreg[XS] addr-exposed "OutgoingArgSpace"
;  V26 tmp1            byref 
;  V27 tmp2            byref 
;  V28 tmp3            byref 
;  V29 tmp4            byref 
;  V30 tmp5            byref 
;  V31 tmp6              ref  class-hnd single-def "impSpillSpecialSideEff" <<unknown class>>
;  V32 PSPSym           long  do-not-enreg[V] "PSPSym"
In fgLocalVarLivenessInit

Local V20 should not be enregistered because: struct size does not match reg size

Local V21 should not be enregistered because: struct size does not match reg size

Local V25 should not be enregistered because: struct size does not match reg size
Tracked variable (15 out of 33) table:
V00 arg0          [ byref]: refCnt =   12, refCntWtd =  10.80
V01 arg1          [  long]: refCnt =    9, refCntWtd =   7.90
V02 arg2          [   int]: refCnt =    5, refCntWtd =   3.94
V26 tmp1          [ byref]: refCnt =    6, refCntWtd =   4.80
V27 tmp2          [ byref]: refCnt =    6, refCntWtd =   4.80
V28 tmp3          [ byref]: refCnt =    6, refCntWtd =   4.80
V29 tmp4          [ byref]: refCnt =    6, refCntWtd =   4.80
V07 loc3          [ byref]: refCnt =    3, refCntWtd =   1.80
V11 loc7          [ byref]: refCnt =    3, refCntWtd =   1.80
V15 loc11         [ byref]: refCnt =    3, refCntWtd =   1.80
V19 loc15         [ byref]: refCnt =    3, refCntWtd =   1.80
V23 loc19         [ byref]: refCnt =    5, refCntWtd =   1.70
V05 loc1          [   ref]: refCnt =    4, refCntWtd =   1.20
V32 PSPSym        [  long]: refCnt =    1, refCntWtd =   1   
V31 tmp6          [   ref]: refCnt =    2, refCntWtd =   0   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(3)={V00 V01 V02                                        }
     DEF(10)={            V26 V27 V28 V29 V07 V11 V15 V19 V23 V05}

BB10 USE(1)={V02}
     DEF(0)={   }

BB11 USE(1)={V02}
     DEF(0)={   }

BB12 USE(11)={V00 V01 V26 V27 V28 V29 V07 V11 V15 V19 V23} + ByrefExposed + GcHeap
     DEF(0)={                                           } + ByrefExposed* + GcHeap*

BB14 USE(0)={}
     DEF(0)={}

BB15 USE(10)={V00 V26 V27 V28 V29 V07 V11 V15 V19 V23} + ByrefExposed + GcHeap
     DEF(0)={                                       } + ByrefExposed* + GcHeap*

BB16 USE(3)={V01 V23 V05} + ByrefExposed + GcHeap
     DEF(0)={           } + ByrefExposed* + GcHeap*

BB17 USE(1)={V05} + ByrefExposed + GcHeap
     DEF(0)={   } + ByrefExposed* + GcHeap*

BB13 USE(0)={       } + ByrefExposed + GcHeap
     DEF(2)={V05 V31} + ByrefExposed* + GcHeap*

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (3)={V00 V01 V02                                        } + ByrefExposed + GcHeap
     OUT(13)={V00 V01 V02 V26 V27 V28 V29 V07 V11 V15 V19 V23 V05} + ByrefExposed + GcHeap

BB10 IN (13)={V00 V01 V02 V26 V27 V28 V29 V07 V11 V15 V19 V23 V05} + ByrefExposed + GcHeap
     OUT(13)={V00 V01 V02 V26 V27 V28 V29 V07 V11 V15 V19 V23 V05} + ByrefExposed + GcHeap

BB11 IN (13)={V00 V01 V02 V26 V27 V28 V29 V07 V11 V15 V19 V23 V05} + ByrefExposed + GcHeap
     OUT(12)={V00 V01     V26 V27 V28 V29 V07 V11 V15 V19 V23 V05} + ByrefExposed + GcHeap

BB12 IN (11)={V00 V01 V26 V27 V28 V29 V07 V11 V15 V19 V23} + ByrefExposed + GcHeap
     OUT(2)={    V01                                 V23} + ByrefExposed + GcHeap

BB14 IN (0)={}
     OUT(0)={}

BB15 IN (10)={V00 V26 V27 V28 V29 V07 V11 V15 V19 V23} + ByrefExposed + GcHeap
     OUT(0)={                                       }

BB16 IN (3)={V01 V23 V05} + ByrefExposed + GcHeap
     OUT(1)={        V05} + ByrefExposed + GcHeap

BB17 IN (1)={V05} + ByrefExposed + GcHeap
     OUT(0)={   }

BB13 IN (2)={V01 V23    } + ByrefExposed + GcHeap
     OUT(3)={V01 V23 V05} + ByrefExposed + GcHeap


Local V05 should not be enregistered because: live in/out of a handler
Removing dead node:
N001 (  0,  0) [000050] -----+-----                         *  NOP       void  
Removing dead node:
N001 (  0,  0) [000035] -----+-----                         *  NOP       void  
Removing dead node:
N001 (  0,  0) [000020] -----+-----                         *  NOP       void  
Removing dead node:
N001 (  0,  0) [000006] -----+-----                         *  NOP       void  

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V05: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  1, refCntWtd = 1
New refCnts for V26: refCnt =  1, refCntWtd = 1
New refCnts for V26: refCnt =  2, refCntWtd = 2
New refCnts for V26: refCnt =  3, refCntWtd = 3
New refCnts for V00: refCnt =  2, refCntWtd = 2
New refCnts for V26: refCnt =  4, refCntWtd = 4
New refCnts for V01: refCnt =  1, refCntWtd = 1
New refCnts for V07: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  3, refCntWtd = 3
New refCnts for V27: refCnt =  1, refCntWtd = 1
New refCnts for V27: refCnt =  2, refCntWtd = 2
New refCnts for V27: refCnt =  3, refCntWtd = 3
New refCnts for V00: refCnt =  4, refCntWtd = 4
New refCnts for V27: refCnt =  4, refCntWtd = 4
New refCnts for V01: refCnt =  2, refCntWtd = 2
New refCnts for V11: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  5, refCntWtd = 5
New refCnts for V28: refCnt =  1, refCntWtd = 1
New refCnts for V28: refCnt =  2, refCntWtd = 2
New refCnts for V28: refCnt =  3, refCntWtd = 3
New refCnts for V00: refCnt =  6, refCntWtd = 6
New refCnts for V28: refCnt =  4, refCntWtd = 4
New refCnts for V01: refCnt =  3, refCntWtd = 3
New refCnts for V15: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  7, refCntWtd = 7
New refCnts for V29: refCnt =  1, refCntWtd = 1
New refCnts for V29: refCnt =  2, refCntWtd = 2
New refCnts for V29: refCnt =  3, refCntWtd = 3
New refCnts for V00: refCnt =  8, refCntWtd = 8
New refCnts for V29: refCnt =  4, refCntWtd = 4
New refCnts for V01: refCnt =  4, refCntWtd = 4
New refCnts for V19: refCnt =  1, refCntWtd = 1
New refCnts for V01: refCnt =  5, refCntWtd = 5
New refCnts for V23: refCnt =  1, refCntWtd = 0
New refCnts for V02: refCnt =  1, refCntWtd = 1
New refCnts for V02: refCnt =  2, refCntWtd = 1.52
New refCnts for V02: refCnt =  3, refCntWtd = 1.94
New refCnts for V01: refCnt =  6, refCntWtd = 5.70
New refCnts for V26: refCnt =  5, refCntWtd = 4.70
New refCnts for V07: refCnt =  2, refCntWtd = 1.70
New refCnts for V27: refCnt =  5, refCntWtd = 4.70
New refCnts for V11: refCnt =  2, refCntWtd = 1.70
New refCnts for V28: refCnt =  5, refCntWtd = 4.70
New refCnts for V15: refCnt =  2, refCntWtd = 1.70
New refCnts for V29: refCnt =  5, refCntWtd = 4.70
New refCnts for V19: refCnt =  2, refCntWtd = 1.70
New refCnts for V23: refCnt =  2, refCntWtd = 0.70
New refCnts for V00: refCnt =  9, refCntWtd = 8.70
New refCnts for V23: refCnt =  3, refCntWtd = 1.39
New refCnts for V07: refCnt =  3, refCntWtd = 1.80
New refCnts for V26: refCnt =  6, refCntWtd = 4.80
New refCnts for V11: refCnt =  3, refCntWtd = 1.80
New refCnts for V27: refCnt =  6, refCntWtd = 4.80
New refCnts for V15: refCnt =  3, refCntWtd = 1.80
New refCnts for V28: refCnt =  6, refCntWtd = 4.80
New refCnts for V19: refCnt =  3, refCntWtd = 1.80
New refCnts for V29: refCnt =  6, refCntWtd = 4.80
New refCnts for V23: refCnt =  4, refCntWtd = 1.50
New refCnts for V00: refCnt = 10, refCntWtd = 8.80
New refCnts for V23: refCnt =  5, refCntWtd = 1.70
New refCnts for V01: refCnt =  7, refCntWtd = 5.90
New refCnts for V05: refCnt =  2, refCntWtd = 1.20
New refCnts for V05: refCnt =  3, refCntWtd = 1.20
New refCnts for V31: refCnt =  1, refCntWtd = 0
New refCnts for V31: refCnt =  2, refCntWtd = 0
New refCnts for V05: refCnt =  4, refCntWtd = 1.20

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt = 11, refCntWtd = 9.80
New refCnts for V00: refCnt = 12, refCntWtd = 10.80
New refCnts for V01: refCnt =  8, refCntWtd = 6.90
New refCnts for V01: refCnt =  9, refCntWtd = 7.90
New refCnts for V02: refCnt =  4, refCntWtd = 2.94
New refCnts for V02: refCnt =  5, refCntWtd = 3.94

*************** Finishing PHASE Lowering nodeinfo
Trees after Lowering nodeinfo

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12}
               [000227] -----------                            IL_OFFSET void   INLRT @ 0x000[E-]
N001 (  1,  1) [000000] -----+-----                    t0 =    CNS_INT   ref    null $VN.Null
                                                            /--*  t0     ref    
N002 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 $VN.Void
N001 (  1,  1) [000002] -----+-----                    t2 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t2     byref  
N002 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 $VN.Void
N001 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 $80
N002 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1          (last use)
N005 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000192] -c---+-----                  t192 =    CNS_INT   long   8 $200
                                                            /--*  t9     byref  
                                                            +--*  t192   long   
N007 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  $240
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N003 (  3,  3) [000005] -----+-N---                         *  CMP       void  
                                                            /--*  t225   byref  
                                                            +--*  t193   byref  
N008 (  8,  8) [000226] -----------                  t226 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t226   byref  
N009 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 $VN.Void
N001 (  1,  1) [000012] -----+-----                   t12 =    LCL_VAR   long   V01 arg1         u:1 $c0
                                                            /--*  t12    long   
N002 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 $VN.Void
N001 (  1,  1) [000016] -----+-----                   t16 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t16    byref  
N002 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 $VN.Void
N001 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 $80
N002 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2          (last use)
N005 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000188] -c---+-----                  t188 =    CNS_INT   long   12 $201
                                                            /--*  t23    byref  
                                                            +--*  t188   long   
N007 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  $242
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N003 (  3,  3) [000019] -----+-N---                         *  CMP       void  
                                                            /--*  t223   byref  
                                                            +--*  t189   byref  
N008 (  8,  8) [000224] -----------                  t224 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t224   byref  
N009 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 $VN.Void
N001 (  1,  1) [000026] -----+-----                   t26 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000028] -c---+-----                   t28 =    CNS_INT   long   4 $202
                                                            /--*  t26    long   
                                                            +--*  t28    long   
N003 (  3,  3) [000029] -----+-----                   t29 = *  ADD       long   $2c0
                                                            /--*  t29    long   
N004 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 $VN.Void
N001 (  1,  1) [000031] -----+-----                   t31 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t31    byref  
N002 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 $VN.Void
N001 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 $80
N002 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3          (last use)
N005 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000184] -c---+-----                  t184 =    CNS_INT   long   16 $204
                                                            /--*  t38    byref  
                                                            +--*  t184   long   
N007 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  $244
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N003 (  3,  3) [000034] -----+-N---                         *  CMP       void  
                                                            /--*  t221   byref  
                                                            +--*  t185   byref  
N008 (  8,  8) [000222] -----------                  t222 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t222   byref  
N009 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 $VN.Void
N001 (  1,  1) [000041] -----+-----                   t41 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000043] -c---+-----                   t43 =    CNS_INT   long   8 $200
                                                            /--*  t41    long   
                                                            +--*  t43    long   
N003 (  3,  3) [000044] -----+-----                   t44 = *  ADD       long   $2c1
                                                            /--*  t44    long   
N004 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 $VN.Void
N001 (  1,  1) [000046] -----+-----                   t46 =    LCL_VAR   byref  V00 arg0         u:1 $80
                                                            /--*  t46    byref  
N002 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 $VN.Void
N001 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 $80
N002 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 $VN.Null
N004 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4          (last use)
N005 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 $80
N006 (  1,  1) [000180] -c---+-----                  t180 =    CNS_INT   long   24 $205
                                                            /--*  t53    byref  
                                                            +--*  t180   long   
N007 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  $246
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N003 (  3,  3) [000049] -----+-N---                         *  CMP       void  
                                                            /--*  t217   byref  
                                                            +--*  t181   byref  
N008 (  8,  8) [000218] -----------                  t218 = *  SELECTCC  byref  cond=UEQ
                                                            /--*  t218   byref  
N009 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 $VN.Void
N001 (  1,  1) [000056] -----+-----                   t56 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000058] -c---+-----                   t58 =    CNS_INT   long   16 $204
                                                            /--*  t56    long   
                                                            +--*  t58    long   
N003 (  3,  3) [000059] -----+-----                   t59 = *  ADD       long   $2c2
                                                            /--*  t59    long   
N004 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 $VN.Void
N001 (  1,  1) [000071] -----+-----                   t71 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000073] -c---+-----                   t73 =    CNS_INT   long   48 $206
                                                            /--*  t71    long   
                                                            +--*  t73    long   
N003 (  3,  3) [000074] -----+-----                   t74 = *  ADD       long   $2c3
                                                            /--*  t74    long   
N004 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 $VN.Void
N001 (  1,  1) [000076] -----+-----                   t76 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000077] -c---+-----                   t77 =    CNS_INT   int    0 $40
                                                            /--*  t76    int    
                                                            +--*  t77    int    
N003 (  3,  3) [000078] -----+-N---                         *  CMP       void  
N004 (  5,  5) [000079] -----+-----                            JCC       void   cond=UEQ

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15}
N001 (  1,  1) [000135] -----+-----                  t135 =    LCL_VAR   int    V02 arg2         u:1 $100
N002 (  1,  1) [000136] -c---+-----                  t136 =    CNS_INT   int    1 $41
                                                            /--*  t135   int    
                                                            +--*  t136   int    
N003 (  3,  3) [000137] -----+-N---                         *  CMP       void  
N004 (  5,  5) [000138] -----+-----                            JCC       void   cond=UEQ

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
N001 (  1,  1) [000171] -----+-----                  t171 =    LCL_VAR   int    V02 arg2         u:1 (last use) $100
N002 (  1,  1) [000172] -c---+-----                  t172 =    CNS_INT   int    2 $42
                                                            /--*  t171   int    
                                                            +--*  t172   int    
N003 (  3,  3) [000173] -----+-N---                         *  CMP       void  
N004 (  5,  5) [000174] -----+-----                            JCC       void   cond=UEQ

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14}
N001 (  1,  1) [000082] -----+-----                   t82 =    LCL_VAR   long   V01 arg1         u:1 $c0
N002 (  1,  1) [000083] -c---+-N---                   t83 =    CNS_INT   int    0 $40
                                                            /--*  t82    long   
                                                            +--*  t83    int    
N003 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) $397
N001 (  1,  1) [000086] -----+-----                   t86 =    LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
                                                            /--*  t86    byref  
N002 (  3,  2) [000087] U--XG+-----                   t87 = *  IND       int    <l:$1cb, c:$1ca>
N003 (  3,  2) [000089] -----+-----                   t89 =    LCL_VAR   byref  V07 loc3         u:2 (last use) $241
                                                            /--*  t89    byref  
                                                            +--*  t87    int    
N004 ( 10,  7) [000091] UA-XG+-----                         *  STOREIND  int    $384
N001 (  1,  1) [000092] -----+-----                   t92 =    LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
                                                            /--*  t92    byref  
N002 (  3,  2) [000093] U--XG+-----                   t93 = *  IND       int    <l:$1cd, c:$1cc>
N003 (  3,  2) [000095] -----+-----                   t95 =    LCL_VAR   byref  V11 loc7         u:2 (last use) $243
                                                            /--*  t95    byref  
                                                            +--*  t93    int    
N004 ( 10,  7) [000097] UA-XG+-----                         *  STOREIND  int    $389
N001 (  1,  1) [000098] -----+-----                   t98 =    LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
                                                            /--*  t98    byref  
N002 (  3,  2) [000099] U--XG+-----                   t99 = *  IND       int    <l:$1cf, c:$1ce>
N003 (  3,  2) [000101] -----+-----                  t101 =    LCL_VAR   byref  V15 loc11        u:2 (last use) $245
                                                            /--*  t101   byref  
                                                            +--*  t99    int    
N004 ( 10,  7) [000103] UA-XG+-----                         *  STOREIND  int    $38e
N001 (  1,  1) [000104] -----+-----                  t104 =    LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
                                                            /--*  t104   byref  
N002 (  7,  5) [000105] Uc-XG+-----                  t105 = *  IND       struct
N003 (  3,  2) [000107] -----+-----                  t107 =    LCL_VAR   byref  V19 loc15        u:2 (last use) $247
                                                            /--*  t107   byref  
                                                            +--*  t105   struct 
N004 ( 17, 12) [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) $393
N001 (  3,  2) [000110] -----+-----                  t110 =    LCL_VAR   byref  V23 loc19        u:2 $248
N002 (  1,  1) [000111] -c---+-----                  t111 =    CNS_INT   int    0 $40
                                                            /--*  t110   byref  
                                                            +--*  t111   int    
N003 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  $39d
N001 (  1,  1) [000113] -----+-----                  t113 =    LCL_VAR   byref  V00 arg0         u:1 (last use) $80
                                                            /--*  t113   byref  
N002 (  3,  2) [000114] U--XG+-----                  t114 = *  IND       ref    <l:$39f, c:$39e>
                                                            /--*  t114   ref    
               [000228] ---XG------                  t228 = *  PUTARG_REG ref    REG rcx
N003 (  3,  2) [000115] -----+-----                  t115 =    LCL_VAR   byref  V23 loc19        u:2 $248
                                                            /--*  t115   byref  
               [000229] -----------                  t229 = *  PUTARG_REG byref  REG rdx
N001 (  3, 10) [000230] Hc---------                  t230 =    CNS_INT(h) long   0x7fff6f084408 ftn
                                                            /--*  t230   long   
N002 (  5, 12) [000231] nc--G------                  t231 = *  IND       long   REG NA
                                                            /--*  t228   ref    arg0 in rcx
                                                            +--*  t229   byref  arg1 in rdx
                                                            +--*  t231   long   control expr
N004 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
N001 (  0,  0) [000117] -----+-----                            RETURN    void   $VN.Void

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}
N001 (  3,  2) [000139] -----+-----                  t139 =    LCL_VAR   byref  V07 loc3         u:2 (last use) $241
                                                            /--*  t139   byref  
N002 (  6,  4) [000140] U--XG+-----                  t140 = *  IND       int    <l:$1c4, c:$1c3>
N003 (  1,  1) [000142] -----+-----                  t142 =    LCL_VAR   byref  V26 tmp1         u:4 (last use) $280
                                                            /--*  t142   byref  
                                                            +--*  t140   int    
N004 ( 10,  7) [000144] UA-XG+-----                         *  STOREIND  int    $384
N001 (  3,  2) [000145] -----+-----                  t145 =    LCL_VAR   byref  V11 loc7         u:2 (last use) $243
                                                            /--*  t145   byref  
N002 (  6,  4) [000146] U--XG+-----                  t146 = *  IND       int    <l:$1c6, c:$1c5>
N003 (  1,  1) [000148] -----+-----                  t148 =    LCL_VAR   byref  V27 tmp2         u:4 (last use) $281
                                                            /--*  t148   byref  
                                                            +--*  t146   int    
N004 ( 10,  7) [000150] UA-XG+-----                         *  STOREIND  int    $389
N001 (  3,  2) [000151] -----+-----                  t151 =    LCL_VAR   byref  V15 loc11        u:2 (last use) $245
                                                            /--*  t151   byref  
N002 (  6,  4) [000152] U--XG+-----                  t152 = *  IND       int    <l:$1c8, c:$1c7>
N003 (  1,  1) [000154] -----+-----                  t154 =    LCL_VAR   byref  V28 tmp3         u:4 (last use) $282
                                                            /--*  t154   byref  
                                                            +--*  t152   int    
N004 ( 10,  7) [000156] UA-XG+-----                         *  STOREIND  int    $38e
N001 (  3,  2) [000157] -----+-----                  t157 =    LCL_VAR   byref  V19 loc15        u:2 (last use) $247
                                                            /--*  t157   byref  
N002 (  9,  6) [000158] Uc-XG+-----                  t158 = *  IND       struct
N003 (  1,  1) [000160] -----+-----                  t160 =    LCL_VAR   byref  V29 tmp4         u:4 (last use) $283
                                                            /--*  t160   byref  
                                                            +--*  t158   struct 
N004 ( 17, 12) [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) $393
N001 (  3,  2) [000163] -----+-----                  t163 =    LCL_VAR   byref  V23 loc19        u:2 (last use) $248
                                                            /--*  t163   byref  
               [000232] -----------                  t232 = *  PUTARG_REG byref  REG rcx
N001 (  3, 10) [000233] Hc---------                  t233 =    CNS_INT(h) long   0x7fff6f084420 ftn
                                                            /--*  t233   long   
N002 (  5, 12) [000234] nc--G------                  t234 = *  IND       long   REG NA
                                                            /--*  t232   byref  arg0 in rcx
                                                            +--*  t234   long   control expr
N002 ( 17,  8) [000164] --CXG+-----                  t164 = *  CALL      ref    <unknown method> $348
N003 (  1,  1) [000167] -----+-----                  t167 =    LCL_VAR   byref  V00 arg0         u:1 (last use) $80
                                                            /--*  t167   byref  
                                                            +--*  t164   ref    
N004 ( 21, 11) [000169] UACXG+-----                         *  STOREIND  ref    $395
N001 (  0,  0) [000170] -----+-----                            RETURN    void   $VN.Void

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
N001 (  3,  2) [000122] -----+-----                  t122 =    LCL_VAR   byref  V23 loc19        u:2 (last use) $248
                                                            /--*  t122   byref  
               [000235] -----------                  t235 = *  PUTARG_REG byref  REG rcx
N001 (  3, 10) [000236] Hc---------                  t236 =    CNS_INT(h) long   0x7fff6f084438 ftn
                                                            /--*  t236   long   
N002 (  5, 12) [000237] nc--G------                  t237 = *  IND       long   REG NA
                                                            /--*  t235   byref  arg0 in rcx
                                                            +--*  t237   long   control expr
N002 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> $VN.Void
N001 (  1,  1) [000124] -----+-----                  t124 =    LCL_VAR   long   V01 arg1         u:1 (last use) $c0
N002 (  1,  1) [000125] -c---+-N---                  t125 =    CNS_INT   int    0 $40
                                                            /--*  t124   long   
                                                            +--*  t125   int    
N003 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) $397
N001 (  3,  2) [000128] -c---+-----                  t128 =    LCL_VAR   ref    V05 loc1         u:4 $480
N002 (  1,  1) [000129] -c---+-----                  t129 =    CNS_INT   ref    null $VN.Null
                                                            /--*  t128   ref    
                                                            +--*  t129   ref    
N003 (  5,  4) [000130] -----+-N---                         *  CMP       void  
N004 (  7,  6) [000131] -----+-----                            JCC       void   cond=UEQ

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
N001 (  3,  2) [000132] -----+-----                  t132 =    LCL_VAR   ref    V05 loc1         u:4 (last use) $480
                                                            /--*  t132   ref    
               [000238] -----------                  t238 = *  PUTARG_REG ref    REG rcx
N001 (  3, 10) [000239] Hc---------                  t239 =    CNS_INT(h) long   0x7fff6d1fcf18 ftn
                                                            /--*  t239   long   
N002 (  5, 12) [000240] nc--G------                  t240 = *  IND       long   REG NA
                                                            /--*  t238   ref    this in rcx
                                                            +--*  t240   long   control expr
N002 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this $VN.Void

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
N001 (  1,  1) [000081] -----+-----                   t81 =    CATCH_ARG ref    $34d
                                                            /--*  t81    ref    
N002 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 $VN.Void
N001 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 (last use) $34d
                                                            /--*  t119   ref    
               [000241] -----------                  t241 = *  PUTARG_REG ref    REG rcx
N001 (  3, 10) [000242] Hc---------                  t242 =    CNS_INT(h) long   0x7fff6d1fcf30 ftn
                                                            /--*  t242   long   
N002 (  5, 12) [000243] nc--G------                  t243 = *  IND       long   REG NA
                                                            /--*  t241   ref    arg0 in rcx
                                                            +--*  t243   long   control expr
N002 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> $34e
                                                            /--*  t120   ref    
N003 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 $VN.Void

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Calculate stack level slots

*************** Finishing PHASE Calculate stack level slots [no changes]

*************** Starting PHASE Linear scan register alloc
Clearing modified regs.

buildIntervals ========

-----------------
LIVENESS:
-----------------
BB01
use: {V00 V01 V02}
def: {V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
 in: {V00 V01 V02}
out: {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
BB10
use: {V02}
def: {}
 in: {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
out: {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
BB11
use: {V02}
def: {}
 in: {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
out: {V00 V01 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
BB12
use: {V00 V01 V07 V11 V15 V19 V23 V26 V27 V28 V29}
def: {}
 in: {V00 V01 V07 V11 V15 V19 V23 V26 V27 V28 V29}
out: {V01 V23}
BB14
use: {}
def: {}
 in: {}
out: {}
BB15
use: {V00 V07 V11 V15 V19 V23 V26 V27 V28 V29}
def: {}
 in: {V00 V07 V11 V15 V19 V23 V26 V27 V28 V29}
out: {}
BB16
use: {V01 V05 V23}
def: {}
 in: {V01 V05 V23}
out: {V05}
BB17
use: {V05}
def: {}
 in: {V05}
out: {}
BB13
use: {}
def: {V05 V31}
 in: {V01 V23}
out: {V01 V05 V23}
EH Vars: {V01 V05 V23}
Finally Vars: {}

Interval  0: byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  0: (V00) byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval  1: long RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  1: (V01) long (SPILLED) (writeThru) RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval  2: int RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  2: (V02) int RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval  3: byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  3: (V07) byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval  4: byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  4: (V11) byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval  5: byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  5: (V15) byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval  6: byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  6: (V19) byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval  7: byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  7: (V23) byref (SPILLED) (writeThru) RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval  8: byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  8: (V26) byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval  9: byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  9: (V27) byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval 10: byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval 10: (V28) byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval 11: byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval 11: (V29) byref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval 12: ref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval 12: (V31) ref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]

FP callee save candidate vars: None

floatVarCount = 0; hasLoops = false, singleExit = false
TUPLE STYLE DUMP BEFORE LSRA
Start LSRA Block Sequence: 
Current block: BB01
Current block: BB10
Current block: BB11
Current block: BB15
Current block: BB12
Current block: BB13
Current block: BB16
Current block: BB17
Current block: BB14
Final LSRA Block Sequence:
BB01 (  1   ) critical-out
BB10 (  0.52)
BB11 (  0.42) critical-out
BB15 (  0.10)
BB12 (  0.70) critical-in
BB13 (  0   ) EH-in EH-out
BB16 (  0.20) critical-in critical-out has EH pred
BB17 (  0   )
BB14 (  0.79) critical-in

BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12}
=====
  N000.                    IL_OFFSET INLRT @ 0x000[E-]
  N001. t0              =  CNS_INT   null
  N002.                    V05 MEM; t0
  N001.                    V00(t2)
  N002.                    V26(t7); t2
  N001.                    V26(t3)
  N002.                    CNS_INT   0
  N004.                    V26(t225*)
  N005.                    V00(t9)
  N006.                    CNS_INT   8
  N007. t193            =  ADD      ; t9
  N003.                    CMP      ; t3
  N008. t226            =  SELECTCC ; t225*,t193
  N009.                    V26(t194); t226
  N001.                    V01(t12)
  N002.                    V07(t15); t12
  N001.                    V00(t16)
  N002.                    V27(t21); t16
  N001.                    V27(t17)
  N002.                    CNS_INT   0
  N004.                    V27(t223*)
  N005.                    V00(t23)
  N006.                    CNS_INT   12
  N007. t189            =  ADD      ; t23
  N003.                    CMP      ; t17
  N008. t224            =  SELECTCC ; t223*,t189
  N009.                    V27(t190); t224
  N001.                    V01(t26)
  N002.                    CNS_INT   4
  N003. t29             =  ADD      ; t26
  N004.                    V11(t30); t29
  N001.                    V00(t31)
  N002.                    V28(t36); t31
  N001.                    V28(t32)
  N002.                    CNS_INT   0
  N004.                    V28(t221*)
  N005.                    V00(t38)
  N006.                    CNS_INT   16
  N007. t185            =  ADD      ; t38
  N003.                    CMP      ; t32
  N008. t222            =  SELECTCC ; t221*,t185
  N009.                    V28(t186); t222
  N001.                    V01(t41)
  N002.                    CNS_INT   8
  N003. t44             =  ADD      ; t41
  N004.                    V15(t45); t44
  N001.                    V00(t46)
  N002.                    V29(t51); t46
  N001.                    V29(t47)
  N002.                    CNS_INT   0
  N004.                    V29(t217*)
  N005.                    V00(t53)
  N006.                    CNS_INT   24
  N007. t181            =  ADD      ; t53
  N003.                    CMP      ; t47
  N008. t218            =  SELECTCC ; t217*,t181
  N009.                    V29(t182); t218
  N001.                    V01(t56)
  N002.                    CNS_INT   16
  N003. t59             =  ADD      ; t56
  N004.                    V19(t60); t59
  N001.                    V01(t71)
  N002.                    CNS_INT   48
  N003. t74             =  ADD      ; t71
  N004.                    V23(t75); t74
  N001.                    V02(t76)
  N002.                    CNS_INT   0
  N003.                    CMP      ; t76
  N004.                    JCC       cond=UEQ

BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15}
=====
  N001.                    V02(t135)
  N002.                    CNS_INT   1
  N003.                    CMP      ; t135
  N004.                    JCC       cond=UEQ

BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
=====
  N001.                    V02(t171*)
  N002.                    CNS_INT   2
  N003.                    CMP      ; t171*
  N004.                    JCC       cond=UEQ

BB15 [0017] [104..166) (return), preds={BB10} succs={}
=====
  N001.                    V07(t139*)
  N002. t140            =  IND      ; t139*
  N003.                    V26(t142*)
  N004.                    STOREIND ; t142*,t140
  N001.                    V11(t145*)
  N002. t146            =  IND      ; t145*
  N003.                    V27(t148*)
  N004.                    STOREIND ; t148*,t146
  N001.                    V15(t151*)
  N002. t152            =  IND      ; t151*
  N003.                    V28(t154*)
  N004.                    STOREIND ; t154*,t152
  N001.                    V19(t157*)
  N002. t158            =  IND      ; t157*
  N003.                    V29(t160*)
  N004.                    STORE_BLK; t160*,t158
  N001.                    V23(t163*)
  N000. t232            =  PUTARG_REG; t163*
  N001.                    CNS_INT(h) 0x7fff6f084420 ftn
  N002.                    IND      
  N002. t164            =  CALL     ; t232
  N003.                    V00(t167*)
  N004.                    STOREIND ; t167*,t164
  N001.                    RETURN   

BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14}
=====
  N001.                    V01(t82)
  N002.                    CNS_INT   0
  N003.                    STORE_BLK; t82
  N001.                    V26(t86*)
  N002. t87             =  IND      ; t86*
  N003.                    V07(t89*)
  N004.                    STOREIND ; t89*,t87
  N001.                    V27(t92*)
  N002. t93             =  IND      ; t92*
  N003.                    V11(t95*)
  N004.                    STOREIND ; t95*,t93
  N001.                    V28(t98*)
  N002. t99             =  IND      ; t98*
  N003.                    V15(t101*)
  N004.                    STOREIND ; t101*,t99
  N001.                    V29(t104*)
  N002. t105            =  IND      ; t104*
  N003.                    V19(t107*)
  N004.                    STORE_BLK; t107*,t105
  N001.                    V23(t110)
  N002.                    CNS_INT   0
  N003.                    STOREIND ; t110
  N001.                    V00(t113*)
  N002. t114            =  IND      ; t113*
  N000. t228            =  PUTARG_REG; t114
  N003.                    V23(t115)
  N000. t229            =  PUTARG_REG; t115
  N001.                    CNS_INT(h) 0x7fff6f084408 ftn
  N002.                    IND      
  N004.                    CALL     ; t228,t229

BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
=====
  N001. t81             =  CATCH_ARG
  N002.                    V31(t118); t81
  N001.                    V31(t119*)
  N000. t241            =  PUTARG_REG; t119*
  N001.                    CNS_INT(h) 0x7fff6d1fcf30 ftn
  N002.                    IND      
  N002. t120            =  CALL     ; t241
  N003.                    V05 MEM; t120

BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
=====
  N001.                    V23(t122*)
  N000. t235            =  PUTARG_REG; t122*
  N001.                    CNS_INT(h) 0x7fff6f084438 ftn
  N002.                    IND      
  N002.                    CALL     ; t235
  N001.                    V01(t124*)
  N002.                    CNS_INT   0
  N003.                    STORE_BLK; t124*
  N001.                    V05 MEM
  N002.                    CNS_INT   null
  N003.                    CMP      
  N004.                    JCC       cond=UEQ

BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
=====
  N001. t132*           =  V05 MEM
  N000. t238            =  PUTARG_REG; t132*
  N001.                    CNS_INT(h) 0x7fff6d1fcf18 ftn
  N002.                    IND      
  N002.                    CALL     ; t238

BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
=====
  N001.                    RETURN   




buildIntervals second part ========
Int arg V00 in reg rcx
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[rcx] minReg=1 fixed wt=100.00>
Int arg V01 in reg rdx
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[rdx] minReg=1 fixed wt=100.00>
Int arg V02 in reg r8
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02> BB00 regmask=[r8] minReg=1 fixed wt=100.00>
Int arg V03 in reg r9

NEW BLOCK BB01
<RefPosition #3   @1   RefTypeBB BB01 regmask=[] minReg=1 wt=100.00>

DefList: {  }
N003 (???,???) [000227] -----------                         *  IL_OFFSET void   INLRT @ 0x000[E-] REG NA

DefList: {  }
N005 (  1,  1) [000000] -----+-----                         *  CNS_INT   ref    null REG NA $VN.Null
Interval 13: ref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #4   @6   RefTypeDef <Ivl:13> CNS_INT BB01 regmask=[allIntButFP] minReg=1 wt=400.00>

DefList: { N005.t0. CNS_INT }
N007 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 NA REG NA $VN.Void
<RefPosition #5   @7   RefTypeUse <Ivl:13> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>

DefList: {  }
N009 (  1,  1) [000002] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 NA REG NA $80

DefList: {  }
N011 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 NA REG NA $VN.Void
<RefPosition #6   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=1080.03>
<RefPosition #7   @12  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: {  }
N013 (  1,  1) [000003] -----+-----                         *  LCL_VAR   byref  V26 tmp1         u:2 NA REG NA $80

DefList: {  }
N015 (  1,  1) [000004] -c---+-----                         *  CNS_INT   byref  0 REG NA $VN.Null
Contained
DefList: {  }
N017 (  1,  1) [000225] -----------                         *  LCL_VAR   byref  V26 tmp1          NA (last use) REG NA

DefList: {  }
N019 (  1,  1) [000009] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 NA REG NA $80

DefList: {  }
N021 (  1,  1) [000192] -c---+-----                         *  CNS_INT   long   8 REG NA $200
Contained
DefList: {  }
N023 (  3,  3) [000193] -----+-----                         *  ADD       byref  REG NA $240
<RefPosition #8   @23  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=1080.03>
Interval 14: byref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #9   @24  RefTypeDef <Ivl:14> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>

DefList: { N023.t193. ADD }
N025 (  3,  3) [000005] -----+-N---                         *  CMP       void   REG NA
<RefPosition #10  @25  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: { N023.t193. ADD }
N027 (  8,  8) [000226] -----------                         *  SELECTCC  byref  cond=UEQ REG NA
<RefPosition #11  @27  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #12  @27  RefTypeUse <Ivl:14> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Interval 15: byref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #13  @28  RefTypeDef <Ivl:15> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
Assigning related <I15> to <V26/L8>

DefList: { N027.t226. SELECTCC }
N029 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 NA REG NA $VN.Void
<RefPosition #14  @29  RefTypeUse <Ivl:15> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Assigning related <V26/L8> to <I15>
<RefPosition #15  @30  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: {  }
N031 (  1,  1) [000012] -----+-----                         *  LCL_VAR   long   V01 arg1         u:1 NA REG NA $c0

DefList: {  }
N033 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 NA REG NA $VN.Void
<RefPosition #16  @33  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=394.80>
<RefPosition #17  @34  RefTypeDef <Ivl:3 V07> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=180.03>

DefList: {  }
N035 (  1,  1) [000016] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 NA REG NA $80

DefList: {  }
N037 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 NA REG NA $VN.Void
<RefPosition #18  @37  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=1080.03>
<RefPosition #19  @38  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: {  }
N039 (  1,  1) [000017] -----+-----                         *  LCL_VAR   byref  V27 tmp2         u:2 NA REG NA $80

DefList: {  }
N041 (  1,  1) [000018] -c---+-----                         *  CNS_INT   byref  0 REG NA $VN.Null
Contained
DefList: {  }
N043 (  1,  1) [000223] -----------                         *  LCL_VAR   byref  V27 tmp2          NA (last use) REG NA

DefList: {  }
N045 (  1,  1) [000023] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 NA REG NA $80

DefList: {  }
N047 (  1,  1) [000188] -c---+-----                         *  CNS_INT   long   12 REG NA $201
Contained
DefList: {  }
N049 (  3,  3) [000189] -----+-----                         *  ADD       byref  REG NA $242
<RefPosition #20  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=1080.03>
Interval 16: byref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #21  @50  RefTypeDef <Ivl:16> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>

DefList: { N049.t189. ADD }
N051 (  3,  3) [000019] -----+-N---                         *  CMP       void   REG NA
<RefPosition #22  @51  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: { N049.t189. ADD }
N053 (  8,  8) [000224] -----------                         *  SELECTCC  byref  cond=UEQ REG NA
<RefPosition #23  @53  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #24  @53  RefTypeUse <Ivl:16> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Interval 17: byref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #25  @54  RefTypeDef <Ivl:17> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
Assigning related <I17> to <V27/L9>

DefList: { N053.t224. SELECTCC }
N055 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 NA REG NA $VN.Void
<RefPosition #26  @55  RefTypeUse <Ivl:17> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Assigning related <V27/L9> to <I17>
<RefPosition #27  @56  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: {  }
N057 (  1,  1) [000026] -----+-----                         *  LCL_VAR   long   V01 arg1         u:1 NA REG NA $c0

DefList: {  }
N059 (  1,  1) [000028] -c---+-----                         *  CNS_INT   long   4 REG NA $202
Contained
DefList: {  }
N061 (  3,  3) [000029] -----+-----                         *  ADD       long   REG NA $2c0
<RefPosition #28  @61  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=394.80>
Interval 18: long RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #29  @62  RefTypeDef <Ivl:18> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>

DefList: { N061.t29. ADD }
N063 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 NA REG NA $VN.Void
<RefPosition #30  @63  RefTypeUse <Ivl:18> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Assigning related <V11/L4> to <I18>
<RefPosition #31  @64  RefTypeDef <Ivl:4 V11> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=180.03>

DefList: {  }
N065 (  1,  1) [000031] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 NA REG NA $80

DefList: {  }
N067 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 NA REG NA $VN.Void
<RefPosition #32  @67  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=1080.03>
<RefPosition #33  @68  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: {  }
N069 (  1,  1) [000032] -----+-----                         *  LCL_VAR   byref  V28 tmp3         u:2 NA REG NA $80

DefList: {  }
N071 (  1,  1) [000033] -c---+-----                         *  CNS_INT   byref  0 REG NA $VN.Null
Contained
DefList: {  }
N073 (  1,  1) [000221] -----------                         *  LCL_VAR   byref  V28 tmp3          NA (last use) REG NA

DefList: {  }
N075 (  1,  1) [000038] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 NA REG NA $80

DefList: {  }
N077 (  1,  1) [000184] -c---+-----                         *  CNS_INT   long   16 REG NA $204
Contained
DefList: {  }
N079 (  3,  3) [000185] -----+-----                         *  ADD       byref  REG NA $244
<RefPosition #34  @79  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=1080.03>
Interval 19: byref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #35  @80  RefTypeDef <Ivl:19> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>

DefList: { N079.t185. ADD }
N081 (  3,  3) [000034] -----+-N---                         *  CMP       void   REG NA
<RefPosition #36  @81  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: { N079.t185. ADD }
N083 (  8,  8) [000222] -----------                         *  SELECTCC  byref  cond=UEQ REG NA
<RefPosition #37  @83  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #38  @83  RefTypeUse <Ivl:19> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Interval 20: byref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #39  @84  RefTypeDef <Ivl:20> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
Assigning related <I20> to <V28/L10>

DefList: { N083.t222. SELECTCC }
N085 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 NA REG NA $VN.Void
<RefPosition #40  @85  RefTypeUse <Ivl:20> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Assigning related <V28/L10> to <I20>
<RefPosition #41  @86  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: {  }
N087 (  1,  1) [000041] -----+-----                         *  LCL_VAR   long   V01 arg1         u:1 NA REG NA $c0

DefList: {  }
N089 (  1,  1) [000043] -c---+-----                         *  CNS_INT   long   8 REG NA $200
Contained
DefList: {  }
N091 (  3,  3) [000044] -----+-----                         *  ADD       long   REG NA $2c1
<RefPosition #42  @91  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=394.80>
Interval 21: long RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #43  @92  RefTypeDef <Ivl:21> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>

DefList: { N091.t44. ADD }
N093 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 NA REG NA $VN.Void
<RefPosition #44  @93  RefTypeUse <Ivl:21> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Assigning related <V15/L5> to <I21>
<RefPosition #45  @94  RefTypeDef <Ivl:5 V15> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=180.03>

DefList: {  }
N095 (  1,  1) [000046] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 NA REG NA $80

DefList: {  }
N097 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 NA REG NA $VN.Void
<RefPosition #46  @97  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=1080.03>
<RefPosition #47  @98  RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: {  }
N099 (  1,  1) [000047] -----+-----                         *  LCL_VAR   byref  V29 tmp4         u:2 NA REG NA $80

DefList: {  }
N101 (  1,  1) [000048] -c---+-----                         *  CNS_INT   byref  0 REG NA $VN.Null
Contained
DefList: {  }
N103 (  1,  1) [000217] -----------                         *  LCL_VAR   byref  V29 tmp4          NA (last use) REG NA

DefList: {  }
N105 (  1,  1) [000053] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 NA REG NA $80

DefList: {  }
N107 (  1,  1) [000180] -c---+-----                         *  CNS_INT   long   24 REG NA $205
Contained
DefList: {  }
N109 (  3,  3) [000181] -----+-----                         *  ADD       byref  REG NA $246
<RefPosition #48  @109 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=1080.03>
Interval 22: byref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #49  @110 RefTypeDef <Ivl:22> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>

DefList: { N109.t181. ADD }
N111 (  3,  3) [000049] -----+-N---                         *  CMP       void   REG NA
<RefPosition #50  @111 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: { N109.t181. ADD }
N113 (  8,  8) [000218] -----------                         *  SELECTCC  byref  cond=UEQ REG NA
<RefPosition #51  @113 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #52  @113 RefTypeUse <Ivl:22> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Interval 23: byref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #53  @114 RefTypeDef <Ivl:23> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
Assigning related <I23> to <V29/L11>

DefList: { N113.t218. SELECTCC }
N115 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 NA REG NA $VN.Void
<RefPosition #54  @115 RefTypeUse <Ivl:23> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Assigning related <V29/L11> to <I23>
<RefPosition #55  @116 RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=480.03>

DefList: {  }
N117 (  1,  1) [000056] -----+-----                         *  LCL_VAR   long   V01 arg1         u:1 NA REG NA $c0

DefList: {  }
N119 (  1,  1) [000058] -c---+-----                         *  CNS_INT   long   16 REG NA $204
Contained
DefList: {  }
N121 (  3,  3) [000059] -----+-----                         *  ADD       long   REG NA $2c2
<RefPosition #56  @121 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=394.80>
Interval 24: long RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #57  @122 RefTypeDef <Ivl:24> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>

DefList: { N121.t59. ADD }
N123 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 NA REG NA $VN.Void
<RefPosition #58  @123 RefTypeUse <Ivl:24> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Assigning related <V19/L6> to <I24>
<RefPosition #59  @124 RefTypeDef <Ivl:6 V19> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=180.03>

DefList: {  }
N125 (  1,  1) [000071] -----+-----                         *  LCL_VAR   long   V01 arg1         u:1 NA REG NA $c0

DefList: {  }
N127 (  1,  1) [000073] -c---+-----                         *  CNS_INT   long   48 REG NA $206
Contained
DefList: {  }
N129 (  3,  3) [000074] -----+-----                         *  ADD       long   REG NA $2c3
<RefPosition #60  @129 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=394.80>
Interval 25: long RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #61  @130 RefTypeDef <Ivl:25> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>

DefList: { N129.t74. ADD }
N131 (  7,  6) [000075] DA---+-----                         *  STORE_LCL_VAR byref  V23 loc19        d:2 NA REG NA $VN.Void
<RefPosition #62  @131 RefTypeUse <Ivl:25> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
Assigning related <V23/L7> to <I25>
<RefPosition #63  @132 RefTypeDef <Ivl:7 V23> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=84.82>

DefList: {  }
N133 (  1,  1) [000076] -----+-----                         *  LCL_VAR   int    V02 arg2         u:1 NA REG NA $100

DefList: {  }
N135 (  1,  1) [000077] -c---+-----                         *  CNS_INT   int    0 REG NA $40
Contained
DefList: {  }
N137 (  3,  3) [000078] -----+-N---                         *  CMP       void   REG NA
<RefPosition #64  @137 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last wt=393.60>

DefList: {  }
N139 (  5,  5) [000079] -----+-----                         *  JCC       void   cond=UEQ REG NA



CHECKING LAST USES for BB01, liveout={V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
==============================
use: {V00 V01 V02}
def: {V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}

NEW BLOCK BB10


Setting BB01 as the predecessor for determining incoming variable registers of BB10
<RefPosition #65  @141 RefTypeBB BB10 regmask=[] minReg=1 wt=52.00>

DefList: {  }
N143 (  1,  1) [000135] -----+-----                         *  LCL_VAR   int    V02 arg2         u:1 NA REG NA $100

DefList: {  }
N145 (  1,  1) [000136] -c---+-----                         *  CNS_INT   int    1 REG NA $41
Contained
DefList: {  }
N147 (  3,  3) [000137] -----+-N---                         *  CMP       void   REG NA
<RefPosition #66  @147 RefTypeUse <Ivl:2 V02> LCL_VAR BB10 regmask=[allIntButFP] minReg=1 last wt=393.60>

DefList: {  }
N149 (  5,  5) [000138] -----+-----                         *  JCC       void   cond=UEQ REG NA



CHECKING LAST USES for BB10, liveout={V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
==============================
use: {V02}
def: {}

NEW BLOCK BB11


Setting BB10 as the predecessor for determining incoming variable registers of BB11
<RefPosition #67  @151 RefTypeBB BB11 regmask=[] minReg=1 wt=41.60>

DefList: {  }
N153 (  1,  1) [000171] -----+-----                         *  LCL_VAR   int    V02 arg2         u:1 NA (last use) REG NA $100

DefList: {  }
N155 (  1,  1) [000172] -c---+-----                         *  CNS_INT   int    2 REG NA $42
Contained
DefList: {  }
N157 (  3,  3) [000173] -----+-N---                         *  CMP       void   REG NA
<RefPosition #68  @157 RefTypeUse <Ivl:2 V02> LCL_VAR BB11 regmask=[allIntButFP] minReg=1 last wt=393.60>

DefList: {  }
N159 (  5,  5) [000174] -----+-----                         *  JCC       void   cond=UEQ REG NA



CHECKING LAST USES for BB11, liveout={V00 V01 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
==============================
use: {V02}
def: {}

NEW BLOCK BB15


Setting BB10 as the predecessor for determining incoming variable registers of BB15
<RefPosition #69  @161 RefTypeBB BB15 regmask=[] minReg=1 wt=10.40>

DefList: {  }
N163 (  3,  2) [000139] -----+-----                         *  LCL_VAR   byref  V07 loc3         u:2 NA (last use) REG NA $241

DefList: {  }
N165 (  6,  4) [000140] U--XG+-----                         *  IND       int    REG NA <l:$1c4, c:$1c3>
<RefPosition #70  @165 RefTypeUse <Ivl:3 V07> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
Interval 26: int RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #71  @166 RefTypeDef <Ivl:26> IND BB15 regmask=[allIntButFP] minReg=1 wt=41.60>

DefList: { N165.t140. IND }
N167 (  1,  1) [000142] -----+-----                         *  LCL_VAR   byref  V26 tmp1         u:4 NA (last use) REG NA $280

DefList: { N165.t140. IND }
N169 ( 10,  7) [000144] UA-XG+-----                         *  STOREIND  int    REG NA $384
<RefPosition #72  @169 RefTypeUse <Ivl:8 V26> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #73  @169 RefTypeUse <Ivl:26> BB15 regmask=[allIntButFP] minReg=1 last wt=10.40>

DefList: {  }
N171 (  3,  2) [000145] -----+-----                         *  LCL_VAR   byref  V11 loc7         u:2 NA (last use) REG NA $243

DefList: {  }
N173 (  6,  4) [000146] U--XG+-----                         *  IND       int    REG NA <l:$1c6, c:$1c5>
<RefPosition #74  @173 RefTypeUse <Ivl:4 V11> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
Interval 27: int RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #75  @174 RefTypeDef <Ivl:27> IND BB15 regmask=[allIntButFP] minReg=1 wt=41.60>

DefList: { N173.t146. IND }
N175 (  1,  1) [000148] -----+-----                         *  LCL_VAR   byref  V27 tmp2         u:4 NA (last use) REG NA $281

DefList: { N173.t146. IND }
N177 ( 10,  7) [000150] UA-XG+-----                         *  STOREIND  int    REG NA $389
<RefPosition #76  @177 RefTypeUse <Ivl:9 V27> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #77  @177 RefTypeUse <Ivl:27> BB15 regmask=[allIntButFP] minReg=1 last wt=10.40>

DefList: {  }
N179 (  3,  2) [000151] -----+-----                         *  LCL_VAR   byref  V15 loc11        u:2 NA (last use) REG NA $245

DefList: {  }
N181 (  6,  4) [000152] U--XG+-----                         *  IND       int    REG NA <l:$1c8, c:$1c7>
<RefPosition #78  @181 RefTypeUse <Ivl:5 V15> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
Interval 28: int RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #79  @182 RefTypeDef <Ivl:28> IND BB15 regmask=[allIntButFP] minReg=1 wt=41.60>

DefList: { N181.t152. IND }
N183 (  1,  1) [000154] -----+-----                         *  LCL_VAR   byref  V28 tmp3         u:4 NA (last use) REG NA $282

DefList: { N181.t152. IND }
N185 ( 10,  7) [000156] UA-XG+-----                         *  STOREIND  int    REG NA $38e
<RefPosition #80  @185 RefTypeUse <Ivl:10 V28> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #81  @185 RefTypeUse <Ivl:28> BB15 regmask=[allIntButFP] minReg=1 last wt=10.40>

DefList: {  }
N187 (  3,  2) [000157] -----+-----                         *  LCL_VAR   byref  V19 loc15        u:2 NA (last use) REG NA $247

DefList: {  }
N189 (  9,  6) [000158] Uc-XG+-----                         *  IND       struct REG NA
Contained
DefList: {  }
N191 (  1,  1) [000160] -----+-----                         *  LCL_VAR   byref  V29 tmp4         u:4 NA (last use) REG NA $283

DefList: {  }
N193 ( 17, 12) [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
Interval 29: float RefPositions {} physReg:NA Preferences=[allFloat] Aversions=[]
<RefPosition #82  @193 RefTypeDef <Ivl:29 internal> STORE_BLK BB15 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=41.60>
<RefPosition #83  @193 RefTypeUse <Ivl:11 V29> LCL_VAR BB15 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=480.03>
<RefPosition #84  @193 RefTypeUse <Ivl:6 V19> LCL_VAR BB15 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=180.03>
<RefPosition #85  @193 RefTypeUse <Ivl:29 internal> STORE_BLK BB15 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=41.60>

DefList: {  }
N195 (  3,  2) [000163] -----+-----                         *  LCL_VAR   byref  V23 loc19        u:2 NA (last use) REG NA $248

DefList: {  }
N197 (???,???) [000232] -----------                         *  PUTARG_REG byref  REG rcx
<RefPosition #86  @197 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #87  @197 RefTypeUse <Ivl:7 V23> LCL_VAR BB15 regmask=[rcx] minReg=1 last fixed wt=84.82>
Interval 30: byref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #88  @198 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #89  @198 RefTypeDef <Ivl:30> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed wt=41.60>

DefList: { N197.t232. PUTARG_REG }
N199 (  3, 10) [000233] Hc---------                         *  CNS_INT(h) long   0x7fff6f084420 ftn REG NA
Contained
DefList: { N197.t232. PUTARG_REG }
N201 (  5, 12) [000234] nc--G------                         *  IND       long   REG NA
Contained
DefList: { N197.t232. PUTARG_REG }
N203 ( 17,  8) [000164] --CXG+-----                         *  CALL      ref    <unknown method> REG NA $348
<RefPosition #90  @203 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #91  @203 RefTypeUse <Ivl:30> BB15 regmask=[rcx] minReg=1 last fixed wt=10.40>
<RefPosition #92  @204 RefTypeKill BB15 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
Interval 31: ref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #93  @204 RefTypeFixedReg <Reg:rax> BB15 regmask=[rax] minReg=1 wt=10.40>
<RefPosition #94  @204 RefTypeDef <Ivl:31> CALL BB15 regmask=[rax] minReg=1 fixed wt=41.60>

DefList: { N203.t164. CALL }
N205 (  1,  1) [000167] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 NA (last use) REG NA $80

DefList: { N203.t164. CALL }
N207 ( 21, 11) [000169] UACXG+-----                         *  STOREIND  ref    REG NA $395
<RefPosition #95  @207 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #96  @207 RefTypeUse <Ivl:0 V00> LCL_VAR BB15 regmask=[rcx] minReg=1 last fixed wt=1080.03>
<RefPosition #97  @207 RefTypeFixedReg <Reg:rdx> BB15 regmask=[rdx] minReg=1 wt=10.40>
<RefPosition #98  @207 RefTypeUse <Ivl:31> BB15 regmask=[rdx] minReg=1 last fixed wt=10.40>
<RefPosition #99  @208 RefTypeKill BB15 regmask=[rax rcx rdx r8-r11 r16-r31 mm0-mm5 mm16-mm31] minReg=1>

DefList: {  }
N209 (  0,  0) [000170] -----+-----                         *  RETURN    void   REG NA $VN.Void



CHECKING LAST USES for BB15, liveout={}
==============================
use: {V00 V07 V11 V15 V19 V23 V26 V27 V28 V29}
def: {}

NEW BLOCK BB12


Setting BB01 as the predecessor for determining incoming variable registers of BB12
<RefPosition #100 @211 RefTypeBB BB12 regmask=[] minReg=1 wt=69.63>

DefList: {  }
N213 (  1,  1) [000082] -----+-----                         *  LCL_VAR   long   V01 arg1         u:1 NA REG NA $c0

DefList: {  }
N215 (  1,  1) [000083] -c---+-N---                         *  CNS_INT   int    0 REG NA $40
Contained
DefList: {  }
N217 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
Interval 32: float RefPositions {} physReg:NA Preferences=[allFloat] Aversions=[]
<RefPosition #101 @217 RefTypeDef <Ivl:32 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=278.53>
<RefPosition #102 @217 RefTypeUse <Ivl:1 V01> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=394.80>
<RefPosition #103 @217 RefTypeUse <Ivl:32 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=278.53>

DefList: {  }
N219 (  1,  1) [000086] -----+-----                         *  LCL_VAR   byref  V26 tmp1         u:4 NA (last use) REG NA $280

DefList: {  }
N221 (  3,  2) [000087] U--XG+-----                         *  IND       int    REG NA <l:$1cb, c:$1ca>
<RefPosition #104 @221 RefTypeUse <Ivl:8 V26> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
Interval 33: int RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #105 @222 RefTypeDef <Ivl:33> IND BB12 regmask=[allIntButFP] minReg=1 wt=278.53>

DefList: { N221.t87. IND }
N223 (  3,  2) [000089] -----+-----                         *  LCL_VAR   byref  V07 loc3         u:2 NA (last use) REG NA $241

DefList: { N221.t87. IND }
N225 ( 10,  7) [000091] UA-XG+-----                         *  STOREIND  int    REG NA $384
<RefPosition #106 @225 RefTypeUse <Ivl:3 V07> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #107 @225 RefTypeUse <Ivl:33> BB12 regmask=[allIntButFP] minReg=1 last wt=69.63>

DefList: {  }
N227 (  1,  1) [000092] -----+-----                         *  LCL_VAR   byref  V27 tmp2         u:4 NA (last use) REG NA $281

DefList: {  }
N229 (  3,  2) [000093] U--XG+-----                         *  IND       int    REG NA <l:$1cd, c:$1cc>
<RefPosition #108 @229 RefTypeUse <Ivl:9 V27> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
Interval 34: int RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #109 @230 RefTypeDef <Ivl:34> IND BB12 regmask=[allIntButFP] minReg=1 wt=278.53>

DefList: { N229.t93. IND }
N231 (  3,  2) [000095] -----+-----                         *  LCL_VAR   byref  V11 loc7         u:2 NA (last use) REG NA $243

DefList: { N229.t93. IND }
N233 ( 10,  7) [000097] UA-XG+-----                         *  STOREIND  int    REG NA $389
<RefPosition #110 @233 RefTypeUse <Ivl:4 V11> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #111 @233 RefTypeUse <Ivl:34> BB12 regmask=[allIntButFP] minReg=1 last wt=69.63>

DefList: {  }
N235 (  1,  1) [000098] -----+-----                         *  LCL_VAR   byref  V28 tmp3         u:4 NA (last use) REG NA $282

DefList: {  }
N237 (  3,  2) [000099] U--XG+-----                         *  IND       int    REG NA <l:$1cf, c:$1ce>
<RefPosition #112 @237 RefTypeUse <Ivl:10 V28> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
Interval 35: int RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #113 @238 RefTypeDef <Ivl:35> IND BB12 regmask=[allIntButFP] minReg=1 wt=278.53>

DefList: { N237.t99. IND }
N239 (  3,  2) [000101] -----+-----                         *  LCL_VAR   byref  V15 loc11        u:2 NA (last use) REG NA $245

DefList: { N237.t99. IND }
N241 ( 10,  7) [000103] UA-XG+-----                         *  STOREIND  int    REG NA $38e
<RefPosition #114 @241 RefTypeUse <Ivl:5 V15> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #115 @241 RefTypeUse <Ivl:35> BB12 regmask=[allIntButFP] minReg=1 last wt=69.63>

DefList: {  }
N243 (  1,  1) [000104] -----+-----                         *  LCL_VAR   byref  V29 tmp4         u:4 NA (last use) REG NA $283

DefList: {  }
N245 (  7,  5) [000105] Uc-XG+-----                         *  IND       struct REG NA
Contained
DefList: {  }
N247 (  3,  2) [000107] -----+-----                         *  LCL_VAR   byref  V19 loc15        u:2 NA (last use) REG NA $247

DefList: {  }
N249 ( 17, 12) [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
Interval 36: float RefPositions {} physReg:NA Preferences=[allFloat] Aversions=[]
<RefPosition #116 @249 RefTypeDef <Ivl:36 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=278.53>
<RefPosition #117 @249 RefTypeUse <Ivl:6 V19> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=180.03>
<RefPosition #118 @249 RefTypeUse <Ivl:11 V29> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=480.03>
<RefPosition #119 @249 RefTypeUse <Ivl:36 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=278.53>

DefList: {  }
N251 (  3,  2) [000110] -----+-----                         *  LCL_VAR   byref  V23 loc19        u:2 NA REG NA $248

DefList: {  }
N253 (  1,  1) [000111] -c---+-----                         *  CNS_INT   int    0 REG NA $40
Contained
DefList: {  }
N255 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  REG NA $39d
<RefPosition #120 @255 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=84.82>

DefList: {  }
N257 (  1,  1) [000113] -----+-----                         *  LCL_VAR   byref  V00 arg0         u:1 NA (last use) REG NA $80

DefList: {  }
N259 (  3,  2) [000114] U--XG+-----                         *  IND       ref    REG NA <l:$39f, c:$39e>
<RefPosition #121 @259 RefTypeUse <Ivl:0 V00> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=1080.03>
Interval 37: ref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #122 @260 RefTypeDef <Ivl:37> IND BB12 regmask=[allIntButFP] minReg=1 wt=278.53>

DefList: { N259.t114. IND }
N261 (???,???) [000228] ---XG------                         *  PUTARG_REG ref    REG rcx
<RefPosition #123 @261 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #124 @261 RefTypeUse <Ivl:37> BB12 regmask=[rcx] minReg=1 last fixed wt=69.63>
Interval 38: ref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #125 @262 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #126 @262 RefTypeDef <Ivl:38> PUTARG_REG BB12 regmask=[rcx] minReg=1 fixed wt=278.53>

DefList: { N261.t228. PUTARG_REG }
N263 (  3,  2) [000115] -----+-----                         *  LCL_VAR   byref  V23 loc19        u:2 NA REG NA $248

DefList: { N261.t228. PUTARG_REG }
N265 (???,???) [000229] -----------                         *  PUTARG_REG byref  REG rdx
<RefPosition #127 @265 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #128 @265 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[rdx] minReg=1 last fixed wt=84.82>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 39: byref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #129 @266 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #130 @266 RefTypeDef <Ivl:39> PUTARG_REG BB12 regmask=[rdx] minReg=1 fixed wt=278.53>
Assigning related <V23/L7> to <I39>

DefList: { N261.t228. PUTARG_REG; N265.t229. PUTARG_REG }
N267 (  3, 10) [000230] Hc---------                         *  CNS_INT(h) long   0x7fff6f084408 ftn REG NA
Contained
DefList: { N261.t228. PUTARG_REG; N265.t229. PUTARG_REG }
N269 (  5, 12) [000231] nc--G------                         *  IND       long   REG NA
Contained
DefList: { N261.t228. PUTARG_REG; N265.t229. PUTARG_REG }
N271 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void
<RefPosition #131 @271 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #132 @271 RefTypeUse <Ivl:38> BB12 regmask=[rcx] minReg=1 last fixed wt=69.63>
<RefPosition #133 @271 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #134 @271 RefTypeUse <Ivl:39> BB12 regmask=[rdx] minReg=1 last fixed wt=69.63>
<RefPosition #135 @272 RefTypeKill BB12 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>



CHECKING LAST USES for BB12, liveout={V01 V23}
==============================
use: {V00 V01 V07 V11 V15 V19 V23 V26 V27 V28 V29}
def: {}

NEW BLOCK BB13


Incoming EH boundary; <RefPosition #136 @273 RefTypeBB BB13 regmask=[] minReg=1 wt=0.00>

firstColdLoc = 275
DefList: {  }
N275 (  1,  1) [000081] -----+-----                         *  CATCH_ARG ref    REG NA $34d
Interval 40: ref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #137 @276 RefTypeFixedReg <Reg:rdx> BB13 regmask=[rdx] minReg=1 wt=0.00>
<RefPosition #138 @276 RefTypeDef <Ivl:40> CATCH_ARG BB13 regmask=[rdx] minReg=1 fixed wt=0.00>

DefList: { N275.t81. CATCH_ARG }
N277 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 NA REG NA $VN.Void
<RefPosition #139 @277 RefTypeUse <Ivl:40> BB13 regmask=[allIntButFP] minReg=1 last wt=0.00>
Assigning related <V31/L12> to <I40>
<RefPosition #140 @278 RefTypeDef <Ivl:12 V31> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last wt=0.00>

DefList: {  }
N279 (  3,  2) [000119] -----+-----                         *  LCL_VAR   ref    V31 tmp6         u:2 NA (last use) REG NA $34d

DefList: {  }
N281 (???,???) [000241] -----------                         *  PUTARG_REG ref    REG rcx
<RefPosition #141 @281 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #142 @281 RefTypeUse <Ivl:12 V31> LCL_VAR BB13 regmask=[rcx] minReg=1 last fixed wt=0.00>
Interval 41: ref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #143 @282 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #144 @282 RefTypeDef <Ivl:41> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed wt=0.00>

DefList: { N281.t241. PUTARG_REG }
N283 (  3, 10) [000242] Hc---------                         *  CNS_INT(h) long   0x7fff6d1fcf30 ftn REG NA
Contained
DefList: { N281.t241. PUTARG_REG }
N285 (  5, 12) [000243] nc--G------                         *  IND       long   REG NA
Contained
DefList: { N281.t241. PUTARG_REG }
N287 ( 17,  8) [000120] --CXG+-----                         *  CALL      ref    <unknown method> REG NA $34e
<RefPosition #145 @287 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #146 @287 RefTypeUse <Ivl:41> BB13 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #147 @288 RefTypeKill BB13 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
Interval 42: ref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #148 @288 RefTypeFixedReg <Reg:rax> BB13 regmask=[rax] minReg=1 wt=0.00>
<RefPosition #149 @288 RefTypeDef <Ivl:42> CALL BB13 regmask=[rax] minReg=1 fixed wt=0.00>

DefList: { N287.t120. CALL }
N289 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 NA REG NA $VN.Void
<RefPosition #150 @289 RefTypeUse <Ivl:42> BB13 regmask=[allIntButFP] minReg=1 last wt=0.00>



CHECKING LAST USES for BB13, liveout={V01 V05 V23}
==============================
use: {}
def: {V05 V31}

NEW BLOCK BB16


Setting BB11 as the predecessor for determining incoming variable registers of BB16
<RefPosition #151 @291 RefTypeBB BB16 regmask=[] minReg=1 wt=19.97>

DefList: {  }
N293 (  3,  2) [000122] -----+-----                         *  LCL_VAR   byref  V23 loc19        u:2 NA (last use) REG NA $248

DefList: {  }
N295 (???,???) [000235] -----------                         *  PUTARG_REG byref  REG rcx
<RefPosition #152 @295 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #153 @295 RefTypeUse <Ivl:7 V23> LCL_VAR BB16 regmask=[rcx] minReg=1 last fixed wt=84.82>
Interval 43: byref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #154 @296 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #155 @296 RefTypeDef <Ivl:43> PUTARG_REG BB16 regmask=[rcx] minReg=1 fixed wt=79.87>

DefList: { N295.t235. PUTARG_REG }
N297 (  3, 10) [000236] Hc---------                         *  CNS_INT(h) long   0x7fff6f084438 ftn REG NA
Contained
DefList: { N295.t235. PUTARG_REG }
N299 (  5, 12) [000237] nc--G------                         *  IND       long   REG NA
Contained
DefList: { N295.t235. PUTARG_REG }
N301 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void
<RefPosition #156 @301 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #157 @301 RefTypeUse <Ivl:43> BB16 regmask=[rcx] minReg=1 last fixed wt=19.97>
<RefPosition #158 @302 RefTypeKill BB16 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>

DefList: {  }
N303 (  1,  1) [000124] -----+-----                         *  LCL_VAR   long   V01 arg1         u:1 NA (last use) REG NA $c0

DefList: {  }
N305 (  1,  1) [000125] -c---+-N---                         *  CNS_INT   int    0 REG NA $40
Contained
DefList: {  }
N307 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
Interval 44: float RefPositions {} physReg:NA Preferences=[allFloat] Aversions=[]
<RefPosition #159 @307 RefTypeDef <Ivl:44 internal> STORE_BLK BB16 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=79.87>
<RefPosition #160 @307 RefTypeUse <Ivl:1 V01> LCL_VAR BB16 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=394.80>
<RefPosition #161 @307 RefTypeUse <Ivl:44 internal> STORE_BLK BB16 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=79.87>

DefList: {  }
N309 (  3,  2) [000128] -c---+-----                         *  LCL_VAR   ref    V05 loc1         u:4 NA REG NA $480
Contained
DefList: {  }
N311 (  1,  1) [000129] -c---+-----                         *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N313 (  5,  4) [000130] -----+-N---                         *  CMP       void   REG NA

DefList: {  }
N315 (  7,  6) [000131] -----+-----                         *  JCC       void   cond=UEQ REG NA



CHECKING LAST USES for BB16, liveout={V05}
==============================
use: {V01 V05 V23}
def: {}

NEW BLOCK BB17


Setting BB16 as the predecessor for determining incoming variable registers of BB17
<RefPosition #162 @317 RefTypeBB BB17 regmask=[] minReg=1 wt=0.00>

DefList: {  }
N319 (  3,  2) [000132] -----+-----                         *  LCL_VAR   ref    V05 loc1         u:4 NA (last use) REG NA $480
Interval 45: ref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #163 @320 RefTypeDef <Ivl:45> LCL_VAR BB17 regmask=[allIntButFP] minReg=1 wt=0.00>

DefList: { N319.t132. LCL_VAR }
N321 (???,???) [000238] -----------                         *  PUTARG_REG ref    REG rcx
<RefPosition #164 @321 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #165 @321 RefTypeUse <Ivl:45> BB17 regmask=[rcx] minReg=1 last fixed wt=0.00>
Interval 46: ref RefPositions {} physReg:NA Preferences=[allIntButFP] Aversions=[]
<RefPosition #166 @322 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #167 @322 RefTypeDef <Ivl:46> PUTARG_REG BB17 regmask=[rcx] minReg=1 fixed wt=0.00>

DefList: { N321.t238. PUTARG_REG }
N323 (  3, 10) [000239] Hc---------                         *  CNS_INT(h) long   0x7fff6d1fcf18 ftn REG NA
Contained
DefList: { N321.t238. PUTARG_REG }
N325 (  5, 12) [000240] nc--G------                         *  IND       long   REG NA
Contained
DefList: { N321.t238. PUTARG_REG }
N327 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this REG NA $VN.Void
<RefPosition #168 @327 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #169 @327 RefTypeUse <Ivl:46> BB17 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #170 @328 RefTypeKill BB17 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>



CHECKING LAST USES for BB17, liveout={}
==============================
use: {V05}
def: {}

NEW BLOCK BB14


Setting BB12 as the predecessor for determining incoming variable registers of BB14
<RefPosition #171 @329 RefTypeBB BB14 regmask=[] minReg=1 wt=79.22>

DefList: {  }
N331 (  0,  0) [000117] -----+-----                         *  RETURN    void   REG NA $VN.Void



CHECKING LAST USES for BB14, liveout={}
==============================
use: {}
def: {}

Linear scan intervals BEFORE VALIDATING INTERVALS:
Interval  0: (V00) byref RefPositions {#0@0 #6@11 #8@23 #18@37 #20@49 #32@67 #34@79 #46@97 #48@109 #96@207 #121@259} physReg:rcx Preferences=[rbx rsi rdi r12-r15] Aversions=[rax rcx rdx r8-r11 r16-r31]
Interval  1: (V01) long (SPILLED) (writeThru) RefPositions {#1@0 #16@33 #28@61 #42@91 #56@121 #60@129 #102@217 #160@307} physReg:rdx Preferences=[rdx] Aversions=[]
Interval  2: (V02) int RefPositions {#2@0 #64@137 #66@147 #68@157} physReg:r8 Preferences=[r8] Aversions=[]
Interval  3: (V07) byref RefPositions {#17@34 #70@165 #106@225} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval  4: (V11) byref RefPositions {#31@64 #74@173 #110@233} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval  5: (V15) byref RefPositions {#45@94 #78@181 #114@241} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval  6: (V19) byref RefPositions {#59@124 #84@193 #117@249} physReg:NA Preferences=[rax rcx rdx rbx rsi rdi r8-r15] Aversions=[]
Interval  7: (V23) byref (SPILLED) (writeThru) RefPositions {#63@132 #87@197 #120@255 #128@265 #153@295} physReg:NA Preferences=[rcx] Aversions=[]
Interval  8: (V26) byref RefPositions {#7@12 #10@25 #11@27 #15@30 #72@169 #104@221} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <I15>
Interval  9: (V27) byref RefPositions {#19@38 #22@51 #23@53 #27@56 #76@177 #108@229} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <I17>
Interval 10: (V28) byref RefPositions {#33@68 #36@81 #37@83 #41@86 #80@185 #112@237} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <I20>
Interval 11: (V29) byref RefPositions {#47@98 #50@111 #51@113 #55@116 #83@193 #118@249} physReg:NA Preferences=[rax rcx rdx rbx rsi rdi r8-r15] Aversions=[] RelatedInterval <I23>
Interval 12: (V31) ref RefPositions {#140@278 #142@281} physReg:NA Preferences=[rcx] Aversions=[]
Interval 13: ref (constant) RefPositions {#4@6 #5@7} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 14: byref RefPositions {#9@24 #12@27} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 15: byref RefPositions {#13@28 #14@29} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V26/L8>
Interval 16: byref RefPositions {#21@50 #24@53} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 17: byref RefPositions {#25@54 #26@55} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V27/L9>
Interval 18: long RefPositions {#29@62 #30@63} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V11/L4>
Interval 19: byref RefPositions {#35@80 #38@83} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 20: byref RefPositions {#39@84 #40@85} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V28/L10>
Interval 21: long RefPositions {#43@92 #44@93} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V15/L5>
Interval 22: byref RefPositions {#49@110 #52@113} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 23: byref RefPositions {#53@114 #54@115} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V29/L11>
Interval 24: long RefPositions {#57@122 #58@123} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V19/L6>
Interval 25: long RefPositions {#61@130 #62@131} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V23/L7>
Interval 26: int RefPositions {#71@166 #73@169} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 27: int RefPositions {#75@174 #77@177} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 28: int RefPositions {#79@182 #81@185} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 29: float (INTERNAL) RefPositions {#82@193 #85@193} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 30: byref RefPositions {#89@198 #91@203} physReg:NA Preferences=[rcx] Aversions=[]
Interval 31: ref (def-use conflict) RefPositions {#94@204 #98@207} physReg:NA Preferences=[rax rdx] Aversions=[]
Interval 32: float (INTERNAL) RefPositions {#101@217 #103@217} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 33: int RefPositions {#105@222 #107@225} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 34: int RefPositions {#109@230 #111@233} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 35: int RefPositions {#113@238 #115@241} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 36: float (INTERNAL) RefPositions {#116@249 #119@249} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 37: ref RefPositions {#122@260 #124@261} physReg:NA Preferences=[rcx] Aversions=[]
Interval 38: ref RefPositions {#126@262 #132@271} physReg:NA Preferences=[rcx] Aversions=[]
Interval 39: byref (specialPutArg) RefPositions {#130@266 #134@271} physReg:NA Preferences=[rdx] Aversions=[] RelatedInterval <V23/L7>
Interval 40: ref RefPositions {#138@276 #139@277} physReg:NA Preferences=[rdx] Aversions=[] RelatedInterval <V31/L12>
Interval 41: ref RefPositions {#144@282 #146@287} physReg:NA Preferences=[rcx] Aversions=[]
Interval 42: ref RefPositions {#149@288 #150@289} physReg:NA Preferences=[rax] Aversions=[]
Interval 43: byref RefPositions {#155@296 #157@301} physReg:NA Preferences=[rcx] Aversions=[]
Interval 44: float (INTERNAL) RefPositions {#159@307 #161@307} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 45: ref RefPositions {#163@320 #165@321} physReg:NA Preferences=[rcx] Aversions=[]
Interval 46: ref RefPositions {#167@322 #169@327} physReg:NA Preferences=[rcx] Aversions=[]

------------
REFPOSITIONS BEFORE VALIDATING INTERVALS: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[rcx] minReg=1 fixed regOptional wt=100.00>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[rdx] minReg=1 fixed regOptional wt=100.00>
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02> BB00 regmask=[r8] minReg=1 fixed regOptional wt=100.00>
<RefPosition #3   @1   RefTypeBB BB01 regmask=[] minReg=1 wt=100.00>
<RefPosition #4   @6   RefTypeDef <Ivl:13> CNS_INT BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #5   @7   RefTypeUse <Ivl:13> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #6   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #7   @12  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #8   @23  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #9   @24  RefTypeDef <Ivl:14> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #10  @25  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #11  @27  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #12  @27  RefTypeUse <Ivl:14> BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=100.00>
<RefPosition #13  @28  RefTypeDef <Ivl:15> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #14  @29  RefTypeUse <Ivl:15> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #15  @30  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #16  @33  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #17  @34  RefTypeDef <Ivl:3 V07> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #18  @37  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #19  @38  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #20  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #21  @50  RefTypeDef <Ivl:16> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #22  @51  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #23  @53  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #24  @53  RefTypeUse <Ivl:16> BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=100.00>
<RefPosition #25  @54  RefTypeDef <Ivl:17> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #26  @55  RefTypeUse <Ivl:17> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #27  @56  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #28  @61  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #29  @62  RefTypeDef <Ivl:18> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #30  @63  RefTypeUse <Ivl:18> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #31  @64  RefTypeDef <Ivl:4 V11> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #32  @67  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #33  @68  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #34  @79  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #35  @80  RefTypeDef <Ivl:19> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #36  @81  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #37  @83  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #38  @83  RefTypeUse <Ivl:19> BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=100.00>
<RefPosition #39  @84  RefTypeDef <Ivl:20> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #40  @85  RefTypeUse <Ivl:20> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #41  @86  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #42  @91  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #43  @92  RefTypeDef <Ivl:21> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #44  @93  RefTypeUse <Ivl:21> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #45  @94  RefTypeDef <Ivl:5 V15> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #46  @97  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #47  @98  RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #48  @109 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #49  @110 RefTypeDef <Ivl:22> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #50  @111 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #51  @113 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #52  @113 RefTypeUse <Ivl:22> BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=100.00>
<RefPosition #53  @114 RefTypeDef <Ivl:23> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #54  @115 RefTypeUse <Ivl:23> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #55  @116 RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #56  @121 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #57  @122 RefTypeDef <Ivl:24> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #58  @123 RefTypeUse <Ivl:24> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #59  @124 RefTypeDef <Ivl:6 V19> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #60  @129 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #61  @130 RefTypeDef <Ivl:25> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #62  @131 RefTypeUse <Ivl:25> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #63  @132 RefTypeDef <Ivl:7 V23> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=84.82>
<RefPosition #64  @137 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=393.60>
<RefPosition #65  @141 RefTypeBB BB10 regmask=[] minReg=1 wt=52.00>
<RefPosition #66  @147 RefTypeUse <Ivl:2 V02> LCL_VAR BB10 regmask=[allIntButFP] minReg=1 regOptional wt=393.60>
<RefPosition #67  @151 RefTypeBB BB11 regmask=[] minReg=1 wt=41.60>
<RefPosition #68  @157 RefTypeUse <Ivl:2 V02> LCL_VAR BB11 regmask=[allIntButFP] minReg=1 last regOptional wt=393.60>
<RefPosition #69  @161 RefTypeBB BB15 regmask=[] minReg=1 wt=10.40>
<RefPosition #70  @165 RefTypeUse <Ivl:3 V07> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #71  @166 RefTypeDef <Ivl:26> IND BB15 regmask=[allIntButFP] minReg=1 wt=41.60>
<RefPosition #72  @169 RefTypeUse <Ivl:8 V26> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #73  @169 RefTypeUse <Ivl:26> BB15 regmask=[allIntButFP] minReg=1 last wt=10.40>
<RefPosition #74  @173 RefTypeUse <Ivl:4 V11> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #75  @174 RefTypeDef <Ivl:27> IND BB15 regmask=[allIntButFP] minReg=1 wt=41.60>
<RefPosition #76  @177 RefTypeUse <Ivl:9 V27> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #77  @177 RefTypeUse <Ivl:27> BB15 regmask=[allIntButFP] minReg=1 last wt=10.40>
<RefPosition #78  @181 RefTypeUse <Ivl:5 V15> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #79  @182 RefTypeDef <Ivl:28> IND BB15 regmask=[allIntButFP] minReg=1 wt=41.60>
<RefPosition #80  @185 RefTypeUse <Ivl:10 V28> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #81  @185 RefTypeUse <Ivl:28> BB15 regmask=[allIntButFP] minReg=1 last wt=10.40>
<RefPosition #82  @193 RefTypeDef <Ivl:29 internal> STORE_BLK BB15 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=41.60>
<RefPosition #83  @193 RefTypeUse <Ivl:11 V29> LCL_VAR BB15 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=480.03>
<RefPosition #84  @193 RefTypeUse <Ivl:6 V19> LCL_VAR BB15 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=180.03>
<RefPosition #85  @193 RefTypeUse <Ivl:29 internal> STORE_BLK BB15 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=41.60>
<RefPosition #86  @197 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #87  @197 RefTypeUse <Ivl:7 V23> LCL_VAR BB15 regmask=[rcx] minReg=1 last fixed wt=84.82>
<RefPosition #88  @198 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #89  @198 RefTypeDef <Ivl:30> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed wt=41.60>
<RefPosition #90  @203 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #91  @203 RefTypeUse <Ivl:30> BB15 regmask=[rcx] minReg=1 last fixed wt=10.40>
<RefPosition #92  @204 RefTypeKill BB15 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #93  @204 RefTypeFixedReg <Reg:rax> BB15 regmask=[rax] minReg=1 wt=10.40>
<RefPosition #94  @204 RefTypeDef <Ivl:31> CALL BB15 regmask=[rax] minReg=1 fixed wt=41.60>
<RefPosition #95  @207 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #96  @207 RefTypeUse <Ivl:0 V00> LCL_VAR BB15 regmask=[rcx] minReg=1 last fixed wt=1080.03>
<RefPosition #97  @207 RefTypeFixedReg <Reg:rdx> BB15 regmask=[rdx] minReg=1 wt=10.40>
<RefPosition #98  @207 RefTypeUse <Ivl:31> BB15 regmask=[rdx] minReg=1 last fixed wt=10.40>
<RefPosition #99  @208 RefTypeKill BB15 regmask=[rax rcx rdx r8-r11 r16-r31 mm0-mm5 mm16-mm31 k1-k7] minReg=1>
<RefPosition #100 @211 RefTypeBB BB12 regmask=[] minReg=1 wt=69.63>
<RefPosition #101 @217 RefTypeDef <Ivl:32 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=278.53>
<RefPosition #102 @217 RefTypeUse <Ivl:1 V01> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 wt=394.80>
<RefPosition #103 @217 RefTypeUse <Ivl:32 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=278.53>
<RefPosition #104 @221 RefTypeUse <Ivl:8 V26> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #105 @222 RefTypeDef <Ivl:33> IND BB12 regmask=[allIntButFP] minReg=1 wt=278.53>
<RefPosition #106 @225 RefTypeUse <Ivl:3 V07> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #107 @225 RefTypeUse <Ivl:33> BB12 regmask=[allIntButFP] minReg=1 last wt=69.63>
<RefPosition #108 @229 RefTypeUse <Ivl:9 V27> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #109 @230 RefTypeDef <Ivl:34> IND BB12 regmask=[allIntButFP] minReg=1 wt=278.53>
<RefPosition #110 @233 RefTypeUse <Ivl:4 V11> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #111 @233 RefTypeUse <Ivl:34> BB12 regmask=[allIntButFP] minReg=1 last wt=69.63>
<RefPosition #112 @237 RefTypeUse <Ivl:10 V28> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #113 @238 RefTypeDef <Ivl:35> IND BB12 regmask=[allIntButFP] minReg=1 wt=278.53>
<RefPosition #114 @241 RefTypeUse <Ivl:5 V15> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #115 @241 RefTypeUse <Ivl:35> BB12 regmask=[allIntButFP] minReg=1 last wt=69.63>
<RefPosition #116 @249 RefTypeDef <Ivl:36 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=278.53>
<RefPosition #117 @249 RefTypeUse <Ivl:6 V19> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=180.03>
<RefPosition #118 @249 RefTypeUse <Ivl:11 V29> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=480.03>
<RefPosition #119 @249 RefTypeUse <Ivl:36 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=278.53>
<RefPosition #120 @255 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 wt=84.82>
<RefPosition #121 @259 RefTypeUse <Ivl:0 V00> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=1080.03>
<RefPosition #122 @260 RefTypeDef <Ivl:37> IND BB12 regmask=[rcx] minReg=1 wt=278.53>
<RefPosition #123 @261 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #124 @261 RefTypeUse <Ivl:37> BB12 regmask=[rcx] minReg=1 last fixed wt=69.63>
<RefPosition #125 @262 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #126 @262 RefTypeDef <Ivl:38> PUTARG_REG BB12 regmask=[rcx] minReg=1 fixed wt=278.53>
<RefPosition #127 @265 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #128 @265 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[rdx] minReg=1 fixed wt=84.82>
<RefPosition #129 @266 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #130 @266 RefTypeDef <Ivl:39> PUTARG_REG BB12 regmask=[rdx] minReg=1 fixed wt=278.53>
<RefPosition #131 @271 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #132 @271 RefTypeUse <Ivl:38> BB12 regmask=[rcx] minReg=1 last fixed wt=69.63>
<RefPosition #133 @271 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #134 @271 RefTypeUse <Ivl:39> BB12 regmask=[rdx] minReg=1 last fixed wt=69.63>
<RefPosition #135 @272 RefTypeKill BB12 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #136 @273 RefTypeBB BB13 regmask=[] minReg=1 wt=0.00>
<RefPosition #137 @276 RefTypeFixedReg <Reg:rdx> BB13 regmask=[rdx] minReg=1 wt=0.00>
<RefPosition #138 @276 RefTypeDef <Ivl:40> CATCH_ARG BB13 regmask=[rdx] minReg=1 fixed wt=0.00>
<RefPosition #139 @277 RefTypeUse <Ivl:40> BB13 regmask=[allIntButFP] minReg=1 last wt=0.00>
<RefPosition #140 @278 RefTypeDef <Ivl:12 V31> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1 wt=0.00>
<RefPosition #141 @281 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #142 @281 RefTypeUse <Ivl:12 V31> LCL_VAR BB13 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #143 @282 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #144 @282 RefTypeDef <Ivl:41> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed wt=0.00>
<RefPosition #145 @287 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #146 @287 RefTypeUse <Ivl:41> BB13 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #147 @288 RefTypeKill BB13 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #148 @288 RefTypeFixedReg <Reg:rax> BB13 regmask=[rax] minReg=1 wt=0.00>
<RefPosition #149 @288 RefTypeDef <Ivl:42> CALL BB13 regmask=[rax] minReg=1 fixed wt=0.00>
<RefPosition #150 @289 RefTypeUse <Ivl:42> BB13 regmask=[allIntButFP] minReg=1 last wt=0.00>
<RefPosition #151 @291 RefTypeBB BB16 regmask=[] minReg=1 wt=19.97>
<RefPosition #152 @295 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #153 @295 RefTypeUse <Ivl:7 V23> LCL_VAR BB16 regmask=[rcx] minReg=1 last fixed wt=84.82>
<RefPosition #154 @296 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #155 @296 RefTypeDef <Ivl:43> PUTARG_REG BB16 regmask=[rcx] minReg=1 fixed wt=79.87>
<RefPosition #156 @301 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #157 @301 RefTypeUse <Ivl:43> BB16 regmask=[rcx] minReg=1 last fixed wt=19.97>
<RefPosition #158 @302 RefTypeKill BB16 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #159 @307 RefTypeDef <Ivl:44 internal> STORE_BLK BB16 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=79.87>
<RefPosition #160 @307 RefTypeUse <Ivl:1 V01> LCL_VAR BB16 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=394.80>
<RefPosition #161 @307 RefTypeUse <Ivl:44 internal> STORE_BLK BB16 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=79.87>
<RefPosition #162 @317 RefTypeBB BB17 regmask=[] minReg=1 wt=0.00>
<RefPosition #163 @320 RefTypeDef <Ivl:45> LCL_VAR BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #164 @321 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #165 @321 RefTypeUse <Ivl:45> BB17 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #166 @322 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #167 @322 RefTypeDef <Ivl:46> PUTARG_REG BB17 regmask=[rcx] minReg=1 fixed wt=0.00>
<RefPosition #168 @327 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #169 @327 RefTypeUse <Ivl:46> BB17 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #170 @328 RefTypeKill BB17 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #171 @329 RefTypeBB BB14 regmask=[] minReg=1 wt=79.22>

------------
REFPOSITIONS DURING VALIDATE INTERVALS (RefPositions per interval)
------------

-----------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[rcx] minReg=1 fixed regOptional wt=100.00>
<RefPosition #6   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #8   @23  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #18  @37  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #20  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #32  @67  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #34  @79  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #46  @97  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #48  @109 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #96  @207 RefTypeUse <Ivl:0 V00> LCL_VAR BB15 regmask=[rcx] minReg=1 last fixed wt=1080.03>
<RefPosition #121 @259 RefTypeUse <Ivl:0 V00> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=1080.03>
-----------------
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[rdx] minReg=1 fixed regOptional wt=100.00>
<RefPosition #16  @33  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #28  @61  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #42  @91  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #56  @121 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #60  @129 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #102 @217 RefTypeUse <Ivl:1 V01> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 wt=394.80>
<RefPosition #160 @307 RefTypeUse <Ivl:1 V01> LCL_VAR BB16 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=394.80>
-----------------
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02> BB00 regmask=[r8] minReg=1 fixed regOptional wt=100.00>
<RefPosition #64  @137 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=393.60>
<RefPosition #66  @147 RefTypeUse <Ivl:2 V02> LCL_VAR BB10 regmask=[allIntButFP] minReg=1 regOptional wt=393.60>
<RefPosition #68  @157 RefTypeUse <Ivl:2 V02> LCL_VAR BB11 regmask=[allIntButFP] minReg=1 last regOptional wt=393.60>
-----------------
<RefPosition #7   @12  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #10  @25  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #11  @27  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #15  @30  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #72  @169 RefTypeUse <Ivl:8 V26> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #104 @221 RefTypeUse <Ivl:8 V26> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
-----------------
<RefPosition #19  @38  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #22  @51  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #23  @53  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #27  @56  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #76  @177 RefTypeUse <Ivl:9 V27> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #108 @229 RefTypeUse <Ivl:9 V27> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
-----------------
<RefPosition #33  @68  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #36  @81  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #37  @83  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #41  @86  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #80  @185 RefTypeUse <Ivl:10 V28> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #112 @237 RefTypeUse <Ivl:10 V28> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
-----------------
<RefPosition #47  @98  RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #50  @111 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #51  @113 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #55  @116 RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #83  @193 RefTypeUse <Ivl:11 V29> LCL_VAR BB15 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=480.03>
<RefPosition #118 @249 RefTypeUse <Ivl:11 V29> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=480.03>
-----------------
<RefPosition #17  @34  RefTypeDef <Ivl:3 V07> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #70  @165 RefTypeUse <Ivl:3 V07> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #106 @225 RefTypeUse <Ivl:3 V07> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
-----------------
<RefPosition #31  @64  RefTypeDef <Ivl:4 V11> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #74  @173 RefTypeUse <Ivl:4 V11> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #110 @233 RefTypeUse <Ivl:4 V11> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
-----------------
<RefPosition #45  @94  RefTypeDef <Ivl:5 V15> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #78  @181 RefTypeUse <Ivl:5 V15> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #114 @241 RefTypeUse <Ivl:5 V15> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
-----------------
<RefPosition #59  @124 RefTypeDef <Ivl:6 V19> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #84  @193 RefTypeUse <Ivl:6 V19> LCL_VAR BB15 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=180.03>
<RefPosition #117 @249 RefTypeUse <Ivl:6 V19> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=180.03>
-----------------
<RefPosition #63  @132 RefTypeDef <Ivl:7 V23> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=84.82>
<RefPosition #87  @197 RefTypeUse <Ivl:7 V23> LCL_VAR BB15 regmask=[rcx] minReg=1 last fixed wt=84.82>
<RefPosition #120 @255 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 wt=84.82>
<RefPosition #128 @265 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[rdx] minReg=1 fixed wt=84.82>
<RefPosition #153 @295 RefTypeUse <Ivl:7 V23> LCL_VAR BB16 regmask=[rcx] minReg=1 last fixed wt=84.82>
-----------------
<RefPosition #140 @278 RefTypeDef <Ivl:12 V31> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1 wt=0.00>
<RefPosition #142 @281 RefTypeUse <Ivl:12 V31> LCL_VAR BB13 regmask=[rcx] minReg=1 last fixed wt=0.00>
TUPLE STYLE DUMP WITH REF POSITIONS
Incoming Parameters:  V00 V01 V02
BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12}
=====
  N003.                    IL_OFFSET INLRT @ 0x000[E-]
  N005.                    CNS_INT   null
        Def:<I13>(#4)
  N007.                    V05 MEM
                               Use:<I13>(#5) *
  N009.                    V00(L0)
  N011.                    V26(L8)
                               Use:<V00/L0>(#6)
        Def:<V26/L8>(#7) Pref:<I15>
  N013.                    V26(L8)
  N015.                    CNS_INT   0
  N017.                    V26(L8)
  N019.                    V00(L0)
  N021.                    CNS_INT   8
  N023.                    ADD      
                               Use:<V00/L0>(#8)
        Def:<I14>(#9)
  N025.                    CMP      
                               Use:<V26/L8>(#10)
  N027.                    SELECTCC 
                               Use:<V26/L8>(#11) *
                               Use:<I14>(#12) *
        Def:<I15>(#13) Pref:<V26/L8>
  N029.                    V26(L8)
                               Use:<I15>(#14) *
        Def:<V26/L8>(#15) Pref:<I15>
  N031.                    V01(L1)
  N033.                    V07(L3)
                               Use:<V01/L1>(#16)
        Def:<V07/L3>(#17)
  N035.                    V00(L0)
  N037.                    V27(L9)
                               Use:<V00/L0>(#18)
        Def:<V27/L9>(#19) Pref:<I17>
  N039.                    V27(L9)
  N041.                    CNS_INT   0
  N043.                    V27(L9)
  N045.                    V00(L0)
  N047.                    CNS_INT   12
  N049.                    ADD      
                               Use:<V00/L0>(#20)
        Def:<I16>(#21)
  N051.                    CMP      
                               Use:<V27/L9>(#22)
  N053.                    SELECTCC 
                               Use:<V27/L9>(#23) *
                               Use:<I16>(#24) *
        Def:<I17>(#25) Pref:<V27/L9>
  N055.                    V27(L9)
                               Use:<I17>(#26) *
        Def:<V27/L9>(#27) Pref:<I17>
  N057.                    V01(L1)
  N059.                    CNS_INT   4
  N061.                    ADD      
                               Use:<V01/L1>(#28)
        Def:<I18>(#29) Pref:<V11/L4>
  N063.                    V11(L4)
                               Use:<I18>(#30) *
        Def:<V11/L4>(#31)
  N065.                    V00(L0)
  N067.                    V28(L10)
                               Use:<V00/L0>(#32)
        Def:<V28/L10>(#33) Pref:<I20>
  N069.                    V28(L10)
  N071.                    CNS_INT   0
  N073.                    V28(L10)
  N075.                    V00(L0)
  N077.                    CNS_INT   16
  N079.                    ADD      
                               Use:<V00/L0>(#34)
        Def:<I19>(#35)
  N081.                    CMP      
                               Use:<V28/L10>(#36)
  N083.                    SELECTCC 
                               Use:<V28/L10>(#37) *
                               Use:<I19>(#38) *
        Def:<I20>(#39) Pref:<V28/L10>
  N085.                    V28(L10)
                               Use:<I20>(#40) *
        Def:<V28/L10>(#41) Pref:<I20>
  N087.                    V01(L1)
  N089.                    CNS_INT   8
  N091.                    ADD      
                               Use:<V01/L1>(#42)
        Def:<I21>(#43) Pref:<V15/L5>
  N093.                    V15(L5)
                               Use:<I21>(#44) *
        Def:<V15/L5>(#45)
  N095.                    V00(L0)
  N097.                    V29(L11)
                               Use:<V00/L0>(#46)
        Def:<V29/L11>(#47) Pref:<I23>
  N099.                    V29(L11)
  N101.                    CNS_INT   0
  N103.                    V29(L11)
  N105.                    V00(L0)
  N107.                    CNS_INT   24
  N109.                    ADD      
                               Use:<V00/L0>(#48)
        Def:<I22>(#49)
  N111.                    CMP      
                               Use:<V29/L11>(#50)
  N113.                    SELECTCC 
                               Use:<V29/L11>(#51) *
                               Use:<I22>(#52) *
        Def:<I23>(#53) Pref:<V29/L11>
  N115.                    V29(L11)
                               Use:<I23>(#54) *
        Def:<V29/L11>(#55) Pref:<I23>
  N117.                    V01(L1)
  N119.                    CNS_INT   16
  N121.                    ADD      
                               Use:<V01/L1>(#56)
        Def:<I24>(#57) Pref:<V19/L6>
  N123.                    V19(L6)
                               Use:<I24>(#58) *
        Def:<V19/L6>(#59)
  N125.                    V01(L1)
  N127.                    CNS_INT   48
  N129.                    ADD      
                               Use:<V01/L1>(#60)
        Def:<I25>(#61) Pref:<V23/L7>
  N131.                    V23(L7)
                               Use:<I25>(#62) *
        Def:<V23/L7>(#63)
  N133.                    V02(L2)
  N135.                    CNS_INT   0
  N137.                    CMP      
                               Use:<V02/L2>(#64)
  N139.                    JCC       cond=UEQ

BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15}
=====
  N143.                    V02(L2)
  N145.                    CNS_INT   1
  N147.                    CMP      
                               Use:<V02/L2>(#66)
  N149.                    JCC       cond=UEQ

BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
=====
  N153.                    V02(L2)
  N155.                    CNS_INT   2
  N157.                    CMP      
                               Use:<V02/L2>(#68) *
  N159.                    JCC       cond=UEQ

BB15 [0017] [104..166) (return), preds={BB10} succs={}
=====
  N163.                    V07(L3)
  N165.                    IND      
                               Use:<V07/L3>(#70) *
        Def:<I26>(#71)
  N167.                    V26(L8)
  N169.                    STOREIND 
                               Use:<V26/L8>(#72) *
                               Use:<I26>(#73) *
  N171.                    V11(L4)
  N173.                    IND      
                               Use:<V11/L4>(#74) *
        Def:<I27>(#75)
  N175.                    V27(L9)
  N177.                    STOREIND 
                               Use:<V27/L9>(#76) *
                               Use:<I27>(#77) *
  N179.                    V15(L5)
  N181.                    IND      
                               Use:<V15/L5>(#78) *
        Def:<I28>(#79)
  N183.                    V28(L10)
  N185.                    STOREIND 
                               Use:<V28/L10>(#80) *
                               Use:<I28>(#81) *
  N187.                    V19(L6)
  N189.                    IND      
  N191.                    V29(L11)
  N193.                    STORE_BLK
        Def:<T29>(#82)
                               Use:<V29/L11>(#83) *
                               Use:<V19/L6>(#84) *
                               Use:<T29>(#85) *
  N195.                    V23(L7)
  N197.                    PUTARG_REG
                               Use:<V23/L7>(#87) Fixed:rcx(#86) *
        Def:<I30>(#89) rcx
  N199.                    CNS_INT(h) 0x7fff6f084420 ftn
  N201.                    IND      
  N203.                    CALL     
                               Use:<I30>(#91) Fixed:rcx(#90) *
        Kill: [rax rcx rdx r8-r11 r16-r31] 
        Def:<I31>(#94) rax
  N205.                    V00(L0)
  N207.                    STOREIND 
                               Use:<V00/L0>(#96) Fixed:rcx(#95) *
                               Use:<I31>(#98) Fixed:rdx(#97) *
        Kill: [rax rcx rdx r8-r11 r16-r31 mm0-mm5 mm16-mm31 k1-k7] 
  N209.                    RETURN   

BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14}
=====
  N213.                    V01(L1)
  N215.                    CNS_INT   0
  N217.                    STORE_BLK
        Def:<T32>(#101)
                               Use:<V01/L1>(#102)
                               Use:<T32>(#103) *
  N219.                    V26(L8)
  N221.                    IND      
                               Use:<V26/L8>(#104) *
        Def:<I33>(#105)
  N223.                    V07(L3)
  N225.                    STOREIND 
                               Use:<V07/L3>(#106) *
                               Use:<I33>(#107) *
  N227.                    V27(L9)
  N229.                    IND      
                               Use:<V27/L9>(#108) *
        Def:<I34>(#109)
  N231.                    V11(L4)
  N233.                    STOREIND 
                               Use:<V11/L4>(#110) *
                               Use:<I34>(#111) *
  N235.                    V28(L10)
  N237.                    IND      
                               Use:<V28/L10>(#112) *
        Def:<I35>(#113)
  N239.                    V15(L5)
  N241.                    STOREIND 
                               Use:<V15/L5>(#114) *
                               Use:<I35>(#115) *
  N243.                    V29(L11)
  N245.                    IND      
  N247.                    V19(L6)
  N249.                    STORE_BLK
        Def:<T36>(#116)
                               Use:<V19/L6>(#117) *
                               Use:<V29/L11>(#118) *
                               Use:<T36>(#119) *
  N251.                    V23(L7)
  N253.                    CNS_INT   0
  N255.                    STOREIND 
                               Use:<V23/L7>(#120)
  N257.                    V00(L0)
  N259.                    IND      
                               Use:<V00/L0>(#121) *
        Def:<I37>(#122)
  N261.                    PUTARG_REG
                               Use:<I37>(#124) Fixed:rcx(#123) *
        Def:<I38>(#126) rcx
  N263.                    V23(L7)
  N265.                    PUTARG_REG
                               Use:<V23/L7>(#128) Fixed:rdx(#127)
        Def:<I39>(#130) rdx Pref:<V23/L7>
  N267.                    CNS_INT(h) 0x7fff6f084408 ftn
  N269.                    IND      
  N271.                    CALL     
                               Use:<I38>(#132) Fixed:rcx(#131) *
                               Use:<I39>(#134) Fixed:rdx(#133) *
        Kill: [rax rcx rdx r8-r11 r16-r31] 

BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
=====
  N275.                    CATCH_ARG
        Def:<I40>(#138) rdx Pref:<V31/L12>
  N277.                    V31(L12)
                               Use:<I40>(#139) *
        Def:<V31/L12>(#140)
  N279.                    V31(L12)
  N281.                    PUTARG_REG
                               Use:<V31/L12>(#142) Fixed:rcx(#141) *
        Def:<I41>(#144) rcx
  N283.                    CNS_INT(h) 0x7fff6d1fcf30 ftn
  N285.                    IND      
  N287.                    CALL     
                               Use:<I41>(#146) Fixed:rcx(#145) *
        Kill: [rax rcx rdx r8-r11 r16-r31] 
        Def:<I42>(#149) rax
  N289.                    V05 MEM
                               Use:<I42>(#150) *

BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
=====
  N293.                    V23(L7)
  N295.                    PUTARG_REG
                               Use:<V23/L7>(#153) Fixed:rcx(#152) *
        Def:<I43>(#155) rcx
  N297.                    CNS_INT(h) 0x7fff6f084438 ftn
  N299.                    IND      
  N301.                    CALL     
                               Use:<I43>(#157) Fixed:rcx(#156) *
        Kill: [rax rcx rdx r8-r11 r16-r31] 
  N303.                    V01(L1)
  N305.                    CNS_INT   0
  N307.                    STORE_BLK
        Def:<T44>(#159)
                               Use:<V01/L1>(#160) *
                               Use:<T44>(#161) *
  N309.                    V05 MEM
  N311.                    CNS_INT   null
  N313.                    CMP      
  N315.                    JCC       cond=UEQ

BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
=====
  N319.                    V05 MEM
        Def:<I45>(#163)
  N321.                    PUTARG_REG
                               Use:<I45>(#165) Fixed:rcx(#164) *
        Def:<I46>(#167) rcx
  N323.                    CNS_INT(h) 0x7fff6d1fcf18 ftn
  N325.                    IND      
  N327.                    CALL     
                               Use:<I46>(#169) Fixed:rcx(#168) *
        Kill: [rax rcx rdx r8-r11 r16-r31] 

BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
=====
  N331.                    RETURN   




Linear scan intervals after buildIntervals:
Interval  0: (V00) byref RefPositions {#0@0 #6@11 #8@23 #18@37 #20@49 #32@67 #34@79 #46@97 #48@109 #96@207 #121@259} physReg:rcx Preferences=[rbx rsi rdi r12-r15] Aversions=[rax rcx rdx r8-r11 r16-r31]
Interval  1: (V01) long (SPILLED) (writeThru) RefPositions {#1@0 #16@33 #28@61 #42@91 #56@121 #60@129 #102@217 #160@307} physReg:rdx Preferences=[rdx] Aversions=[]
Interval  2: (V02) int RefPositions {#2@0 #64@137 #66@147 #68@157} physReg:r8 Preferences=[r8] Aversions=[]
Interval  3: (V07) byref RefPositions {#17@34 #70@165 #106@225} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval  4: (V11) byref RefPositions {#31@64 #74@173 #110@233} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval  5: (V15) byref RefPositions {#45@94 #78@181 #114@241} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval  6: (V19) byref RefPositions {#59@124 #84@193 #117@249} physReg:NA Preferences=[rax rcx rdx rbx rsi rdi r8-r15] Aversions=[]
Interval  7: (V23) byref (SPILLED) (writeThru) RefPositions {#63@132 #87@197 #120@255 #128@265 #153@295} physReg:NA Preferences=[rcx] Aversions=[]
Interval  8: (V26) byref RefPositions {#7@12 #10@25 #11@27 #15@30 #72@169 #104@221} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <I15>
Interval  9: (V27) byref RefPositions {#19@38 #22@51 #23@53 #27@56 #76@177 #108@229} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <I17>
Interval 10: (V28) byref RefPositions {#33@68 #36@81 #37@83 #41@86 #80@185 #112@237} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <I20>
Interval 11: (V29) byref RefPositions {#47@98 #50@111 #51@113 #55@116 #83@193 #118@249} physReg:NA Preferences=[rax rcx rdx rbx rsi rdi r8-r15] Aversions=[] RelatedInterval <I23>
Interval 12: (V31) ref RefPositions {#140@278 #142@281} physReg:NA Preferences=[rcx] Aversions=[]
Interval 13: ref (constant) RefPositions {#4@6 #5@7} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 14: byref RefPositions {#9@24 #12@27} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 15: byref RefPositions {#13@28 #14@29} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V26/L8>
Interval 16: byref RefPositions {#21@50 #24@53} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 17: byref RefPositions {#25@54 #26@55} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V27/L9>
Interval 18: long RefPositions {#29@62 #30@63} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V11/L4>
Interval 19: byref RefPositions {#35@80 #38@83} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 20: byref RefPositions {#39@84 #40@85} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V28/L10>
Interval 21: long RefPositions {#43@92 #44@93} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V15/L5>
Interval 22: byref RefPositions {#49@110 #52@113} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 23: byref RefPositions {#53@114 #54@115} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V29/L11>
Interval 24: long RefPositions {#57@122 #58@123} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V19/L6>
Interval 25: long RefPositions {#61@130 #62@131} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V23/L7>
Interval 26: int RefPositions {#71@166 #73@169} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 27: int RefPositions {#75@174 #77@177} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 28: int RefPositions {#79@182 #81@185} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 29: float (INTERNAL) RefPositions {#82@193 #85@193} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 30: byref RefPositions {#89@198 #91@203} physReg:NA Preferences=[rcx] Aversions=[]
Interval 31: ref (def-use conflict) RefPositions {#94@204 #98@207} physReg:NA Preferences=[rax rdx] Aversions=[]
Interval 32: float (INTERNAL) RefPositions {#101@217 #103@217} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 33: int RefPositions {#105@222 #107@225} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 34: int RefPositions {#109@230 #111@233} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 35: int RefPositions {#113@238 #115@241} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 36: float (INTERNAL) RefPositions {#116@249 #119@249} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 37: ref RefPositions {#122@260 #124@261} physReg:NA Preferences=[rcx] Aversions=[]
Interval 38: ref RefPositions {#126@262 #132@271} physReg:NA Preferences=[rcx] Aversions=[]
Interval 39: byref (specialPutArg) RefPositions {#130@266 #134@271} physReg:NA Preferences=[rdx] Aversions=[] RelatedInterval <V23/L7>
Interval 40: ref RefPositions {#138@276 #139@277} physReg:NA Preferences=[rdx] Aversions=[] RelatedInterval <V31/L12>
Interval 41: ref RefPositions {#144@282 #146@287} physReg:NA Preferences=[rcx] Aversions=[]
Interval 42: ref RefPositions {#149@288 #150@289} physReg:NA Preferences=[rax] Aversions=[]
Interval 43: byref RefPositions {#155@296 #157@301} physReg:NA Preferences=[rcx] Aversions=[]
Interval 44: float (INTERNAL) RefPositions {#159@307 #161@307} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 45: ref RefPositions {#163@320 #165@321} physReg:NA Preferences=[rcx] Aversions=[]
Interval 46: ref RefPositions {#167@322 #169@327} physReg:NA Preferences=[rcx] Aversions=[]

*************** In LinearScan::allocateRegisters()

Linear scan intervals before allocateRegisters:
Interval  0: (V00) byref RefPositions {#0@0 #6@11 #8@23 #18@37 #20@49 #32@67 #34@79 #46@97 #48@109 #96@207 #121@259} physReg:rcx Preferences=[rbx rsi rdi r12-r15] Aversions=[rax rcx rdx r8-r11 r16-r31]
Interval  1: (V01) long (SPILLED) (writeThru) RefPositions {#1@0 #16@33 #28@61 #42@91 #56@121 #60@129 #102@217 #160@307} physReg:rdx Preferences=[rdx] Aversions=[]
Interval  2: (V02) int RefPositions {#2@0 #64@137 #66@147 #68@157} physReg:r8 Preferences=[r8] Aversions=[]
Interval  3: (V07) byref RefPositions {#17@34 #70@165 #106@225} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval  4: (V11) byref RefPositions {#31@64 #74@173 #110@233} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval  5: (V15) byref RefPositions {#45@94 #78@181 #114@241} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval  6: (V19) byref RefPositions {#59@124 #84@193 #117@249} physReg:NA Preferences=[rax rcx rdx rbx rsi rdi r8-r15] Aversions=[]
Interval  7: (V23) byref (SPILLED) (writeThru) RefPositions {#63@132 #87@197 #120@255 #128@265 #153@295} physReg:NA Preferences=[rcx] Aversions=[]
Interval  8: (V26) byref RefPositions {#7@12 #10@25 #11@27 #15@30 #72@169 #104@221} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <I15>
Interval  9: (V27) byref RefPositions {#19@38 #22@51 #23@53 #27@56 #76@177 #108@229} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <I17>
Interval 10: (V28) byref RefPositions {#33@68 #36@81 #37@83 #41@86 #80@185 #112@237} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <I20>
Interval 11: (V29) byref RefPositions {#47@98 #50@111 #51@113 #55@116 #83@193 #118@249} physReg:NA Preferences=[rax rcx rdx rbx rsi rdi r8-r15] Aversions=[] RelatedInterval <I23>
Interval 12: (V31) ref RefPositions {#140@278 #142@281} physReg:NA Preferences=[rcx] Aversions=[]
Interval 13: ref (constant) RefPositions {#4@6 #5@7} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 14: byref RefPositions {#9@24 #12@27} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 15: byref RefPositions {#13@28 #14@29} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V26/L8>
Interval 16: byref RefPositions {#21@50 #24@53} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 17: byref RefPositions {#25@54 #26@55} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V27/L9>
Interval 18: long RefPositions {#29@62 #30@63} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V11/L4>
Interval 19: byref RefPositions {#35@80 #38@83} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 20: byref RefPositions {#39@84 #40@85} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V28/L10>
Interval 21: long RefPositions {#43@92 #44@93} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V15/L5>
Interval 22: byref RefPositions {#49@110 #52@113} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 23: byref RefPositions {#53@114 #54@115} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V29/L11>
Interval 24: long RefPositions {#57@122 #58@123} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V19/L6>
Interval 25: long RefPositions {#61@130 #62@131} physReg:NA Preferences=[allIntButFP] Aversions=[] RelatedInterval <V23/L7>
Interval 26: int RefPositions {#71@166 #73@169} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 27: int RefPositions {#75@174 #77@177} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 28: int RefPositions {#79@182 #81@185} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 29: float (INTERNAL) RefPositions {#82@193 #85@193} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 30: byref RefPositions {#89@198 #91@203} physReg:NA Preferences=[rcx] Aversions=[]
Interval 31: ref (def-use conflict) RefPositions {#94@204 #98@207} physReg:NA Preferences=[rax rdx] Aversions=[]
Interval 32: float (INTERNAL) RefPositions {#101@217 #103@217} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 33: int RefPositions {#105@222 #107@225} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 34: int RefPositions {#109@230 #111@233} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 35: int RefPositions {#113@238 #115@241} physReg:NA Preferences=[allIntButFP] Aversions=[]
Interval 36: float (INTERNAL) RefPositions {#116@249 #119@249} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 37: ref RefPositions {#122@260 #124@261} physReg:NA Preferences=[rcx] Aversions=[]
Interval 38: ref RefPositions {#126@262 #132@271} physReg:NA Preferences=[rcx] Aversions=[]
Interval 39: byref (specialPutArg) RefPositions {#130@266 #134@271} physReg:NA Preferences=[rdx] Aversions=[] RelatedInterval <V23/L7>
Interval 40: ref RefPositions {#138@276 #139@277} physReg:NA Preferences=[rdx] Aversions=[] RelatedInterval <V31/L12>
Interval 41: ref RefPositions {#144@282 #146@287} physReg:NA Preferences=[rcx] Aversions=[]
Interval 42: ref RefPositions {#149@288 #150@289} physReg:NA Preferences=[rax] Aversions=[]
Interval 43: byref RefPositions {#155@296 #157@301} physReg:NA Preferences=[rcx] Aversions=[]
Interval 44: float (INTERNAL) RefPositions {#159@307 #161@307} physReg:NA Preferences=[mm0-mm5 mm16-mm31] Aversions=[]
Interval 45: ref RefPositions {#163@320 #165@321} physReg:NA Preferences=[rcx] Aversions=[]
Interval 46: ref RefPositions {#167@322 #169@327} physReg:NA Preferences=[rcx] Aversions=[]

------------
REFPOSITIONS BEFORE ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[rcx] minReg=1 fixed regOptional wt=100.00>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[rdx] minReg=1 fixed regOptional wt=100.00>
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02> BB00 regmask=[r8] minReg=1 fixed regOptional wt=100.00>
<RefPosition #3   @1   RefTypeBB BB01 regmask=[] minReg=1 wt=100.00>
<RefPosition #4   @6   RefTypeDef <Ivl:13> CNS_INT BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #5   @7   RefTypeUse <Ivl:13> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #6   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #7   @12  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #8   @23  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #9   @24  RefTypeDef <Ivl:14> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #10  @25  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #11  @27  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #12  @27  RefTypeUse <Ivl:14> BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=100.00>
<RefPosition #13  @28  RefTypeDef <Ivl:15> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #14  @29  RefTypeUse <Ivl:15> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #15  @30  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #16  @33  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #17  @34  RefTypeDef <Ivl:3 V07> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #18  @37  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #19  @38  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #20  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #21  @50  RefTypeDef <Ivl:16> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #22  @51  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #23  @53  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #24  @53  RefTypeUse <Ivl:16> BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=100.00>
<RefPosition #25  @54  RefTypeDef <Ivl:17> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #26  @55  RefTypeUse <Ivl:17> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #27  @56  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #28  @61  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #29  @62  RefTypeDef <Ivl:18> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #30  @63  RefTypeUse <Ivl:18> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #31  @64  RefTypeDef <Ivl:4 V11> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #32  @67  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #33  @68  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #34  @79  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #35  @80  RefTypeDef <Ivl:19> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #36  @81  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #37  @83  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #38  @83  RefTypeUse <Ivl:19> BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=100.00>
<RefPosition #39  @84  RefTypeDef <Ivl:20> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #40  @85  RefTypeUse <Ivl:20> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #41  @86  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #42  @91  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #43  @92  RefTypeDef <Ivl:21> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #44  @93  RefTypeUse <Ivl:21> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #45  @94  RefTypeDef <Ivl:5 V15> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #46  @97  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #47  @98  RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #48  @109 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #49  @110 RefTypeDef <Ivl:22> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #50  @111 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #51  @113 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #52  @113 RefTypeUse <Ivl:22> BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=100.00>
<RefPosition #53  @114 RefTypeDef <Ivl:23> SELECTCC BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #54  @115 RefTypeUse <Ivl:23> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #55  @116 RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #56  @121 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #57  @122 RefTypeDef <Ivl:24> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #58  @123 RefTypeUse <Ivl:24> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #59  @124 RefTypeDef <Ivl:6 V19> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #60  @129 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #61  @130 RefTypeDef <Ivl:25> ADD BB01 regmask=[allIntButFP] minReg=1 wt=400.00>
<RefPosition #62  @131 RefTypeUse <Ivl:25> BB01 regmask=[allIntButFP] minReg=1 last wt=100.00>
<RefPosition #63  @132 RefTypeDef <Ivl:7 V23> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=84.82>
<RefPosition #64  @137 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=393.60>
<RefPosition #65  @141 RefTypeBB BB10 regmask=[] minReg=1 wt=52.00>
<RefPosition #66  @147 RefTypeUse <Ivl:2 V02> LCL_VAR BB10 regmask=[allIntButFP] minReg=1 regOptional wt=393.60>
<RefPosition #67  @151 RefTypeBB BB11 regmask=[] minReg=1 wt=41.60>
<RefPosition #68  @157 RefTypeUse <Ivl:2 V02> LCL_VAR BB11 regmask=[allIntButFP] minReg=1 last regOptional wt=393.60>
<RefPosition #69  @161 RefTypeBB BB15 regmask=[] minReg=1 wt=10.40>
<RefPosition #70  @165 RefTypeUse <Ivl:3 V07> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #71  @166 RefTypeDef <Ivl:26> IND BB15 regmask=[allIntButFP] minReg=1 wt=41.60>
<RefPosition #72  @169 RefTypeUse <Ivl:8 V26> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #73  @169 RefTypeUse <Ivl:26> BB15 regmask=[allIntButFP] minReg=1 last wt=10.40>
<RefPosition #74  @173 RefTypeUse <Ivl:4 V11> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #75  @174 RefTypeDef <Ivl:27> IND BB15 regmask=[allIntButFP] minReg=1 wt=41.60>
<RefPosition #76  @177 RefTypeUse <Ivl:9 V27> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #77  @177 RefTypeUse <Ivl:27> BB15 regmask=[allIntButFP] minReg=1 last wt=10.40>
<RefPosition #78  @181 RefTypeUse <Ivl:5 V15> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #79  @182 RefTypeDef <Ivl:28> IND BB15 regmask=[allIntButFP] minReg=1 wt=41.60>
<RefPosition #80  @185 RefTypeUse <Ivl:10 V28> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #81  @185 RefTypeUse <Ivl:28> BB15 regmask=[allIntButFP] minReg=1 last wt=10.40>
<RefPosition #82  @193 RefTypeDef <Ivl:29 internal> STORE_BLK BB15 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=41.60>
<RefPosition #83  @193 RefTypeUse <Ivl:11 V29> LCL_VAR BB15 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=480.03>
<RefPosition #84  @193 RefTypeUse <Ivl:6 V19> LCL_VAR BB15 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=180.03>
<RefPosition #85  @193 RefTypeUse <Ivl:29 internal> STORE_BLK BB15 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=41.60>
<RefPosition #86  @197 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #87  @197 RefTypeUse <Ivl:7 V23> LCL_VAR BB15 regmask=[rcx] minReg=1 last fixed wt=84.82>
<RefPosition #88  @198 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #89  @198 RefTypeDef <Ivl:30> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed wt=41.60>
<RefPosition #90  @203 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #91  @203 RefTypeUse <Ivl:30> BB15 regmask=[rcx] minReg=1 last fixed wt=10.40>
<RefPosition #92  @204 RefTypeKill BB15 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #93  @204 RefTypeFixedReg <Reg:rax> BB15 regmask=[rax] minReg=1 wt=10.40>
<RefPosition #94  @204 RefTypeDef <Ivl:31> CALL BB15 regmask=[rax] minReg=1 fixed wt=41.60>
<RefPosition #95  @207 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #96  @207 RefTypeUse <Ivl:0 V00> LCL_VAR BB15 regmask=[rcx] minReg=1 last fixed wt=1080.03>
<RefPosition #97  @207 RefTypeFixedReg <Reg:rdx> BB15 regmask=[rdx] minReg=1 wt=10.40>
<RefPosition #98  @207 RefTypeUse <Ivl:31> BB15 regmask=[rdx] minReg=1 last fixed wt=10.40>
<RefPosition #99  @208 RefTypeKill BB15 regmask=[rax rcx rdx r8-r11 r16-r31 mm0-mm5 mm16-mm31 k1-k7] minReg=1>
<RefPosition #100 @211 RefTypeBB BB12 regmask=[] minReg=1 wt=69.63>
<RefPosition #101 @217 RefTypeDef <Ivl:32 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=278.53>
<RefPosition #102 @217 RefTypeUse <Ivl:1 V01> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 wt=394.80>
<RefPosition #103 @217 RefTypeUse <Ivl:32 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=278.53>
<RefPosition #104 @221 RefTypeUse <Ivl:8 V26> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #105 @222 RefTypeDef <Ivl:33> IND BB12 regmask=[allIntButFP] minReg=1 wt=278.53>
<RefPosition #106 @225 RefTypeUse <Ivl:3 V07> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #107 @225 RefTypeUse <Ivl:33> BB12 regmask=[allIntButFP] minReg=1 last wt=69.63>
<RefPosition #108 @229 RefTypeUse <Ivl:9 V27> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #109 @230 RefTypeDef <Ivl:34> IND BB12 regmask=[allIntButFP] minReg=1 wt=278.53>
<RefPosition #110 @233 RefTypeUse <Ivl:4 V11> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #111 @233 RefTypeUse <Ivl:34> BB12 regmask=[allIntButFP] minReg=1 last wt=69.63>
<RefPosition #112 @237 RefTypeUse <Ivl:10 V28> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #113 @238 RefTypeDef <Ivl:35> IND BB12 regmask=[allIntButFP] minReg=1 wt=278.53>
<RefPosition #114 @241 RefTypeUse <Ivl:5 V15> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #115 @241 RefTypeUse <Ivl:35> BB12 regmask=[allIntButFP] minReg=1 last wt=69.63>
<RefPosition #116 @249 RefTypeDef <Ivl:36 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=278.53>
<RefPosition #117 @249 RefTypeUse <Ivl:6 V19> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=180.03>
<RefPosition #118 @249 RefTypeUse <Ivl:11 V29> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=480.03>
<RefPosition #119 @249 RefTypeUse <Ivl:36 internal> STORE_BLK BB12 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=278.53>
<RefPosition #120 @255 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 wt=84.82>
<RefPosition #121 @259 RefTypeUse <Ivl:0 V00> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=1080.03>
<RefPosition #122 @260 RefTypeDef <Ivl:37> IND BB12 regmask=[rcx] minReg=1 wt=278.53>
<RefPosition #123 @261 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #124 @261 RefTypeUse <Ivl:37> BB12 regmask=[rcx] minReg=1 last fixed wt=69.63>
<RefPosition #125 @262 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #126 @262 RefTypeDef <Ivl:38> PUTARG_REG BB12 regmask=[rcx] minReg=1 fixed wt=278.53>
<RefPosition #127 @265 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #128 @265 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[rdx] minReg=1 fixed wt=84.82>
<RefPosition #129 @266 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #130 @266 RefTypeDef <Ivl:39> PUTARG_REG BB12 regmask=[rdx] minReg=1 fixed wt=278.53>
<RefPosition #131 @271 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #132 @271 RefTypeUse <Ivl:38> BB12 regmask=[rcx] minReg=1 last fixed wt=69.63>
<RefPosition #133 @271 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #134 @271 RefTypeUse <Ivl:39> BB12 regmask=[rdx] minReg=1 last fixed wt=69.63>
<RefPosition #135 @272 RefTypeKill BB12 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #136 @273 RefTypeBB BB13 regmask=[] minReg=1 wt=0.00>
<RefPosition #137 @276 RefTypeFixedReg <Reg:rdx> BB13 regmask=[rdx] minReg=1 wt=0.00>
<RefPosition #138 @276 RefTypeDef <Ivl:40> CATCH_ARG BB13 regmask=[rdx] minReg=1 fixed wt=0.00>
<RefPosition #139 @277 RefTypeUse <Ivl:40> BB13 regmask=[allIntButFP] minReg=1 last wt=0.00>
<RefPosition #140 @278 RefTypeDef <Ivl:12 V31> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1 wt=0.00>
<RefPosition #141 @281 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #142 @281 RefTypeUse <Ivl:12 V31> LCL_VAR BB13 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #143 @282 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #144 @282 RefTypeDef <Ivl:41> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed wt=0.00>
<RefPosition #145 @287 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #146 @287 RefTypeUse <Ivl:41> BB13 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #147 @288 RefTypeKill BB13 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #148 @288 RefTypeFixedReg <Reg:rax> BB13 regmask=[rax] minReg=1 wt=0.00>
<RefPosition #149 @288 RefTypeDef <Ivl:42> CALL BB13 regmask=[rax] minReg=1 fixed wt=0.00>
<RefPosition #150 @289 RefTypeUse <Ivl:42> BB13 regmask=[allIntButFP] minReg=1 last wt=0.00>
<RefPosition #151 @291 RefTypeBB BB16 regmask=[] minReg=1 wt=19.97>
<RefPosition #152 @295 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #153 @295 RefTypeUse <Ivl:7 V23> LCL_VAR BB16 regmask=[rcx] minReg=1 last fixed wt=84.82>
<RefPosition #154 @296 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #155 @296 RefTypeDef <Ivl:43> PUTARG_REG BB16 regmask=[rcx] minReg=1 fixed wt=79.87>
<RefPosition #156 @301 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #157 @301 RefTypeUse <Ivl:43> BB16 regmask=[rcx] minReg=1 last fixed wt=19.97>
<RefPosition #158 @302 RefTypeKill BB16 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #159 @307 RefTypeDef <Ivl:44 internal> STORE_BLK BB16 regmask=[mm0-mm5 mm16-mm31] minReg=1 wt=79.87>
<RefPosition #160 @307 RefTypeUse <Ivl:1 V01> LCL_VAR BB16 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=394.80>
<RefPosition #161 @307 RefTypeUse <Ivl:44 internal> STORE_BLK BB16 regmask=[mm0-mm5 mm16-mm31] minReg=1 last wt=79.87>
<RefPosition #162 @317 RefTypeBB BB17 regmask=[] minReg=1 wt=0.00>
<RefPosition #163 @320 RefTypeDef <Ivl:45> LCL_VAR BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #164 @321 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #165 @321 RefTypeUse <Ivl:45> BB17 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #166 @322 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #167 @322 RefTypeDef <Ivl:46> PUTARG_REG BB17 regmask=[rcx] minReg=1 fixed wt=0.00>
<RefPosition #168 @327 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #169 @327 RefTypeUse <Ivl:46> BB17 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #170 @328 RefTypeKill BB17 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #171 @329 RefTypeBB BB14 regmask=[] minReg=1 wt=79.22>

VAR REFPOSITIONS BEFORE ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[rcx] minReg=1 fixed regOptional wt=100.00>
<RefPosition #6   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #8   @23  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #18  @37  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #20  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #32  @67  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #34  @79  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #46  @97  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #48  @109 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=1080.03>
<RefPosition #96  @207 RefTypeUse <Ivl:0 V00> LCL_VAR BB15 regmask=[rcx] minReg=1 last fixed wt=1080.03>
<RefPosition #121 @259 RefTypeUse <Ivl:0 V00> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=1080.03>
--- V01  (Interval 1)
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[rdx] minReg=1 fixed regOptional wt=100.00>
<RefPosition #16  @33  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #28  @61  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #42  @91  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #56  @121 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #60  @129 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=394.80>
<RefPosition #102 @217 RefTypeUse <Ivl:1 V01> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 wt=394.80>
<RefPosition #160 @307 RefTypeUse <Ivl:1 V01> LCL_VAR BB16 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=394.80>
--- V02  (Interval 2)
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02> BB00 regmask=[r8] minReg=1 fixed regOptional wt=100.00>
<RefPosition #64  @137 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=393.60>
<RefPosition #66  @147 RefTypeUse <Ivl:2 V02> LCL_VAR BB10 regmask=[allIntButFP] minReg=1 regOptional wt=393.60>
<RefPosition #68  @157 RefTypeUse <Ivl:2 V02> LCL_VAR BB11 regmask=[allIntButFP] minReg=1 last regOptional wt=393.60>
--- V03
--- V04
--- V05
--- V06
--- V07  (Interval 3)
<RefPosition #17  @34  RefTypeDef <Ivl:3 V07> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #70  @165 RefTypeUse <Ivl:3 V07> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #106 @225 RefTypeUse <Ivl:3 V07> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
--- V08
--- V09
--- V10
--- V11  (Interval 4)
<RefPosition #31  @64  RefTypeDef <Ivl:4 V11> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #74  @173 RefTypeUse <Ivl:4 V11> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #110 @233 RefTypeUse <Ivl:4 V11> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
--- V12
--- V13
--- V14
--- V15  (Interval 5)
<RefPosition #45  @94  RefTypeDef <Ivl:5 V15> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #78  @181 RefTypeUse <Ivl:5 V15> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=180.03>
<RefPosition #114 @241 RefTypeUse <Ivl:5 V15> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=180.03>
--- V16
--- V17
--- V18
--- V19  (Interval 6)
<RefPosition #59  @124 RefTypeDef <Ivl:6 V19> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=180.03>
<RefPosition #84  @193 RefTypeUse <Ivl:6 V19> LCL_VAR BB15 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=180.03>
<RefPosition #117 @249 RefTypeUse <Ivl:6 V19> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=180.03>
--- V20
--- V21
--- V22
--- V23  (Interval 7)
<RefPosition #63  @132 RefTypeDef <Ivl:7 V23> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=84.82>
<RefPosition #87  @197 RefTypeUse <Ivl:7 V23> LCL_VAR BB15 regmask=[rcx] minReg=1 last fixed wt=84.82>
<RefPosition #120 @255 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 wt=84.82>
<RefPosition #128 @265 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[rdx] minReg=1 fixed wt=84.82>
<RefPosition #153 @295 RefTypeUse <Ivl:7 V23> LCL_VAR BB16 regmask=[rcx] minReg=1 last fixed wt=84.82>
--- V24
--- V25
--- V26  (Interval 8)
<RefPosition #7   @12  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #10  @25  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #11  @27  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #15  @30  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #72  @169 RefTypeUse <Ivl:8 V26> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #104 @221 RefTypeUse <Ivl:8 V26> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
--- V27  (Interval 9)
<RefPosition #19  @38  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #22  @51  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #23  @53  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #27  @56  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #76  @177 RefTypeUse <Ivl:9 V27> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #108 @229 RefTypeUse <Ivl:9 V27> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
--- V28  (Interval 10)
<RefPosition #33  @68  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #36  @81  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #37  @83  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #41  @86  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #80  @185 RefTypeUse <Ivl:10 V28> LCL_VAR BB15 regmask=[allIntButFP] minReg=1 last wt=480.03>
<RefPosition #112 @237 RefTypeUse <Ivl:10 V28> LCL_VAR BB12 regmask=[allIntButFP] minReg=1 last wt=480.03>
--- V29  (Interval 11)
<RefPosition #47  @98  RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #50  @111 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 regOptional wt=480.03>
<RefPosition #51  @113 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last regOptional wt=480.03>
<RefPosition #55  @116 RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 wt=480.03>
<RefPosition #83  @193 RefTypeUse <Ivl:11 V29> LCL_VAR BB15 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=480.03>
<RefPosition #118 @249 RefTypeUse <Ivl:11 V29> LCL_VAR BB12 regmask=[rax rcx rdx rbx rsi rdi r8-r15] minReg=1 last wt=480.03>
--- V30
--- V31  (Interval 12)
<RefPosition #140 @278 RefTypeDef <Ivl:12 V31> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1 wt=0.00>
<RefPosition #142 @281 RefTypeUse <Ivl:12 V31> LCL_VAR BB13 regmask=[rcx] minReg=1 last fixed wt=0.00>
--- V32



Allocating Registers
--------------------
The following table has one or more rows for each RefPosition that is handled during allocation.
The columns are: (1) Loc: LSRA location, (2) RP#: RefPosition number, (3) Name, (4) Type (e.g. Def, Use,
Fixd, Parm, DDef (Dummy Def), ExpU (Exposed Use), Kill) followed by a '*' if it is a last use, and a 'D'
if it is delayRegFree, (5) Action taken during allocation. Some actions include (a) Alloc a new register,
(b) Keep an existing register, (c) Spill a register, (d) ReLod (Reload) a register. If an ALL-CAPS name
such as COVRS is displayed, it is a score name from lsra_score.h, with a trailing '(A)' indicating alloc,
'(C)' indicating copy, and '(R)' indicating re-use. See dumpLsraAllocationEvent() for details.
The subsequent columns show the Interval occupying each register, if any, followed by 'a' if it is
active, 'p' if it is a large vector that has been partially spilled, and 'i' if it is inactive.
Columns are only printed up to the last modified register, which may increase during allocation,
in which case additional columns will appear. Registers which are not marked modified have ---- in
their column.

--------------------------------------------+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------------------+----+----+----+----+----+----+----+----+----+
                                            |    |V00a|V01a|    |    |    |    |V02a|    |
           0.#0   V00  Parm   ORDER(A) rbx  |    |    |V01a|V00a|    |    |    |V02a|    |
           0.#1   V01  Parm   Keep     rdx  |    |    |V01a|V00a|    |    |    |V02a|    |
           0.#2   V02  Parm   Keep     r8   |    |    |V01a|V00a|    |    |    |V02a|    |
           1.#3   BB1  PredBB0              |    |    |V01a|V00a|    |    |    |V02a|    |
[000000]   6.#4   C13  Def    BSFIT(A) rcx  |    |C13a|V01a|V00a|    |    |    |V02a|    |
[000001]   7.#5   C13  Use *  Keep     rcx  |    |C13a|V01a|V00a|    |    |    |V02a|    |
[000007]  11.#6   V00  Use    Keep     rbx  |    |C13i|V01a|V00a|    |    |    |V02a|    |
          12.#7   V26  Def    BSFIT(A) rcx  |    |V26a|V01a|V00a|    |    |    |V02a|    |
[000193]  23.#8   V00  Use    Keep     rbx  |    |V26a|V01a|V00a|    |    |    |V02a|    |
          24.#9   I14  Def    ORDER(A) rax  |I14a|V26a|V01a|V00a|    |    |    |V02a|    |
[000005]  25.#10  V26  Use    Keep     rcx  |I14a|V26a|V01a|V00a|    |    |    |V02a|    |
[000226]  27.#11  V26  Use *  Keep     rcx  |I14a|V26i|V01a|V00a|    |    |    |V02a|    |
          27.#12  I14  Use *  Keep     rax  |I14a|V26i|V01a|V00a|    |    |    |V02a|    |
          28.#13  I15  Def    COVRS(A) rcx  |    |I15a|V01a|V00a|    |    |    |V02a|    |
[000194]  29.#14  I15  Use *  Keep     rcx  |    |I15a|V01a|V00a|    |    |    |V02a|    |
                              Restr    rcx  |    |V26i|V01a|V00a|    |    |    |V02a|    |
          30.#15  V26  Def    THISA(A) rcx  |    |V26a|V01a|V00a|    |    |    |V02a|    |
[000015]  33.#16  V01  Use    Keep     rdx  |    |V26a|V01a|V00a|    |    |    |V02a|    |
          34.#17  V07  Def    ORDER(A) rax  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |
[000021]  37.#18  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+
          38.#19  V27  Def    ORDER(A) r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |V27a|
[000189]  49.#20  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |V27a|
          50.#21  I16  Def    ORDER(A) r9   |V07a|V26a|V01a|V00a|    |    |    |V02a|I16a|V27a|
[000019]  51.#22  V27  Use    Keep     r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|I16a|V27a|
[000224]  53.#23  V27  Use *  Keep     r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|I16a|V27i|
          53.#24  I16  Use *  Keep     r9   |V07a|V26a|V01a|V00a|    |    |    |V02a|I16a|V27i|
          54.#25  I17  Def    COVRS(A) r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |I17a|
[000190]  55.#26  I17  Use *  Keep     r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |I17a|
                              Restr    r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |V27i|
          56.#27  V27  Def    THISA(A) r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |V27a|
[000029]  61.#28  V01  Use    Keep     rdx  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |V27a|
          62.#29  I18  Def    ORDER(A) rsi  |V07a|V26a|V01a|V00a|    |I18a|    |V02a|    |V27a|
[000030]  63.#30  I18  Use *  Keep     rsi  |V07a|V26a|V01a|V00a|    |I18a|    |V02a|    |V27a|
          64.#31  V11  Def    COVRS(A) rsi  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|    |V27a|
[000036]  67.#32  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|    |V27a|
          68.#33  V28  Def    ORDER(A) r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|
[000185]  79.#34  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+
          80.#35  I19  Def    ORDER(A) r11  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|I19a|
[000034]  81.#36  V28  Use    Keep     r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|I19a|
[000222]  83.#37  V28  Use *  Keep     r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28i|V27a|I19a|
          83.#38  I19  Use *  Keep     r11  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28i|V27a|I19a|
          84.#39  I20  Def    COVRS(A) r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|I20a|V27a|    |
[000186]  85.#40  I20  Use *  Keep     r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|I20a|V27a|    |
                              Restr    r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28i|V27a|    |
          86.#41  V28  Def    THISA(A) r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|    |
[000044]  91.#42  V01  Use    Keep     rdx  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|    |
          92.#43  I21  Def    ORDER(A) rdi  |V07a|V26a|V01a|V00a|    |V11a|I21a|V02a|V28a|V27a|    |
[000045]  93.#44  I21  Use *  Keep     rdi  |V07a|V26a|V01a|V00a|    |V11a|I21a|V02a|V28a|V27a|    |
          94.#45  V15  Def    COVRS(A) rdi  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|    |
[000051]  97.#46  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|    |
          98.#47  V29  Def    CRCE (A) r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|
[000181] 109.#48  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+
         110.#49  I22  Def    ORDER(A) r16  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|I22a|
[000049] 111.#50  V29  Use    Keep     r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|I22a|
[000218] 113.#51  V29  Use *  Keep     r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29i|I22a|
         113.#52  I22  Use *  Keep     r16  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29i|I22a|
         114.#53  I23  Def    COVRS(A) r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|I23a|    |
[000182] 115.#54  I23  Use *  Keep     r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|I23a|    |
                              Restr    r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29i|    |
         116.#55  V29  Def    THISA(A) r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|    |
[000059] 121.#56  V01  Use    Keep     rdx  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         122.#57  I24  Def    ORDER(A) r14  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|I24a|    |
[000060] 123.#58  I24  Use *  Keep     r14  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|I24a|    |
         124.#59  V19  Def    COVRS(A) r14  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|    |
[000074] 129.#60  V01  Use    Keep     rdx  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|    |
         130.#61  I25  Def    ORDER(A) r16  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|I25a|
[000075] 131.#62  I25  Use *  Keep     r16  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|I25a|
         132.#63  V23  Def    COVRS(A) r16  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|V23a|
[000078] 137.#64  V02  Use    Keep     r8   |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|V23a|
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         141.#65  BB10 PredBB1              |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|V23a|
[000137] 147.#66  V02  Use    Keep     r8   |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|V23a|
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         151.#67  BB11 PredBB10             |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|V23a|
[000173] 157.#68  V02  Use *  Keep     r8   |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|V23a|
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         161.#69  BB15 PredBB10             |V07a|V26a|V01i|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000140] 165.#70  V07  Use *  Keep     rax  |V07i|V26a|V01i|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         166.#71  I26  Def    ORDER(A) rax  |I26a|V26a|V01i|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000144] 169.#72  V26  Use *  Keep     rcx  |I26a|V26i|V01i|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         169.#73  I26  Use *  Keep     rax  |I26a|V26i|V01i|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
                              Restr    rax  |V07i|V26i|V01i|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000146] 173.#74  V11  Use *  Keep     rsi  |V07i|V26i|V01i|V00a|    |V11i|V15a|    |V28a|V27a|V29a|V19a|V23a|
         174.#75  I27  Def    BSFIT(A) rcx  |V07i|I27a|V01i|V00a|    |V11i|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000150] 177.#76  V27  Use *  Keep     r10  |V07i|I27a|V01i|V00a|    |V11i|V15a|    |V28a|V27i|V29a|V19a|V23a|
         177.#77  I27  Use *  Keep     rcx  |V07i|I27a|V01i|V00a|    |V11i|V15a|    |V28a|V27i|V29a|V19a|V23a|
                              Restr    rcx  |V07i|V26i|V01i|V00a|    |V11i|V15a|    |V28a|V27i|V29a|V19a|V23a|
[000152] 181.#78  V15  Use *  Keep     rdi  |V07i|V26i|V01i|V00a|    |V11i|V15i|    |V28a|V27i|V29a|V19a|V23a|
         182.#79  I28  Def    BSFIT(A) rcx  |V07i|I28a|V01i|V00a|    |V11i|V15i|    |V28a|V27i|V29a|V19a|V23a|
[000156] 185.#80  V28  Use *  Keep     r9   |V07i|I28a|V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29a|V19a|V23a|
         185.#81  I28  Use *  Keep     rcx  |V07i|I28a|V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29a|V19a|V23a|
[000162] 193.#82  I29  Def    ORDER(A) mm0  |V07i|    |V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29a|V19a|V23a|
         193.#83  V29  Use *  Keep     r11  |V07i|    |V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29i|V19a|V23a|
         193.#84  V19  Use *  Keep     r14  |V07i|    |V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29i|V19i|V23a|
         193.#85  I29  Use *  Keep     mm0  |V07i|    |V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29i|V19i|V23a|
[000232] 197.#86  rcx  Fixd   Keep     rcx  |V07i|    |V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29i|V19i|V23a|
         197.#87  V23  Use *  Copy     rcx  |V07i|V23a|V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29i|V19i|V23a|
         198.#88  rcx  Fixd   Keep     rcx  |V07i|V23i|V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29i|V19i|V23i|
         198.#89  I30  Def    Alloc    rcx  |V07i|I30a|V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29i|V19i|V23i|
[000164] 203.#90  rcx  Fixd   Keep     rcx  |V07i|I30a|V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29i|V19i|V23i|
         203.#91  I30  Use *  Keep     rcx  |V07i|I30a|V01i|V00a|    |V11i|V15i|    |V28i|V27i|V29i|V19i|V23i|
         204.#92       Kill   None     [rax rcx rdx r8-r11 r16-r31]
                                            |    |    |    |V00a|    |V11i|V15i|    |    |    |    |V19i|    |
         204.#93  rax  Fixd   Keep     rax  |    |    |    |V00a|    |V11i|V15i|    |    |    |    |V19i|    |
         204.#94  I31  Def    DUconflict    |    |    |    |V00a|    |V11i|V15i|    |    |    |    |V19i|    |
  Case #6 need a copy                       |    |    |    |V00a|    |V11i|V15i|    |    |    |    |V19i|    |
                              Alloc    rax  |I31a|    |    |V00a|    |V11i|V15i|    |    |    |    |V19i|    |
[000169] 207.#95  rcx  Fixd   Keep     rcx  |I31a|    |    |V00a|    |V11i|V15i|    |    |    |    |V19i|    |
         207.#96  V00  Use *  Copy     rcx  |I31a|V00a|    |V00a|    |V11i|V15i|    |    |    |    |V19i|    |
         207.#97  rdx  Fixd   Keep     rdx  |I31a|V00a|    |V00a|    |V11i|V15i|    |    |    |    |V19i|    |
         207.#98  I31  Use *  Copy     rdx  |I31a|V00a|I31a|V00a|    |V11i|V15i|    |    |    |    |V19i|    |
         208.#99       Kill   None     [rax rcx rdx r8-r11 r16-r31 mm0-mm5 mm16-mm31 k1-k7]
                                            |    |    |    |V00i|    |V11i|V15i|    |    |    |    |V19i|    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         211.#100 BB12 PredBB1              |V07a|V26a|V01a|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000085] 217.#101 I32  Def    ORDER(A) mm0  |V07a|V26a|V01a|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         217.#102 V01  Use    Keep     rdx  |V07a|V26a|V01a|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         217.#103 I32  Use *  Keep     mm0  |V07a|V26a|V01a|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000087] 221.#104 V26  Use *  Keep     rcx  |V07a|V26a|V01a|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         222.#105 I33  Def    BSFIT(A) rcx  |V07a|I33a|V01a|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000091] 225.#106 V07  Use *  Keep     rax  |V07a|I33a|V01a|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         225.#107 I33  Use *  Keep     rcx  |V07a|I33a|V01a|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000093] 229.#108 V27  Use *  Keep     r10  |    |    |V01a|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         230.#109 I34  Def    BSFIT(A) rcx  |    |I34a|V01a|V00a|    |V11a|V15a|    |V28a|    |V29a|V19a|V23a|
[000097] 233.#110 V11  Use *  Keep     rsi  |    |I34a|V01a|V00a|    |V11a|V15a|    |V28a|    |V29a|V19a|V23a|
         233.#111 I34  Use *  Keep     rcx  |    |I34a|V01a|V00a|    |V11a|V15a|    |V28a|    |V29a|V19a|V23a|
[000099] 237.#112 V28  Use *  Keep     r9   |    |    |V01a|V00a|    |    |V15a|    |V28a|    |V29a|V19a|V23a|
         238.#113 I35  Def    BSFIT(A) rcx  |    |I35a|V01a|V00a|    |    |V15a|    |    |    |V29a|V19a|V23a|
[000103] 241.#114 V15  Use *  Keep     rdi  |    |I35a|V01a|V00a|    |    |V15a|    |    |    |V29a|V19a|V23a|
         241.#115 I35  Use *  Keep     rcx  |    |I35a|V01a|V00a|    |    |V15a|    |    |    |V29a|V19a|V23a|
[000109] 249.#116 I36  Def    ORDER(A) mm0  |    |    |V01a|V00a|    |    |    |    |    |    |V29a|V19a|V23a|
         249.#117 V19  Use *  Keep     r14  |    |    |V01a|V00a|    |    |    |    |    |    |V29a|V19a|V23a|
         249.#118 V29  Use *  Keep     r11  |    |    |V01a|V00a|    |    |    |    |    |    |V29a|V19a|V23a|
         249.#119 I36  Use *  Keep     mm0  |    |    |V01a|V00a|    |    |    |    |    |    |V29a|V19a|V23a|
[000112] 255.#120 V23  Use    Keep     r16  |    |    |V01a|V00a|    |    |    |    |    |    |    |    |V23a|
[000114] 259.#121 V00  Use *  Keep     rbx  |    |    |V01a|V00a|    |    |    |    |    |    |    |    |V23a|
         260.#122 I37  Def    Alloc    rcx  |    |I37a|V01a|    |    |    |    |    |    |    |    |    |V23a|
[000228] 261.#123 rcx  Fixd   Keep     rcx  |    |I37a|V01a|    |    |    |    |    |    |    |    |    |V23a|
         261.#124 I37  Use *  Keep     rcx  |    |I37a|V01a|    |    |    |    |    |    |    |    |    |V23a|
         262.#125 rcx  Fixd   Keep     rcx  |    |    |V01a|    |    |    |    |    |    |    |    |    |V23a|
         262.#126 I38  Def    Alloc    rcx  |    |I38a|V01a|    |    |    |    |    |    |    |    |    |V23a|
[000229] 265.#127 rdx  Fixd   Keep     rdx  |    |I38a|V01a|    |    |    |    |    |    |    |    |    |V23a|
         265.#128 V23  Use    Spill    rdx  |    |I38a|    |    |    |    |    |    |    |    |    |    |V23i|
                              Copy     rdx  |    |I38a|V23a|    |    |    |    |    |    |    |    |    |V23a|
         266.#129 rdx  Fixd   Keep     rdx  |    |I38a|V23a|    |    |    |    |    |    |    |    |    |V23a|
         266.#130 I39  Def    Alloc    rdx  |    |I38a|I39a|    |    |    |    |    |    |    |    |    |V23a|
[000116] 271.#131 rcx  Fixd   Keep     rcx  |    |I38a|I39a|    |    |    |    |    |    |    |    |    |V23a|
         271.#132 I38  Use *  Keep     rcx  |    |I38a|I39a|    |    |    |    |    |    |    |    |    |V23a|
         271.#133 rdx  Fixd   Keep     rdx  |    |I38a|I39a|    |    |    |    |    |    |    |    |    |V23a|
         271.#134 I39  Use *  Keep     rdx  |    |I38a|I39a|    |    |    |    |    |    |    |    |    |V23a|
         272.#135      Kill   Spill    r16  |    |    |    |    |    |    |    |    |    |    |    |    |    |
                              None     [rax rcx rdx r8-r11 r16-r31]
                                            |    |    |    |    |    |    |    |    |    |    |    |    |    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         273.#136 BB13 PredBB0              |    |    |    |    |    |    |    |    |    |    |    |    |    |
[000081] 276.#137 rdx  Fixd   Keep     rdx  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         276.#138 I40  Def    Alloc    rdx  |    |    |I40a|    |    |    |    |    |    |    |    |    |    |
[000118] 277.#139 I40  Use *  Keep     rdx  |    |    |I40a|    |    |    |    |    |    |    |    |    |    |
         278.#140 V31  Def    BSFIT(A) rcx  |    |V31a|    |    |    |    |    |    |    |    |    |    |    |
[000241] 281.#141 rcx  Fixd   Keep     rcx  |    |V31a|    |    |    |    |    |    |    |    |    |    |    |
         281.#142 V31  Use *  Keep     rcx  |    |V31a|    |    |    |    |    |    |    |    |    |    |    |
         282.#143 rcx  Fixd   Keep     rcx  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         282.#144 I41  Def    Alloc    rcx  |    |I41a|    |    |    |    |    |    |    |    |    |    |    |
[000120] 287.#145 rcx  Fixd   Keep     rcx  |    |I41a|    |    |    |    |    |    |    |    |    |    |    |
         287.#146 I41  Use *  Keep     rcx  |    |I41a|    |    |    |    |    |    |    |    |    |    |    |
         288.#147      Kill   None     [rax rcx rdx r8-r11 r16-r31]
                                            |    |    |    |    |    |    |    |    |    |    |    |    |    |
         288.#148 rax  Fixd   Keep     rax  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         288.#149 I42  Def    Alloc    rax  |I42a|    |    |    |    |    |    |    |    |    |    |    |    |
[000121] 289.#150 I42  Use *  Keep     rax  |I42a|    |    |    |    |    |    |    |    |    |    |    |    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         291.#151 BB16 PredBB11             |    |    |    |    |    |    |    |    |    |    |    |    |    |
[000235] 295.#152 rcx  Fixd   Keep     rcx  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         295.#153 V23  Use *  ReLod    NA   |    |    |    |    |    |    |    |    |    |    |    |    |    |
                              Alloc    rcx  |    |V23a|    |    |    |    |    |    |    |    |    |    |    |
         296.#154 rcx  Fixd   Keep     rcx  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         296.#155 I43  Def    Alloc    rcx  |    |I43a|    |    |    |    |    |    |    |    |    |    |    |
[000123] 301.#156 rcx  Fixd   Keep     rcx  |    |I43a|    |    |    |    |    |    |    |    |    |    |    |
         301.#157 I43  Use *  Keep     rcx  |    |I43a|    |    |    |    |    |    |    |    |    |    |    |
         302.#158      Kill   None     [rax rcx rdx r8-r11 r16-r31]
                                            |    |    |    |    |    |    |    |    |    |    |    |    |    |
[000127] 307.#159 I44  Def    ORDER(A) mm0  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         307.#160 V01  Use *  ReLod    NA   |    |    |    |    |    |    |    |    |    |    |    |    |    |
                              THISA(A) rdx  |    |    |V01a|    |    |    |    |    |    |    |    |    |    |
         307.#161 I44  Use *  Keep     mm0  |    |    |V01a|    |    |    |    |    |    |    |    |    |    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         317.#162 BB17 PredBB16             |    |    |    |    |    |    |    |    |    |    |    |    |    |
[000132] 320.#163 I45  Def    Alloc    rcx  |    |I45a|    |    |    |    |    |    |    |    |    |    |    |
[000238] 321.#164 rcx  Fixd   Keep     rcx  |    |I45a|    |    |    |    |    |    |    |    |    |    |    |
         321.#165 I45  Use *  Keep     rcx  |    |I45a|    |    |    |    |    |    |    |    |    |    |    |
         322.#166 rcx  Fixd   Keep     rcx  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         322.#167 I46  Def    Alloc    rcx  |    |I46a|    |    |    |    |    |    |    |    |    |    |    |
[000133] 327.#168 rcx  Fixd   Keep     rcx  |    |I46a|    |    |    |    |    |    |    |    |    |    |    |
         327.#169 I46  Use *  Keep     rcx  |    |I46a|    |    |    |    |    |    |    |    |    |    |    |
         328.#170      Kill   None     [rax rcx rdx r8-r11 r16-r31]
                                            |    |    |    |    |    |    |    |    |    |    |    |    |    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         329.#171 BB14 PredBB12             |    |    |    |    |    |    |    |    |    |    |    |    |    |

------------
REFPOSITIONS AFTER ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[rbx] minReg=1 regOptional wt=100.00>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[rdx] minReg=1 singleDefSpill fixed regOptional wt=100.00>
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02> BB00 regmask=[r8] minReg=1 fixed regOptional wt=100.00>
<RefPosition #3   @1   RefTypeBB BB01 regmask=[] minReg=1 wt=100.00>
<RefPosition #4   @6   RefTypeDef <Ivl:13> CNS_INT BB01 regmask=[rcx] minReg=1 wt=400.00>
<RefPosition #5   @7   RefTypeUse <Ivl:13> BB01 regmask=[rcx] minReg=1 last wt=100.00>
<RefPosition #6   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #7   @12  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[rcx] minReg=1 wt=480.03>
<RefPosition #8   @23  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #9   @24  RefTypeDef <Ivl:14> ADD BB01 regmask=[rax] minReg=1 wt=400.00>
<RefPosition #10  @25  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[rcx] minReg=1 regOptional wt=480.03>
<RefPosition #11  @27  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[rcx] minReg=1 last regOptional wt=480.03>
<RefPosition #12  @27  RefTypeUse <Ivl:14> BB01 regmask=[rax] minReg=1 last regOptional wt=100.00>
<RefPosition #13  @28  RefTypeDef <Ivl:15> SELECTCC BB01 regmask=[rcx] minReg=1 wt=400.00>
<RefPosition #14  @29  RefTypeUse <Ivl:15> BB01 regmask=[rcx] minReg=1 last wt=100.00>
<RefPosition #15  @30  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[rcx] minReg=1 wt=480.03>
<RefPosition #16  @33  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 wt=394.80>
<RefPosition #17  @34  RefTypeDef <Ivl:3 V07> STORE_LCL_VAR BB01 regmask=[rax] minReg=1 wt=180.03>
<RefPosition #18  @37  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #19  @38  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[r10] minReg=1 wt=480.03>
<RefPosition #20  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #21  @50  RefTypeDef <Ivl:16> ADD BB01 regmask=[r9] minReg=1 wt=400.00>
<RefPosition #22  @51  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[r10] minReg=1 regOptional wt=480.03>
<RefPosition #23  @53  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[r10] minReg=1 last regOptional wt=480.03>
<RefPosition #24  @53  RefTypeUse <Ivl:16> BB01 regmask=[r9] minReg=1 last regOptional wt=100.00>
<RefPosition #25  @54  RefTypeDef <Ivl:17> SELECTCC BB01 regmask=[r10] minReg=1 wt=400.00>
<RefPosition #26  @55  RefTypeUse <Ivl:17> BB01 regmask=[r10] minReg=1 last wt=100.00>
<RefPosition #27  @56  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[r10] minReg=1 wt=480.03>
<RefPosition #28  @61  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 wt=394.80>
<RefPosition #29  @62  RefTypeDef <Ivl:18> ADD BB01 regmask=[rsi] minReg=1 wt=400.00>
<RefPosition #30  @63  RefTypeUse <Ivl:18> BB01 regmask=[rsi] minReg=1 last wt=100.00>
<RefPosition #31  @64  RefTypeDef <Ivl:4 V11> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1 wt=180.03>
<RefPosition #32  @67  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #33  @68  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[r9] minReg=1 wt=480.03>
<RefPosition #34  @79  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #35  @80  RefTypeDef <Ivl:19> ADD BB01 regmask=[r11] minReg=1 wt=400.00>
<RefPosition #36  @81  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[r9] minReg=1 regOptional wt=480.03>
<RefPosition #37  @83  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[r9] minReg=1 last regOptional wt=480.03>
<RefPosition #38  @83  RefTypeUse <Ivl:19> BB01 regmask=[r11] minReg=1 last regOptional wt=100.00>
<RefPosition #39  @84  RefTypeDef <Ivl:20> SELECTCC BB01 regmask=[r9] minReg=1 wt=400.00>
<RefPosition #40  @85  RefTypeUse <Ivl:20> BB01 regmask=[r9] minReg=1 last wt=100.00>
<RefPosition #41  @86  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[r9] minReg=1 wt=480.03>
<RefPosition #42  @91  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 wt=394.80>
<RefPosition #43  @92  RefTypeDef <Ivl:21> ADD BB01 regmask=[rdi] minReg=1 wt=400.00>
<RefPosition #44  @93  RefTypeUse <Ivl:21> BB01 regmask=[rdi] minReg=1 last wt=100.00>
<RefPosition #45  @94  RefTypeDef <Ivl:5 V15> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1 wt=180.03>
<RefPosition #46  @97  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #47  @98  RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[r11] minReg=1 wt=480.03>
<RefPosition #48  @109 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #49  @110 RefTypeDef <Ivl:22> ADD BB01 regmask=[r16] minReg=1 wt=400.00>
<RefPosition #50  @111 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[r11] minReg=1 regOptional wt=480.03>
<RefPosition #51  @113 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[r11] minReg=1 last regOptional wt=480.03>
<RefPosition #52  @113 RefTypeUse <Ivl:22> BB01 regmask=[r16] minReg=1 last regOptional wt=100.00>
<RefPosition #53  @114 RefTypeDef <Ivl:23> SELECTCC BB01 regmask=[r11] minReg=1 wt=400.00>
<RefPosition #54  @115 RefTypeUse <Ivl:23> BB01 regmask=[r11] minReg=1 last wt=100.00>
<RefPosition #55  @116 RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[r11] minReg=1 wt=480.03>
<RefPosition #56  @121 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 wt=394.80>
<RefPosition #57  @122 RefTypeDef <Ivl:24> ADD BB01 regmask=[r14] minReg=1 wt=400.00>
<RefPosition #58  @123 RefTypeUse <Ivl:24> BB01 regmask=[r14] minReg=1 last wt=100.00>
<RefPosition #59  @124 RefTypeDef <Ivl:6 V19> STORE_LCL_VAR BB01 regmask=[r14] minReg=1 wt=180.03>
<RefPosition #60  @129 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 wt=394.80>
<RefPosition #61  @130 RefTypeDef <Ivl:25> ADD BB01 regmask=[r16] minReg=1 wt=400.00>
<RefPosition #62  @131 RefTypeUse <Ivl:25> BB01 regmask=[r16] minReg=1 last wt=100.00>
<RefPosition #63  @132 RefTypeDef <Ivl:7 V23> STORE_LCL_VAR BB01 regmask=[r16] minReg=1 singleDefSpill writeThru regOptional wt=84.82>
<RefPosition #64  @137 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[r8] minReg=1 regOptional wt=393.60>
<RefPosition #65  @141 RefTypeBB BB10 regmask=[] minReg=1 wt=52.00>
<RefPosition #66  @147 RefTypeUse <Ivl:2 V02> LCL_VAR BB10 regmask=[r8] minReg=1 regOptional wt=393.60>
<RefPosition #67  @151 RefTypeBB BB11 regmask=[] minReg=1 wt=41.60>
<RefPosition #68  @157 RefTypeUse <Ivl:2 V02> LCL_VAR BB11 regmask=[r8] minReg=1 last regOptional wt=393.60>
<RefPosition #69  @161 RefTypeBB BB15 regmask=[] minReg=1 wt=10.40>
<RefPosition #70  @165 RefTypeUse <Ivl:3 V07> LCL_VAR BB15 regmask=[rax] minReg=1 last wt=180.03>
<RefPosition #71  @166 RefTypeDef <Ivl:26> IND BB15 regmask=[rax] minReg=1 wt=41.60>
<RefPosition #72  @169 RefTypeUse <Ivl:8 V26> LCL_VAR BB15 regmask=[rcx] minReg=1 last wt=480.03>
<RefPosition #73  @169 RefTypeUse <Ivl:26> BB15 regmask=[rax] minReg=1 last wt=10.40>
<RefPosition #74  @173 RefTypeUse <Ivl:4 V11> LCL_VAR BB15 regmask=[rsi] minReg=1 last wt=180.03>
<RefPosition #75  @174 RefTypeDef <Ivl:27> IND BB15 regmask=[rcx] minReg=1 wt=41.60>
<RefPosition #76  @177 RefTypeUse <Ivl:9 V27> LCL_VAR BB15 regmask=[r10] minReg=1 last wt=480.03>
<RefPosition #77  @177 RefTypeUse <Ivl:27> BB15 regmask=[rcx] minReg=1 last wt=10.40>
<RefPosition #78  @181 RefTypeUse <Ivl:5 V15> LCL_VAR BB15 regmask=[rdi] minReg=1 last wt=180.03>
<RefPosition #79  @182 RefTypeDef <Ivl:28> IND BB15 regmask=[rcx] minReg=1 wt=41.60>
<RefPosition #80  @185 RefTypeUse <Ivl:10 V28> LCL_VAR BB15 regmask=[r9] minReg=1 last wt=480.03>
<RefPosition #81  @185 RefTypeUse <Ivl:28> BB15 regmask=[rcx] minReg=1 last wt=10.40>
<RefPosition #82  @193 RefTypeDef <Ivl:29 internal> STORE_BLK BB15 regmask=[mm0] minReg=1 wt=41.60>
<RefPosition #83  @193 RefTypeUse <Ivl:11 V29> LCL_VAR BB15 regmask=[r11] minReg=1 last wt=480.03>
<RefPosition #84  @193 RefTypeUse <Ivl:6 V19> LCL_VAR BB15 regmask=[r14] minReg=1 last wt=180.03>
<RefPosition #85  @193 RefTypeUse <Ivl:29 internal> STORE_BLK BB15 regmask=[mm0] minReg=1 last wt=41.60>
<RefPosition #86  @197 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #87  @197 RefTypeUse <Ivl:7 V23> LCL_VAR BB15 regmask=[rcx] minReg=1 last copy fixed wt=84.82>
<RefPosition #88  @198 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #89  @198 RefTypeDef <Ivl:30> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed wt=41.60>
<RefPosition #90  @203 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #91  @203 RefTypeUse <Ivl:30> BB15 regmask=[rcx] minReg=1 last fixed wt=10.40>
<RefPosition #92  @204 RefTypeKill BB15 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #93  @204 RefTypeFixedReg <Reg:rax> BB15 regmask=[rax] minReg=1 wt=10.40>
<RefPosition #94  @204 RefTypeDef <Ivl:31> CALL BB15 regmask=[rax] minReg=1 fixed wt=41.60>
<RefPosition #95  @207 RefTypeFixedReg <Reg:rcx> BB15 regmask=[rcx] minReg=1 wt=10.40>
<RefPosition #96  @207 RefTypeUse <Ivl:0 V00> LCL_VAR BB15 regmask=[rcx] minReg=1 last copy fixed wt=1080.03>
<RefPosition #97  @207 RefTypeFixedReg <Reg:rdx> BB15 regmask=[rdx] minReg=1 wt=10.40>
<RefPosition #98  @207 RefTypeUse <Ivl:31> BB15 regmask=[rdx] minReg=1 last move fixed wt=10.40>
<RefPosition #99  @208 RefTypeKill BB15 regmask=[rax rcx rdx r8-r11 r16-r31 mm0-mm5 mm16-mm31 k1-k7] minReg=1>
<RefPosition #100 @211 RefTypeBB BB12 regmask=[] minReg=1 wt=69.63>
<RefPosition #101 @217 RefTypeDef <Ivl:32 internal> STORE_BLK BB12 regmask=[mm0] minReg=1 wt=278.53>
<RefPosition #102 @217 RefTypeUse <Ivl:1 V01> LCL_VAR BB12 regmask=[rdx] minReg=1 spillAfter wt=394.80>
<RefPosition #103 @217 RefTypeUse <Ivl:32 internal> STORE_BLK BB12 regmask=[mm0] minReg=1 last wt=278.53>
<RefPosition #104 @221 RefTypeUse <Ivl:8 V26> LCL_VAR BB12 regmask=[rcx] minReg=1 last wt=480.03>
<RefPosition #105 @222 RefTypeDef <Ivl:33> IND BB12 regmask=[rcx] minReg=1 wt=278.53>
<RefPosition #106 @225 RefTypeUse <Ivl:3 V07> LCL_VAR BB12 regmask=[rax] minReg=1 last wt=180.03>
<RefPosition #107 @225 RefTypeUse <Ivl:33> BB12 regmask=[rcx] minReg=1 last wt=69.63>
<RefPosition #108 @229 RefTypeUse <Ivl:9 V27> LCL_VAR BB12 regmask=[r10] minReg=1 last wt=480.03>
<RefPosition #109 @230 RefTypeDef <Ivl:34> IND BB12 regmask=[rcx] minReg=1 wt=278.53>
<RefPosition #110 @233 RefTypeUse <Ivl:4 V11> LCL_VAR BB12 regmask=[rsi] minReg=1 last wt=180.03>
<RefPosition #111 @233 RefTypeUse <Ivl:34> BB12 regmask=[rcx] minReg=1 last wt=69.63>
<RefPosition #112 @237 RefTypeUse <Ivl:10 V28> LCL_VAR BB12 regmask=[r9] minReg=1 last wt=480.03>
<RefPosition #113 @238 RefTypeDef <Ivl:35> IND BB12 regmask=[rcx] minReg=1 wt=278.53>
<RefPosition #114 @241 RefTypeUse <Ivl:5 V15> LCL_VAR BB12 regmask=[rdi] minReg=1 last wt=180.03>
<RefPosition #115 @241 RefTypeUse <Ivl:35> BB12 regmask=[rcx] minReg=1 last wt=69.63>
<RefPosition #116 @249 RefTypeDef <Ivl:36 internal> STORE_BLK BB12 regmask=[mm0] minReg=1 wt=278.53>
<RefPosition #117 @249 RefTypeUse <Ivl:6 V19> LCL_VAR BB12 regmask=[r14] minReg=1 last wt=180.03>
<RefPosition #118 @249 RefTypeUse <Ivl:11 V29> LCL_VAR BB12 regmask=[r11] minReg=1 last wt=480.03>
<RefPosition #119 @249 RefTypeUse <Ivl:36 internal> STORE_BLK BB12 regmask=[mm0] minReg=1 last wt=278.53>
<RefPosition #120 @255 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[r16] minReg=1 wt=84.82>
<RefPosition #121 @259 RefTypeUse <Ivl:0 V00> LCL_VAR BB12 regmask=[rbx] minReg=1 last wt=1080.03>
<RefPosition #122 @260 RefTypeDef <Ivl:37> IND BB12 regmask=[rcx] minReg=1 wt=278.53>
<RefPosition #123 @261 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #124 @261 RefTypeUse <Ivl:37> BB12 regmask=[rcx] minReg=1 last fixed wt=69.63>
<RefPosition #125 @262 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #126 @262 RefTypeDef <Ivl:38> PUTARG_REG BB12 regmask=[rcx] minReg=1 fixed wt=278.53>
<RefPosition #127 @265 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #128 @265 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[rdx] minReg=1 spillAfter copy fixed wt=84.82>
<RefPosition #129 @266 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #130 @266 RefTypeDef <Ivl:39> PUTARG_REG BB12 regmask=[rdx] minReg=1 fixed wt=278.53>
<RefPosition #131 @271 RefTypeFixedReg <Reg:rcx> BB12 regmask=[rcx] minReg=1 wt=69.63>
<RefPosition #132 @271 RefTypeUse <Ivl:38> BB12 regmask=[rcx] minReg=1 last fixed wt=69.63>
<RefPosition #133 @271 RefTypeFixedReg <Reg:rdx> BB12 regmask=[rdx] minReg=1 wt=69.63>
<RefPosition #134 @271 RefTypeUse <Ivl:39> BB12 regmask=[rdx] minReg=1 last fixed wt=69.63>
<RefPosition #135 @272 RefTypeKill BB12 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #136 @273 RefTypeBB BB13 regmask=[] minReg=1 wt=0.00>
<RefPosition #137 @276 RefTypeFixedReg <Reg:rdx> BB13 regmask=[rdx] minReg=1 wt=0.00>
<RefPosition #138 @276 RefTypeDef <Ivl:40> CATCH_ARG BB13 regmask=[rdx] minReg=1 fixed wt=0.00>
<RefPosition #139 @277 RefTypeUse <Ivl:40> BB13 regmask=[rdx] minReg=1 last wt=0.00>
<RefPosition #140 @278 RefTypeDef <Ivl:12 V31> STORE_LCL_VAR BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #141 @281 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #142 @281 RefTypeUse <Ivl:12 V31> LCL_VAR BB13 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #143 @282 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #144 @282 RefTypeDef <Ivl:41> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed wt=0.00>
<RefPosition #145 @287 RefTypeFixedReg <Reg:rcx> BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #146 @287 RefTypeUse <Ivl:41> BB13 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #147 @288 RefTypeKill BB13 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #148 @288 RefTypeFixedReg <Reg:rax> BB13 regmask=[rax] minReg=1 wt=0.00>
<RefPosition #149 @288 RefTypeDef <Ivl:42> CALL BB13 regmask=[rax] minReg=1 fixed wt=0.00>
<RefPosition #150 @289 RefTypeUse <Ivl:42> BB13 regmask=[rax] minReg=1 last wt=0.00>
<RefPosition #151 @291 RefTypeBB BB16 regmask=[] minReg=1 wt=19.97>
<RefPosition #152 @295 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #153 @295 RefTypeUse <Ivl:7 V23> LCL_VAR BB16 regmask=[rcx] minReg=1 last reload fixed wt=84.82>
<RefPosition #154 @296 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #155 @296 RefTypeDef <Ivl:43> PUTARG_REG BB16 regmask=[rcx] minReg=1 fixed wt=79.87>
<RefPosition #156 @301 RefTypeFixedReg <Reg:rcx> BB16 regmask=[rcx] minReg=1 wt=19.97>
<RefPosition #157 @301 RefTypeUse <Ivl:43> BB16 regmask=[rcx] minReg=1 last fixed wt=19.97>
<RefPosition #158 @302 RefTypeKill BB16 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #159 @307 RefTypeDef <Ivl:44 internal> STORE_BLK BB16 regmask=[mm0] minReg=1 wt=79.87>
<RefPosition #160 @307 RefTypeUse <Ivl:1 V01> LCL_VAR BB16 regmask=[rdx] minReg=1 last reload wt=394.80>
<RefPosition #161 @307 RefTypeUse <Ivl:44 internal> STORE_BLK BB16 regmask=[mm0] minReg=1 last wt=79.87>
<RefPosition #162 @317 RefTypeBB BB17 regmask=[] minReg=1 wt=0.00>
<RefPosition #163 @320 RefTypeDef <Ivl:45> LCL_VAR BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #164 @321 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #165 @321 RefTypeUse <Ivl:45> BB17 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #166 @322 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #167 @322 RefTypeDef <Ivl:46> PUTARG_REG BB17 regmask=[rcx] minReg=1 fixed wt=0.00>
<RefPosition #168 @327 RefTypeFixedReg <Reg:rcx> BB17 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #169 @327 RefTypeUse <Ivl:46> BB17 regmask=[rcx] minReg=1 last fixed wt=0.00>
<RefPosition #170 @328 RefTypeKill BB17 regmask=[rax rcx rdx r8-r11 r16-r31] minReg=1>
<RefPosition #171 @329 RefTypeBB BB14 regmask=[] minReg=1 wt=79.22>

VAR REFPOSITIONS AFTER ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[rbx] minReg=1 regOptional wt=100.00>
<RefPosition #6   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #8   @23  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #18  @37  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #20  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #32  @67  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #34  @79  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #46  @97  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #48  @109 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rbx] minReg=1 wt=1080.03>
<RefPosition #96  @207 RefTypeUse <Ivl:0 V00> LCL_VAR BB15 regmask=[rcx] minReg=1 last copy fixed wt=1080.03>
<RefPosition #121 @259 RefTypeUse <Ivl:0 V00> LCL_VAR BB12 regmask=[rbx] minReg=1 last wt=1080.03>
--- V01  (Interval 1)
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[rdx] minReg=1 singleDefSpill fixed regOptional wt=100.00>
<RefPosition #16  @33  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 wt=394.80>
<RefPosition #28  @61  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 wt=394.80>
<RefPosition #42  @91  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 wt=394.80>
<RefPosition #56  @121 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 wt=394.80>
<RefPosition #60  @129 RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 wt=394.80>
<RefPosition #102 @217 RefTypeUse <Ivl:1 V01> LCL_VAR BB12 regmask=[rdx] minReg=1 spillAfter wt=394.80>
<RefPosition #160 @307 RefTypeUse <Ivl:1 V01> LCL_VAR BB16 regmask=[rdx] minReg=1 last reload wt=394.80>
--- V02  (Interval 2)
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02> BB00 regmask=[r8] minReg=1 fixed regOptional wt=100.00>
<RefPosition #64  @137 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[r8] minReg=1 regOptional wt=393.60>
<RefPosition #66  @147 RefTypeUse <Ivl:2 V02> LCL_VAR BB10 regmask=[r8] minReg=1 regOptional wt=393.60>
<RefPosition #68  @157 RefTypeUse <Ivl:2 V02> LCL_VAR BB11 regmask=[r8] minReg=1 last regOptional wt=393.60>
--- V03
--- V04
--- V05
--- V06
--- V07  (Interval 3)
<RefPosition #17  @34  RefTypeDef <Ivl:3 V07> STORE_LCL_VAR BB01 regmask=[rax] minReg=1 wt=180.03>
<RefPosition #70  @165 RefTypeUse <Ivl:3 V07> LCL_VAR BB15 regmask=[rax] minReg=1 last wt=180.03>
<RefPosition #106 @225 RefTypeUse <Ivl:3 V07> LCL_VAR BB12 regmask=[rax] minReg=1 last wt=180.03>
--- V08
--- V09
--- V10
--- V11  (Interval 4)
<RefPosition #31  @64  RefTypeDef <Ivl:4 V11> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1 wt=180.03>
<RefPosition #74  @173 RefTypeUse <Ivl:4 V11> LCL_VAR BB15 regmask=[rsi] minReg=1 last wt=180.03>
<RefPosition #110 @233 RefTypeUse <Ivl:4 V11> LCL_VAR BB12 regmask=[rsi] minReg=1 last wt=180.03>
--- V12
--- V13
--- V14
--- V15  (Interval 5)
<RefPosition #45  @94  RefTypeDef <Ivl:5 V15> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1 wt=180.03>
<RefPosition #78  @181 RefTypeUse <Ivl:5 V15> LCL_VAR BB15 regmask=[rdi] minReg=1 last wt=180.03>
<RefPosition #114 @241 RefTypeUse <Ivl:5 V15> LCL_VAR BB12 regmask=[rdi] minReg=1 last wt=180.03>
--- V16
--- V17
--- V18
--- V19  (Interval 6)
<RefPosition #59  @124 RefTypeDef <Ivl:6 V19> STORE_LCL_VAR BB01 regmask=[r14] minReg=1 wt=180.03>
<RefPosition #84  @193 RefTypeUse <Ivl:6 V19> LCL_VAR BB15 regmask=[r14] minReg=1 last wt=180.03>
<RefPosition #117 @249 RefTypeUse <Ivl:6 V19> LCL_VAR BB12 regmask=[r14] minReg=1 last wt=180.03>
--- V20
--- V21
--- V22
--- V23  (Interval 7)
<RefPosition #63  @132 RefTypeDef <Ivl:7 V23> STORE_LCL_VAR BB01 regmask=[r16] minReg=1 singleDefSpill writeThru regOptional wt=84.82>
<RefPosition #87  @197 RefTypeUse <Ivl:7 V23> LCL_VAR BB15 regmask=[rcx] minReg=1 last copy fixed wt=84.82>
<RefPosition #120 @255 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[r16] minReg=1 wt=84.82>
<RefPosition #128 @265 RefTypeUse <Ivl:7 V23> LCL_VAR BB12 regmask=[rdx] minReg=1 spillAfter copy fixed wt=84.82>
<RefPosition #153 @295 RefTypeUse <Ivl:7 V23> LCL_VAR BB16 regmask=[rcx] minReg=1 last reload fixed wt=84.82>
--- V24
--- V25
--- V26  (Interval 8)
<RefPosition #7   @12  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[rcx] minReg=1 wt=480.03>
<RefPosition #10  @25  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[rcx] minReg=1 regOptional wt=480.03>
<RefPosition #11  @27  RefTypeUse <Ivl:8 V26> LCL_VAR BB01 regmask=[rcx] minReg=1 last regOptional wt=480.03>
<RefPosition #15  @30  RefTypeDef <Ivl:8 V26> STORE_LCL_VAR BB01 regmask=[rcx] minReg=1 wt=480.03>
<RefPosition #72  @169 RefTypeUse <Ivl:8 V26> LCL_VAR BB15 regmask=[rcx] minReg=1 last wt=480.03>
<RefPosition #104 @221 RefTypeUse <Ivl:8 V26> LCL_VAR BB12 regmask=[rcx] minReg=1 last wt=480.03>
--- V27  (Interval 9)
<RefPosition #19  @38  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[r10] minReg=1 wt=480.03>
<RefPosition #22  @51  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[r10] minReg=1 regOptional wt=480.03>
<RefPosition #23  @53  RefTypeUse <Ivl:9 V27> LCL_VAR BB01 regmask=[r10] minReg=1 last regOptional wt=480.03>
<RefPosition #27  @56  RefTypeDef <Ivl:9 V27> STORE_LCL_VAR BB01 regmask=[r10] minReg=1 wt=480.03>
<RefPosition #76  @177 RefTypeUse <Ivl:9 V27> LCL_VAR BB15 regmask=[r10] minReg=1 last wt=480.03>
<RefPosition #108 @229 RefTypeUse <Ivl:9 V27> LCL_VAR BB12 regmask=[r10] minReg=1 last wt=480.03>
--- V28  (Interval 10)
<RefPosition #33  @68  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[r9] minReg=1 wt=480.03>
<RefPosition #36  @81  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[r9] minReg=1 regOptional wt=480.03>
<RefPosition #37  @83  RefTypeUse <Ivl:10 V28> LCL_VAR BB01 regmask=[r9] minReg=1 last regOptional wt=480.03>
<RefPosition #41  @86  RefTypeDef <Ivl:10 V28> STORE_LCL_VAR BB01 regmask=[r9] minReg=1 wt=480.03>
<RefPosition #80  @185 RefTypeUse <Ivl:10 V28> LCL_VAR BB15 regmask=[r9] minReg=1 last wt=480.03>
<RefPosition #112 @237 RefTypeUse <Ivl:10 V28> LCL_VAR BB12 regmask=[r9] minReg=1 last wt=480.03>
--- V29  (Interval 11)
<RefPosition #47  @98  RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[r11] minReg=1 wt=480.03>
<RefPosition #50  @111 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[r11] minReg=1 regOptional wt=480.03>
<RefPosition #51  @113 RefTypeUse <Ivl:11 V29> LCL_VAR BB01 regmask=[r11] minReg=1 last regOptional wt=480.03>
<RefPosition #55  @116 RefTypeDef <Ivl:11 V29> STORE_LCL_VAR BB01 regmask=[r11] minReg=1 wt=480.03>
<RefPosition #83  @193 RefTypeUse <Ivl:11 V29> LCL_VAR BB15 regmask=[r11] minReg=1 last wt=480.03>
<RefPosition #118 @249 RefTypeUse <Ivl:11 V29> LCL_VAR BB12 regmask=[r11] minReg=1 last wt=480.03>
--- V30
--- V31  (Interval 12)
<RefPosition #140 @278 RefTypeDef <Ivl:12 V31> STORE_LCL_VAR BB13 regmask=[rcx] minReg=1 wt=0.00>
<RefPosition #142 @281 RefTypeUse <Ivl:12 V31> LCL_VAR BB13 regmask=[rcx] minReg=1 last fixed wt=0.00>
--- V32

Active intervals at end of allocation:

-----------------------
RESOLVING BB BOUNDARIES
-----------------------
Resolution Candidates: {V00 V01 V02 V07 V11 V15 V19 V23 V26 V27 V28 V29}
Has Critical Edges

Prior to Resolution

BB01
use: {V00 V01 V02}
def: {V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
 in: {V00 V01 V02}
out: {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
Var=Reg beg of BB01: V00=rbx V01=rdx V02=r8 
Var=Reg end of BB01: V00=rbx V01=rdx V02=r8 V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 

BB10
use: {V02}
def: {}
 in: {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
out: {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
Var=Reg beg of BB10: V00=rbx V01=rdx V02=r8 V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 
Var=Reg end of BB10: V00=rbx V01=rdx V02=r8 V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 

BB11
use: {V02}
def: {}
 in: {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
out: {V00 V01 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
Var=Reg beg of BB11: V00=rbx V01=rdx V02=r8 V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 
Var=Reg end of BB11: V00=rbx V01=rdx V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 

BB12
use: {V00 V01 V07 V11 V15 V19 V23 V26 V27 V28 V29}
def: {}
 in: {V00 V01 V07 V11 V15 V19 V23 V26 V27 V28 V29}
out: {V01 V23}
Var=Reg beg of BB12: V00=rbx V01=rdx V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 
Var=Reg end of BB12: none

BB14
use: {}
def: {}
 in: {}
out: {}
Var=Reg beg of BB14: none
Var=Reg end of BB14: none

BB15
use: {V00 V07 V11 V15 V19 V23 V26 V27 V28 V29}
def: {}
 in: {V00 V07 V11 V15 V19 V23 V26 V27 V28 V29}
out: {}
Var=Reg beg of BB15: V00=rbx V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 
Var=Reg end of BB15: none

BB16
use: {V01 V05 V23}
def: {}
 in: {V01 V05 V23}
out: {V05}
Var=Reg beg of BB16: none
Var=Reg end of BB16: none

BB17
use: {V05}
def: {}
 in: {V05}
out: {}
Var=Reg beg of BB17: none
Var=Reg end of BB17: none

BB13  EH flow in  EH flow out
use: {}
def: {V05 V31}
 in: {V01 V23}
out: {V01 V05 V23}
Var=Reg beg of BB13: none
Var=Reg end of BB13: none


RESOLVING EDGES

  Set V00 argument initial register to rbx
  Set V01 argument initial register to rdx
  Set V02 argument initial register to r8
Trees after linear scan register allocator (LSRA)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12}
N003 (???,???) [000227] -----------                            IL_OFFSET void   INLRT @ 0x000[E-] REG NA
N005 (  1,  1) [000000] -----+-----                    t0 =    CNS_INT   ref    null REG rcx $VN.Null
                                                            /--*  t0     ref    
N007 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 NA REG NA $VN.Void
N009 (  1,  1) [000002] -----+-----                    t2 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t2     byref  
N011 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 rcx REG rcx $VN.Void
N013 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 rcx REG rcx $80
N015 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 REG NA $VN.Null
N017 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1          rcx (last use) REG rcx
N019 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N021 (  1,  1) [000192] -c---+-----                  t192 =    CNS_INT   long   8 REG NA $200
                                                            /--*  t9     byref  
                                                            +--*  t192   long   
N023 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  REG rax $240
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N025 (  3,  3) [000005] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t225   byref  
                                                            +--*  t193   byref  
N027 (  8,  8) [000226] -----------                  t226 = *  SELECTCC  byref  cond=UEQ REG rcx
                                                            /--*  t226   byref  
N029 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 rcx REG rcx $VN.Void
N031 (  1,  1) [000012] -----+-----                   t12 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
                                                            /--*  t12    long   
N033 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 rax REG rax $VN.Void
N035 (  1,  1) [000016] -----+-----                   t16 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t16    byref  
N037 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 r10 REG r10 $VN.Void
N039 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 r10 REG r10 $80
N041 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 REG NA $VN.Null
N043 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2          r10 (last use) REG r10
N045 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N047 (  1,  1) [000188] -c---+-----                  t188 =    CNS_INT   long   12 REG NA $201
                                                            /--*  t23    byref  
                                                            +--*  t188   long   
N049 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  REG r9 $242
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N051 (  3,  3) [000019] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t223   byref  
                                                            +--*  t189   byref  
N053 (  8,  8) [000224] -----------                  t224 = *  SELECTCC  byref  cond=UEQ REG r10
                                                            /--*  t224   byref  
N055 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 r10 REG r10 $VN.Void
N057 (  1,  1) [000026] -----+-----                   t26 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N059 (  1,  1) [000028] -c---+-----                   t28 =    CNS_INT   long   4 REG NA $202
                                                            /--*  t26    long   
                                                            +--*  t28    long   
N061 (  3,  3) [000029] -----+-----                   t29 = *  ADD       long   REG rsi $2c0
                                                            /--*  t29    long   
N063 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 rsi REG rsi $VN.Void
N065 (  1,  1) [000031] -----+-----                   t31 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t31    byref  
N067 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 r9 REG r9 $VN.Void
N069 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 r9 REG r9 $80
N071 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 REG NA $VN.Null
N073 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3          r9 (last use) REG r9
N075 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N077 (  1,  1) [000184] -c---+-----                  t184 =    CNS_INT   long   16 REG NA $204
                                                            /--*  t38    byref  
                                                            +--*  t184   long   
N079 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  REG r11 $244
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N081 (  3,  3) [000034] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t221   byref  
                                                            +--*  t185   byref  
N083 (  8,  8) [000222] -----------                  t222 = *  SELECTCC  byref  cond=UEQ REG r9
                                                            /--*  t222   byref  
N085 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 r9 REG r9 $VN.Void
N087 (  1,  1) [000041] -----+-----                   t41 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N089 (  1,  1) [000043] -c---+-----                   t43 =    CNS_INT   long   8 REG NA $200
                                                            /--*  t41    long   
                                                            +--*  t43    long   
N091 (  3,  3) [000044] -----+-----                   t44 = *  ADD       long   REG rdi $2c1
                                                            /--*  t44    long   
N093 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 rdi REG rdi $VN.Void
N095 (  1,  1) [000046] -----+-----                   t46 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t46    byref  
N097 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 r11 REG r11 $VN.Void
N099 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 r11 REG r11 $80
N101 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 REG NA $VN.Null
N103 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4          r11 (last use) REG r11
N105 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N107 (  1,  1) [000180] -c---+-----                  t180 =    CNS_INT   long   24 REG NA $205
                                                            /--*  t53    byref  
                                                            +--*  t180   long   
N109 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  REG r16 $246
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N111 (  3,  3) [000049] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t217   byref  
                                                            +--*  t181   byref  
N113 (  8,  8) [000218] -----------                  t218 = *  SELECTCC  byref  cond=UEQ REG r11
                                                            /--*  t218   byref  
N115 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 r11 REG r11 $VN.Void
N117 (  1,  1) [000056] -----+-----                   t56 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N119 (  1,  1) [000058] -c---+-----                   t58 =    CNS_INT   long   16 REG NA $204
                                                            /--*  t56    long   
                                                            +--*  t58    long   
N121 (  3,  3) [000059] -----+-----                   t59 = *  ADD       long   REG r14 $2c2
                                                            /--*  t59    long   
N123 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 r14 REG r14 $VN.Void
N125 (  1,  1) [000071] -----+-----                   t71 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N127 (  1,  1) [000073] -c---+-----                   t73 =    CNS_INT   long   48 REG NA $206
                                                            /--*  t71    long   
                                                            +--*  t73    long   
N129 (  3,  3) [000074] -----+-----                   t74 = *  ADD       long   REG r16 $2c3
                                                            /--*  t74    long   
N131 (  7,  6) [000075] DA---+----#                         *  STORE_LCL_VAR byref  V23 loc19        d:2 r16 REG r16 $VN.Void
N133 (  1,  1) [000076] -----+-----                   t76 =    LCL_VAR   int    V02 arg2         u:1 r8 REG r8 $100
N135 (  1,  1) [000077] -c---+-----                   t77 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t76    int    
                                                            +--*  t77    int    
N137 (  3,  3) [000078] -----+-N---                         *  CMP       void   REG NA
N139 (  5,  5) [000079] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15}
N143 (  1,  1) [000135] -----+-----                  t135 =    LCL_VAR   int    V02 arg2         u:1 r8 REG r8 $100
N145 (  1,  1) [000136] -c---+-----                  t136 =    CNS_INT   int    1 REG NA $41
                                                            /--*  t135   int    
                                                            +--*  t136   int    
N147 (  3,  3) [000137] -----+-N---                         *  CMP       void   REG NA
N149 (  5,  5) [000138] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
N153 (  1,  1) [000171] -----+-----                  t171 =    LCL_VAR   int    V02 arg2         u:1 r8 (last use) REG r8 $100
N155 (  1,  1) [000172] -c---+-----                  t172 =    CNS_INT   int    2 REG NA $42
                                                            /--*  t171   int    
                                                            +--*  t172   int    
N157 (  3,  3) [000173] -----+-N---                         *  CMP       void   REG NA
N159 (  5,  5) [000174] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14}
N213 (  1,  1) [000082] -----+----Z                   t82 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N215 (  1,  1) [000083] -c---+-N---                   t83 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t82    long   
                                                            +--*  t83    int    
N217 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
N219 (  1,  1) [000086] -----+-----                   t86 =    LCL_VAR   byref  V26 tmp1         u:4 rcx (last use) REG rcx $280
                                                            /--*  t86    byref  
N221 (  3,  2) [000087] U--XG+-----                   t87 = *  IND       int    REG rcx <l:$1cb, c:$1ca>
N223 (  3,  2) [000089] -----+-----                   t89 =    LCL_VAR   byref  V07 loc3         u:2 rax (last use) REG rax $241
                                                            /--*  t89    byref  
                                                            +--*  t87    int    
N225 ( 10,  7) [000091] UA-XG+-----                         *  STOREIND  int    REG NA $384
N227 (  1,  1) [000092] -----+-----                   t92 =    LCL_VAR   byref  V27 tmp2         u:4 r10 (last use) REG r10 $281
                                                            /--*  t92    byref  
N229 (  3,  2) [000093] U--XG+-----                   t93 = *  IND       int    REG rcx <l:$1cd, c:$1cc>
N231 (  3,  2) [000095] -----+-----                   t95 =    LCL_VAR   byref  V11 loc7         u:2 rsi (last use) REG rsi $243
                                                            /--*  t95    byref  
                                                            +--*  t93    int    
N233 ( 10,  7) [000097] UA-XG+-----                         *  STOREIND  int    REG NA $389
N235 (  1,  1) [000098] -----+-----                   t98 =    LCL_VAR   byref  V28 tmp3         u:4 r9 (last use) REG r9 $282
                                                            /--*  t98    byref  
N237 (  3,  2) [000099] U--XG+-----                   t99 = *  IND       int    REG rcx <l:$1cf, c:$1ce>
N239 (  3,  2) [000101] -----+-----                  t101 =    LCL_VAR   byref  V15 loc11        u:2 rdi (last use) REG rdi $245
                                                            /--*  t101   byref  
                                                            +--*  t99    int    
N241 ( 10,  7) [000103] UA-XG+-----                         *  STOREIND  int    REG NA $38e
N243 (  1,  1) [000104] -----+-----                  t104 =    LCL_VAR   byref  V29 tmp4         u:4 r11 (last use) REG r11 $283
                                                            /--*  t104   byref  
N245 (  7,  5) [000105] Uc-XG+-----                  t105 = *  IND       struct REG NA
N247 (  3,  2) [000107] -----+-----                  t107 =    LCL_VAR   byref  V19 loc15        u:2 r14 (last use) REG r14 $247
                                                            /--*  t107   byref  
                                                            +--*  t105   struct 
N249 ( 17, 12) [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
N251 (  3,  2) [000110] -----+-----                  t110 =    LCL_VAR   byref  V23 loc19        u:2 r16 REG r16 $248
N253 (  1,  1) [000111] -c---+-----                  t111 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t110   byref  
                                                            +--*  t111   int    
N255 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  REG NA $39d
N257 (  1,  1) [000113] -----+-----                  t113 =    LCL_VAR   byref  V00 arg0         u:1 rbx (last use) REG rbx $80
                                                            /--*  t113   byref  
N259 (  3,  2) [000114] U--XG+-----                  t114 = *  IND       ref    REG rcx <l:$39f, c:$39e>
                                                            /--*  t114   ref    
N261 (???,???) [000228] ---XG------                  t228 = *  PUTARG_REG ref    REG rcx
N263 (  3,  2) [000115] -----+----Z                  t115 =    LCL_VAR   byref  V23 loc19        u:2 r16 REG r16 $248
                                                            /--*  t115   byref  
N265 (???,???) [000229] -----------                  t229 = *  PUTARG_REG byref  REG rdx
N267 (  3, 10) [000230] Hc---------                  t230 =    CNS_INT(h) long   0x7fff6f084408 ftn REG NA
                                                            /--*  t230   long   
N269 (  5, 12) [000231] nc--G------                  t231 = *  IND       long   REG NA
                                                            /--*  t228   ref    arg0 in rcx
                                                            +--*  t229   byref  arg1 in rdx
                                                            +--*  t231   long   control expr
N271 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
N331 (  0,  0) [000117] -----+-----                            RETURN    void   REG NA $VN.Void

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}
N163 (  3,  2) [000139] -----+-----                  t139 =    LCL_VAR   byref  V07 loc3         u:2 rax (last use) REG rax $241
                                                            /--*  t139   byref  
N165 (  6,  4) [000140] U--XG+-----                  t140 = *  IND       int    REG rax <l:$1c4, c:$1c3>
N167 (  1,  1) [000142] -----+-----                  t142 =    LCL_VAR   byref  V26 tmp1         u:4 rcx (last use) REG rcx $280
                                                            /--*  t142   byref  
                                                            +--*  t140   int    
N169 ( 10,  7) [000144] UA-XG+-----                         *  STOREIND  int    REG NA $384
N171 (  3,  2) [000145] -----+-----                  t145 =    LCL_VAR   byref  V11 loc7         u:2 rsi (last use) REG rsi $243
                                                            /--*  t145   byref  
N173 (  6,  4) [000146] U--XG+-----                  t146 = *  IND       int    REG rcx <l:$1c6, c:$1c5>
N175 (  1,  1) [000148] -----+-----                  t148 =    LCL_VAR   byref  V27 tmp2         u:4 r10 (last use) REG r10 $281
                                                            /--*  t148   byref  
                                                            +--*  t146   int    
N177 ( 10,  7) [000150] UA-XG+-----                         *  STOREIND  int    REG NA $389
N179 (  3,  2) [000151] -----+-----                  t151 =    LCL_VAR   byref  V15 loc11        u:2 rdi (last use) REG rdi $245
                                                            /--*  t151   byref  
N181 (  6,  4) [000152] U--XG+-----                  t152 = *  IND       int    REG rcx <l:$1c8, c:$1c7>
N183 (  1,  1) [000154] -----+-----                  t154 =    LCL_VAR   byref  V28 tmp3         u:4 r9 (last use) REG r9 $282
                                                            /--*  t154   byref  
                                                            +--*  t152   int    
N185 ( 10,  7) [000156] UA-XG+-----                         *  STOREIND  int    REG NA $38e
N187 (  3,  2) [000157] -----+-----                  t157 =    LCL_VAR   byref  V19 loc15        u:2 r14 (last use) REG r14 $247
                                                            /--*  t157   byref  
N189 (  9,  6) [000158] Uc-XG+-----                  t158 = *  IND       struct REG NA
N191 (  1,  1) [000160] -----+-----                  t160 =    LCL_VAR   byref  V29 tmp4         u:4 r11 (last use) REG r11 $283
                                                            /--*  t160   byref  
                                                            +--*  t158   struct 
N193 ( 17, 12) [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
N195 (  3,  2) [000163] -----+-----                  t163 =    LCL_VAR   byref  V23 loc19        u:2 r16 (last use) REG r16 $248
                                                            /--*  t163   byref  
N197 (???,???) [000232] -----------                  t232 = *  PUTARG_REG byref  REG rcx
N199 (  3, 10) [000233] Hc---------                  t233 =    CNS_INT(h) long   0x7fff6f084420 ftn REG NA
                                                            /--*  t233   long   
N201 (  5, 12) [000234] nc--G------                  t234 = *  IND       long   REG NA
                                                            /--*  t232   byref  arg0 in rcx
                                                            +--*  t234   long   control expr
N203 ( 17,  8) [000164] --CXG+-----                  t164 = *  CALL      ref    <unknown method> REG rax $348
                                                            /--*  t164   ref    
               [000244] --CXG------                  t244 = *  COPY      ref    REG rdx
N205 (  1,  1) [000167] -----+-----                  t167 =    LCL_VAR   byref  V00 arg0         u:1 rbx (last use) REG rbx $80
                                                            /--*  t167   byref  
                                                            +--*  t244   ref    
N207 ( 21, 11) [000169] UACXG+-----                         *  STOREIND  ref    REG NA $395
N209 (  0,  0) [000170] -----+-----                            RETURN    void   REG NA $VN.Void

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
N293 (  3,  2) [000122] -----+----z                  t122 =    LCL_VAR   byref  V23 loc19        u:2 rcx (last use) REG rcx $248
                                                            /--*  t122   byref  
N295 (???,???) [000235] -----------                  t235 = *  PUTARG_REG byref  REG rcx
N297 (  3, 10) [000236] Hc---------                  t236 =    CNS_INT(h) long   0x7fff6f084438 ftn REG NA
                                                            /--*  t236   long   
N299 (  5, 12) [000237] nc--G------                  t237 = *  IND       long   REG NA
                                                            /--*  t235   byref  arg0 in rcx
                                                            +--*  t237   long   control expr
N301 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void
N303 (  1,  1) [000124] -----+----z                  t124 =    LCL_VAR   long   V01 arg1         u:1 rdx (last use) REG rdx $c0
N305 (  1,  1) [000125] -c---+-N---                  t125 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t124   long   
                                                            +--*  t125   int    
N307 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
N309 (  3,  2) [000128] -c---+-----                  t128 =    LCL_VAR   ref    V05 loc1         u:4 NA REG NA $480
N311 (  1,  1) [000129] -c---+-----                  t129 =    CNS_INT   ref    null REG NA $VN.Null
                                                            /--*  t128   ref    
                                                            +--*  t129   ref    
N313 (  5,  4) [000130] -----+-N---                         *  CMP       void   REG NA
N315 (  7,  6) [000131] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
N319 (  3,  2) [000132] -----+-----                  t132 =    LCL_VAR   ref    V05 loc1         u:4 rcx (last use) REG rcx $480
                                                            /--*  t132   ref    
N321 (???,???) [000238] -----------                  t238 = *  PUTARG_REG ref    REG rcx
N323 (  3, 10) [000239] Hc---------                  t239 =    CNS_INT(h) long   0x7fff6d1fcf18 ftn REG NA
                                                            /--*  t239   long   
N325 (  5, 12) [000240] nc--G------                  t240 = *  IND       long   REG NA
                                                            /--*  t238   ref    this in rcx
                                                            +--*  t240   long   control expr
N327 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this REG NA $VN.Void

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
N275 (  1,  1) [000081] -----+-----                   t81 =    CATCH_ARG ref    REG rdx $34d
                                                            /--*  t81    ref    
N277 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 rcx REG rcx $VN.Void
N279 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 rcx (last use) REG rcx $34d
                                                            /--*  t119   ref    
N281 (???,???) [000241] -----------                  t241 = *  PUTARG_REG ref    REG rcx
N283 (  3, 10) [000242] Hc---------                  t242 =    CNS_INT(h) long   0x7fff6d1fcf30 ftn REG NA
                                                            /--*  t242   long   
N285 (  5, 12) [000243] nc--G------                  t243 = *  IND       long   REG NA
                                                            /--*  t241   ref    arg0 in rcx
                                                            +--*  t243   long   control expr
N287 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> REG rax $34e
                                                            /--*  t120   ref    
N289 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 NA REG NA $VN.Void

-------------------------------------------------------------------------------------------------------------------

Final allocation
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
           0.#0   V00  Parm   Alloc    rbx  |    |    |    |V00a|    |    |    |    |    |    |    |    |    |
           0.#1   V01  Parm   Alloc    rdx  |    |    |V01a|V00a|    |    |    |    |    |    |    |    |    |
           0.#2   V02  Parm   Alloc    r8   |    |    |V01a|V00a|    |    |    |V02a|    |    |    |    |    |
           1.#3   BB1  PredBB0              |    |    |V01a|V00a|    |    |    |V02a|    |    |    |    |    |
[000000]   6.#4   C13  Def    Alloc    rcx  |    |C13a|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
[000001]   7.#5   C13  Use *  Keep     rcx  |    |C13i|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
[000007]  11.#6   V00  Use    Keep     rbx  |    |    |V01a|V00a|    |    |    |V02a|    |    |    |    |    |
          12.#7   V26  Def    Alloc    rcx  |    |V26a|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
[000193]  23.#8   V00  Use    Keep     rbx  |    |V26a|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
          24.#9   I14  Def    Alloc    rax  |I14a|V26a|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
[000005]  25.#10  V26  Use    Keep     rcx  |I14a|V26a|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
[000226]  27.#11  V26  Use *  Keep     rcx  |I14a|V26i|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
          27.#12  I14  Use *  Keep     rax  |I14i|    |V01a|V00a|    |    |    |V02a|    |    |    |    |    |
          28.#13  I15  Def    Alloc    rcx  |    |I15a|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
[000194]  29.#14  I15  Use *  Keep     rcx  |    |I15i|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
          30.#15  V26  Def    Alloc    rcx  |    |V26a|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
[000015]  33.#16  V01  Use    Keep     rdx  |    |V26a|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
          34.#17  V07  Def    Alloc    rax  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
[000021]  37.#18  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |    |    |    |    |
          38.#19  V27  Def    Alloc    r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |V27a|    |    |    |
[000189]  49.#20  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |V27a|    |    |    |
          50.#21  I16  Def    Alloc    r9   |V07a|V26a|V01a|V00a|    |    |    |V02a|I16a|V27a|    |    |    |
[000019]  51.#22  V27  Use    Keep     r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|I16a|V27a|    |    |    |
[000224]  53.#23  V27  Use *  Keep     r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|I16a|V27i|    |    |    |
          53.#24  I16  Use *  Keep     r9   |V07a|V26a|V01a|V00a|    |    |    |V02a|I16i|    |    |    |    |
          54.#25  I17  Def    Alloc    r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |I17a|    |    |    |
[000190]  55.#26  I17  Use *  Keep     r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |I17i|    |    |    |
          56.#27  V27  Def    Alloc    r10  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |V27a|    |    |    |
[000029]  61.#28  V01  Use    Keep     rdx  |V07a|V26a|V01a|V00a|    |    |    |V02a|    |V27a|    |    |    |
          62.#29  I18  Def    Alloc    rsi  |V07a|V26a|V01a|V00a|    |I18a|    |V02a|    |V27a|    |    |    |
[000030]  63.#30  I18  Use *  Keep     rsi  |V07a|V26a|V01a|V00a|    |I18i|    |V02a|    |V27a|    |    |    |
          64.#31  V11  Def    Alloc    rsi  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|    |V27a|    |    |    |
[000036]  67.#32  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|    |V27a|    |    |    |
          68.#33  V28  Def    Alloc    r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|    |    |    |
[000185]  79.#34  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|    |    |    |
          80.#35  I19  Def    Alloc    r11  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|I19a|    |    |
[000034]  81.#36  V28  Use    Keep     r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|I19a|    |    |
[000222]  83.#37  V28  Use *  Keep     r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28i|V27a|I19a|    |    |
          83.#38  I19  Use *  Keep     r11  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|    |V27a|I19i|    |    |
          84.#39  I20  Def    Alloc    r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|I20a|V27a|    |    |    |
[000186]  85.#40  I20  Use *  Keep     r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|I20i|V27a|    |    |    |
          86.#41  V28  Def    Alloc    r9   |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|    |    |    |
[000044]  91.#42  V01  Use    Keep     rdx  |V07a|V26a|V01a|V00a|    |V11a|    |V02a|V28a|V27a|    |    |    |
          92.#43  I21  Def    Alloc    rdi  |V07a|V26a|V01a|V00a|    |V11a|I21a|V02a|V28a|V27a|    |    |    |
[000045]  93.#44  I21  Use *  Keep     rdi  |V07a|V26a|V01a|V00a|    |V11a|I21i|V02a|V28a|V27a|    |    |    |
          94.#45  V15  Def    Alloc    rdi  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|    |    |    |
[000051]  97.#46  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|    |    |    |
          98.#47  V29  Def    Alloc    r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|    |    |
[000181] 109.#48  V00  Use    Keep     rbx  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|    |    |
         110.#49  I22  Def    Alloc    r16  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|    |I22a|
[000049] 111.#50  V29  Use    Keep     r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|    |I22a|
[000218] 113.#51  V29  Use *  Keep     r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29i|    |I22a|
         113.#52  I22  Use *  Keep     r16  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|    |    |I22i|
         114.#53  I23  Def    Alloc    r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|I23a|    |    |
[000182] 115.#54  I23  Use *  Keep     r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|I23i|    |    |
         116.#55  V29  Def    Alloc    r11  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|    |    |
[000059] 121.#56  V01  Use    Keep     rdx  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|    |    |
         122.#57  I24  Def    Alloc    r14  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|I24a|    |
[000060] 123.#58  I24  Use *  Keep     r14  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|I24i|    |
         124.#59  V19  Def    Alloc    r14  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|    |
[000074] 129.#60  V01  Use    Keep     rdx  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|    |
         130.#61  I25  Def    Alloc    r16  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|I25a|
[000075] 131.#62  I25  Use *  Keep     r16  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|I25i|
         132.#63  V23  Def    Alloc    r16  |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|V23a|
[000078] 137.#64  V02  Use    Keep     r8   |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|V23a|
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         141.#65  BB10 PredBB1              |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|V23a|
[000137] 147.#66  V02  Use    Keep     r8   |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|V23a|
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         151.#67  BB11 PredBB10             |V07a|V26a|V01a|V00a|    |V11a|V15a|V02a|V28a|V27a|V29a|V19a|V23a|
[000173] 157.#68  V02  Use *  Keep     r8   |V07a|V26a|V01a|V00a|    |V11a|V15a|V02i|V28a|V27a|V29a|V19a|V23a|
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         161.#69  BB15 PredBB10             |V07a|V26a|    |V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000140] 165.#70  V07  Use *  Keep     rax  |V07i|V26a|    |V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         166.#71  I26  Def    Alloc    rax  |I26a|V26a|    |V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000144] 169.#72  V26  Use *  Keep     rcx  |I26a|V26i|    |V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         169.#73  I26  Use *  Keep     rax  |I26i|    |    |V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000146] 173.#74  V11  Use *  Keep     rsi  |    |    |    |V00a|    |V11i|V15a|    |V28a|V27a|V29a|V19a|V23a|
         174.#75  I27  Def    Alloc    rcx  |    |I27a|    |V00a|    |    |V15a|    |V28a|V27a|V29a|V19a|V23a|
[000150] 177.#76  V27  Use *  Keep     r10  |    |I27a|    |V00a|    |    |V15a|    |V28a|V27i|V29a|V19a|V23a|
         177.#77  I27  Use *  Keep     rcx  |    |I27i|    |V00a|    |    |V15a|    |V28a|    |V29a|V19a|V23a|
[000152] 181.#78  V15  Use *  Keep     rdi  |    |    |    |V00a|    |    |V15i|    |V28a|    |V29a|V19a|V23a|
         182.#79  I28  Def    Alloc    rcx  |    |I28a|    |V00a|    |    |    |    |V28a|    |V29a|V19a|V23a|
[000156] 185.#80  V28  Use *  Keep     r9   |    |I28a|    |V00a|    |    |    |    |V28i|    |V29a|V19a|V23a|
         185.#81  I28  Use *  Keep     rcx  |    |I28i|    |V00a|    |    |    |    |    |    |V29a|V19a|V23a|
[000162] 193.#82  I29  Def    Alloc    mm0  |    |    |    |V00a|    |    |    |    |    |    |V29a|V19a|V23a|
         193.#83  V29  Use *  Keep     r11  |    |    |    |V00a|    |    |    |    |    |    |V29i|V19a|V23a|
         193.#84  V19  Use *  Keep     r14  |    |    |    |V00a|    |    |    |    |    |    |    |V19i|V23a|
         193.#85  I29  Use *  Keep     mm0  |    |    |    |V00a|    |    |    |    |    |    |    |    |V23a|
[000232] 197.#86  rcx  Fixd   Keep     rcx  |    |    |    |V00a|    |    |    |    |    |    |    |    |V23a|
         197.#87  V23  Use *  Copy     rcx  |    |V23i|    |V00a|    |    |    |    |    |    |    |    |V23i|
         198.#88  rcx  Fixd   Keep     rcx  |    |    |    |V00a|    |    |    |    |    |    |    |    |    |
         198.#89  I30  Def    Alloc    rcx  |    |I30a|    |V00a|    |    |    |    |    |    |    |    |    |
[000164] 203.#90  rcx  Fixd   Keep     rcx  |    |I30a|    |V00a|    |    |    |    |    |    |    |    |    |
         203.#91  I30  Use *  Keep     rcx  |    |I30i|    |V00a|    |    |    |    |    |    |    |    |    |
         204.#92       Kill   None     [rax rcx rdx r8-r11 r16-r31]
                                            |    |    |    |V00a|    |    |    |    |    |    |    |    |    |
         204.#93  rax  Fixd   Keep     rax  |    |    |    |V00a|    |    |    |    |    |    |    |    |    |
         204.#94  I31  Def    Alloc    rax  |I31a|    |    |V00a|    |    |    |    |    |    |    |    |    |
[000169] 207.#95  rcx  Fixd   Keep     rcx  |I31a|    |    |V00a|    |    |    |    |    |    |    |    |    |
         207.#96  V00  Use *  Copy     rcx  |I31a|V00i|    |V00i|    |    |    |    |    |    |    |    |    |
         207.#97  rdx  Fixd   Keep     rdx  |I31a|    |    |    |    |    |    |    |    |    |    |    |    |
                              Move     rdx  |    |    |I31i|    |    |    |    |    |    |    |    |    |    |
         208.#99       Kill   None     [rax rcx rdx r8-r11 r16-r31 mm0-mm5 mm16-mm31 k1-k7]
                                            |    |    |    |    |    |    |    |    |    |    |    |    |    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         211.#100 BB12 PredBB1              |V07a|V26a|V01a|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000085] 217.#101 I32  Def    Alloc    mm0  |V07a|V26a|V01a|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         217.#102 V01  Use    Keep     rdx  |V07a|V26a|V01i|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
                              Spill    rdx  |V07a|V26a|V01i|V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         217.#103 I32  Use *  Keep     mm0  |V07a|V26a|    |V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000087] 221.#104 V26  Use *  Keep     rcx  |V07a|V26i|    |V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         222.#105 I33  Def    Alloc    rcx  |V07a|I33a|    |V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000091] 225.#106 V07  Use *  Keep     rax  |V07i|I33a|    |V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
         225.#107 I33  Use *  Keep     rcx  |    |I33i|    |V00a|    |V11a|V15a|    |V28a|V27a|V29a|V19a|V23a|
[000093] 229.#108 V27  Use *  Keep     r10  |    |    |    |V00a|    |V11a|V15a|    |V28a|V27i|V29a|V19a|V23a|
         230.#109 I34  Def    Alloc    rcx  |    |I34a|    |V00a|    |V11a|V15a|    |V28a|    |V29a|V19a|V23a|
[000097] 233.#110 V11  Use *  Keep     rsi  |    |I34a|    |V00a|    |V11i|V15a|    |V28a|    |V29a|V19a|V23a|
         233.#111 I34  Use *  Keep     rcx  |    |I34i|    |V00a|    |    |V15a|    |V28a|    |V29a|V19a|V23a|
[000099] 237.#112 V28  Use *  Keep     r9   |    |    |    |V00a|    |    |V15a|    |V28i|    |V29a|V19a|V23a|
         238.#113 I35  Def    Alloc    rcx  |    |I35a|    |V00a|    |    |V15a|    |    |    |V29a|V19a|V23a|
[000103] 241.#114 V15  Use *  Keep     rdi  |    |I35a|    |V00a|    |    |V15i|    |    |    |V29a|V19a|V23a|
         241.#115 I35  Use *  Keep     rcx  |    |I35i|    |V00a|    |    |    |    |    |    |V29a|V19a|V23a|
[000109] 249.#116 I36  Def    Alloc    mm0  |    |    |    |V00a|    |    |    |    |    |    |V29a|V19a|V23a|
         249.#117 V19  Use *  Keep     r14  |    |    |    |V00a|    |    |    |    |    |    |V29a|V19i|V23a|
         249.#118 V29  Use *  Keep     r11  |    |    |    |V00a|    |    |    |    |    |    |V29i|    |V23a|
         249.#119 I36  Use *  Keep     mm0  |    |    |    |V00a|    |    |    |    |    |    |    |    |V23a|
[000112] 255.#120 V23  Use    Keep     r16  |    |    |    |V00a|    |    |    |    |    |    |    |    |V23a|
[000114] 259.#121 V00  Use *  Keep     rbx  |    |    |    |V00i|    |    |    |    |    |    |    |    |V23a|
         260.#122 I37  Def    Alloc    rcx  |    |I37a|    |    |    |    |    |    |    |    |    |    |V23a|
[000228] 261.#123 rcx  Fixd   Keep     rcx  |    |I37a|    |    |    |    |    |    |    |    |    |    |V23a|
         261.#124 I37  Use *  Keep     rcx  |    |I37i|    |    |    |    |    |    |    |    |    |    |V23a|
         262.#125 rcx  Fixd   Keep     rcx  |    |    |    |    |    |    |    |    |    |    |    |    |V23a|
         262.#126 I38  Def    Alloc    rcx  |    |I38a|    |    |    |    |    |    |    |    |    |    |V23a|
[000229] 265.#127 rdx  Fixd   Keep     rdx  |    |I38a|    |    |    |    |    |    |    |    |    |    |V23a|
         265.#128 V23  Use    Copy     rdx  |    |I38a|    |    |    |    |    |    |    |    |    |    |V23i|
                              Spill    r16  |    |I38a|    |    |    |    |    |    |    |    |    |    |V23i|
         266.#129 rdx  Fixd   Keep     rdx  |    |I38a|    |    |    |    |    |    |    |    |    |    |    |
         266.#130 I39  Def    Alloc    rdx  |    |I38a|I39a|    |    |    |    |    |    |    |    |    |    |
[000116] 271.#131 rcx  Fixd   Keep     rcx  |    |I38a|I39a|    |    |    |    |    |    |    |    |    |    |
         271.#132 I38  Use *  Keep     rcx  |    |I38i|I39a|    |    |    |    |    |    |    |    |    |    |
         271.#133 rdx  Fixd   Keep     rdx  |    |    |I39a|    |    |    |    |    |    |    |    |    |    |
         271.#134 I39  Use *  Keep     rdx  |    |    |I39i|    |    |    |    |    |    |    |    |    |    |
         272.#135      Kill   None     [rax rcx rdx r8-r11 r16-r31]
                                            |    |    |    |    |    |    |    |    |    |    |    |    |    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         273.#136 BB13 PredBB0              |    |    |    |    |    |    |    |    |    |    |    |    |    |
[000081] 276.#137 rdx  Fixd   Keep     rdx  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         276.#138 I40  Def    Alloc    rdx  |    |    |I40a|    |    |    |    |    |    |    |    |    |    |
[000118] 277.#139 I40  Use *  Keep     rdx  |    |    |I40i|    |    |    |    |    |    |    |    |    |    |
         278.#140 V31  Def    Alloc    rcx  |    |V31a|    |    |    |    |    |    |    |    |    |    |    |
[000241] 281.#141 rcx  Fixd   Keep     rcx  |    |V31a|    |    |    |    |    |    |    |    |    |    |    |
         281.#142 V31  Use *  Keep     rcx  |    |V31i|    |    |    |    |    |    |    |    |    |    |    |
         282.#143 rcx  Fixd   Keep     rcx  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         282.#144 I41  Def    Alloc    rcx  |    |I41a|    |    |    |    |    |    |    |    |    |    |    |
[000120] 287.#145 rcx  Fixd   Keep     rcx  |    |I41a|    |    |    |    |    |    |    |    |    |    |    |
         287.#146 I41  Use *  Keep     rcx  |    |I41i|    |    |    |    |    |    |    |    |    |    |    |
         288.#147      Kill   None     [rax rcx rdx r8-r11 r16-r31]
                                            |    |    |    |    |    |    |    |    |    |    |    |    |    |
         288.#148 rax  Fixd   Keep     rax  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         288.#149 I42  Def    Alloc    rax  |I42a|    |    |    |    |    |    |    |    |    |    |    |    |
[000121] 289.#150 I42  Use *  Keep     rax  |I42i|    |    |    |    |    |    |    |    |    |    |    |    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         291.#151 BB16 PredBB11             |    |    |    |    |    |    |    |    |    |    |    |    |    |
[000235] 295.#152 rcx  Fixd   Keep     rcx  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         295.#153 V23  Use *  ReLod    rcx  |    |V23a|    |    |    |    |    |    |    |    |    |    |    |
                              Keep     rcx  |    |V23i|    |    |    |    |    |    |    |    |    |    |    |
         296.#154 rcx  Fixd   Keep     rcx  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         296.#155 I43  Def    Alloc    rcx  |    |I43a|    |    |    |    |    |    |    |    |    |    |    |
[000123] 301.#156 rcx  Fixd   Keep     rcx  |    |I43a|    |    |    |    |    |    |    |    |    |    |    |
         301.#157 I43  Use *  Keep     rcx  |    |I43i|    |    |    |    |    |    |    |    |    |    |    |
         302.#158      Kill   None     [rax rcx rdx r8-r11 r16-r31]
                                            |    |    |    |    |    |    |    |    |    |    |    |    |    |
[000127] 307.#159 I44  Def    Alloc    mm0  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         307.#160 V01  Use *  ReLod    rdx  |    |    |V01a|    |    |    |    |    |    |    |    |    |    |
                              Keep     rdx  |    |    |V01i|    |    |    |    |    |    |    |    |    |    |
         307.#161 I44  Use *  Keep     mm0  |    |    |    |    |    |    |    |    |    |    |    |    |    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         317.#162 BB17 PredBB16             |    |    |    |    |    |    |    |    |    |    |    |    |    |
[000132] 320.#163 I45  Def    Alloc    rcx  |    |I45a|    |    |    |    |    |    |    |    |    |    |    |
[000238] 321.#164 rcx  Fixd   Keep     rcx  |    |I45a|    |    |    |    |    |    |    |    |    |    |    |
         321.#165 I45  Use *  Keep     rcx  |    |I45i|    |    |    |    |    |    |    |    |    |    |    |
         322.#166 rcx  Fixd   Keep     rcx  |    |    |    |    |    |    |    |    |    |    |    |    |    |
         322.#167 I46  Def    Alloc    rcx  |    |I46a|    |    |    |    |    |    |    |    |    |    |    |
[000133] 327.#168 rcx  Fixd   Keep     rcx  |    |I46a|    |    |    |    |    |    |    |    |    |    |    |
         327.#169 I46  Use *  Keep     rcx  |    |I46i|    |    |    |    |    |    |    |    |    |    |    |
         328.#170      Kill   None     [rax rcx rdx r8-r11 r16-r31]
                                            |    |    |    |    |    |    |    |    |    |    |    |    |    |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
TreeID   Loc RP#  Name Type  Action    Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r10 |r11 |r14 |r16 |
--------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+----+----+
         329.#171 BB14 PredBB12             |    |    |    |    |    |    |    |    |    |    |    |    |    |

Recording the maximum number of concurrent spills:

----------
LSRA Stats
----------
Register selection order: ABCDEFGHIJKLMNOPQ
Total Tracked Vars:  15
Total Reg Cand Vars: 13
Total number of Intervals: 46
Total number of RefPositions: 171
Total Number of spill temps created: 0
..........
BB00 [  100.00]: REG_ORDER = 1
BB01 [  100.00]: COVERS = 8, CALLER_CALLEE = 1, BEST_FIT = 2, REG_ORDER = 11
BB12 [   69.63]: SpillCount = 2, BEST_FIT = 3, REG_ORDER = 2
BB15 [   10.40]: CopyReg = 1, BEST_FIT = 2, REG_ORDER = 2
BB16 [   19.97]: THIS_ASSIGNED = 1, REG_ORDER = 1
BB13 [    0.00]: BEST_FIT = 1
..........
Total SpillCount : 2   Weighted: 139.264000
Total CopyReg : 1   Weighted: 10.400000
Total ResolutionMovs : 0   Weighted: 0.000000
Total SplitEdges : 0   Weighted: 0.000000
..........
Total THIS_ASSIGNED [# 3] : 1   Weighted: 19.968000
Total COVERS [# 4] : 8   Weighted: 800.000000
Total CALLER_CALLEE [# 8] : 1   Weighted: 100.000000
Total BEST_FIT [#11] : 8   Weighted: 429.696000
Total REG_ORDER [#13] : 17   Weighted: 1380.032000

TUPLE STYLE DUMP WITH REGISTER ASSIGNMENTS
Incoming Parameters:  V00(rcx=>rbx) V01(rdx) V02(r8)
BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12}
=====
  N003.                    IL_OFFSET INLRT @ 0x000[E-]
  N005. rcx             =  CNS_INT   null
  N007.                    V05 MEM; rcx
  N009.                    V00(rbx)
* N011.                    V26(rcx); rbx
  N013.                    V26(rcx)
  N015.                    CNS_INT   0
  N017.                    V26(rcx*)
  N019.                    V00(rbx)
  N021.                    CNS_INT   8
  N023. rax             =  ADD      ; rbx
  N025.                    CMP      ; rcx
  N027. rcx             =  SELECTCC ; rcx*,rax
* N029.                    V26(rcx); rcx
  N031.                    V01(rdx)
* N033.                    V07(rax); rdx
  N035.                    V00(rbx)
* N037.                    V27(r10); rbx
  N039.                    V27(r10)
  N041.                    CNS_INT   0
  N043.                    V27(r10*)
  N045.                    V00(rbx)
  N047.                    CNS_INT   12
  N049. r9              =  ADD      ; rbx
  N051.                    CMP      ; r10
  N053. r10             =  SELECTCC ; r10*,r9
* N055.                    V27(r10); r10
  N057.                    V01(rdx)
  N059.                    CNS_INT   4
  N061. rsi             =  ADD      ; rdx
* N063.                    V11(rsi); rsi
  N065.                    V00(rbx)
* N067.                    V28(r9); rbx
  N069.                    V28(r9)
  N071.                    CNS_INT   0
  N073.                    V28(r9*)
  N075.                    V00(rbx)
  N077.                    CNS_INT   16
  N079. r11             =  ADD      ; rbx
  N081.                    CMP      ; r9
  N083. r9              =  SELECTCC ; r9*,r11
* N085.                    V28(r9); r9
  N087.                    V01(rdx)
  N089.                    CNS_INT   8
  N091. rdi             =  ADD      ; rdx
* N093.                    V15(rdi); rdi
  N095.                    V00(rbx)
* N097.                    V29(r11); rbx
  N099.                    V29(r11)
  N101.                    CNS_INT   0
  N103.                    V29(r11*)
  N105.                    V00(rbx)
  N107.                    CNS_INT   24
  N109. r16             =  ADD      ; rbx
  N111.                    CMP      ; r11
  N113. r11             =  SELECTCC ; r11*,r16
* N115.                    V29(r11); r11
  N117.                    V01(rdx)
  N119.                    CNS_INT   16
  N121. r14             =  ADD      ; rdx
* N123.                    V19(r14); r14
  N125.                    V01(rdx)
  N127.                    CNS_INT   48
  N129. r16             =  ADD      ; rdx
$ N131.                    V23(r16)R; r16
  N133.                    V02(r8)
  N135.                    CNS_INT   0
  N137.                    CMP      ; r8
  N139.                    JCC       cond=UEQ
Var=Reg end of BB01: V00=rbx V01=rdx V02=r8 V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 

BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB10: V00=rbx V01=rdx V02=r8 V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 
  N143.                    V02(r8)
  N145.                    CNS_INT   1
  N147.                    CMP      ; r8
  N149.                    JCC       cond=UEQ
Var=Reg end of BB10: V00=rbx V01=rdx V02=r8 V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 

BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
=====
Predecessor for variable locations: BB10
Var=Reg beg of BB11: V00=rbx V01=rdx V02=r8 V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 
  N153.                    V02(r8*)
  N155.                    CNS_INT   2
  N157.                    CMP      ; r8*
  N159.                    JCC       cond=UEQ
Var=Reg end of BB11: V00=rbx V01=rdx V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 

BB15 [0017] [104..166) (return), preds={BB10} succs={}
=====
Predecessor for variable locations: BB10
Var=Reg beg of BB15: V00=rbx V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 
  N163.                    V07(rax*)
  N165. rax             =  IND      ; rax*
  N167.                    V26(rcx*)
  N169.                    STOREIND ; rcx*,rax
  N171.                    V11(rsi*)
  N173. rcx             =  IND      ; rsi*
  N175.                    V27(r10*)
  N177.                    STOREIND ; r10*,rcx
  N179.                    V15(rdi*)
  N181. rcx             =  IND      ; rdi*
  N183.                    V28(r9*)
  N185.                    STOREIND ; r9*,rcx
  N187.                    V19(r14*)
  N189. STK             =  IND      ; r14*
  N191.                    V29(r11*)
  N193.                    STORE_BLK; r11*,STK
  N195.                    V23(r16*)
  N197. rcx             =  PUTARG_REG; r16*
  N199.                    CNS_INT(h) 0x7fff6f084420 ftn
  N201.                    IND      
  N203. rax             =  CALL     ; rcx
  N000. rdx             =  COPY     ; rax
  N205.                    V00(rbx*)
  N207.                    STOREIND ; rbx*,rdx
  N209.                    RETURN   
Var=Reg end of BB15: none

BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB12: V00=rbx V01=rdx V26=rcx V27=r10 V28=r9 V29=r11 V07=rax V11=rsi V15=rdi V19=r14 V23=r16 
S N213.                    V01(rdx)
  N215.                    CNS_INT   0
  N217.                    STORE_BLK; rdx
  N219.                    V26(rcx*)
  N221. rcx             =  IND      ; rcx*
  N223.                    V07(rax*)
  N225.                    STOREIND ; rax*,rcx
  N227.                    V27(r10*)
  N229. rcx             =  IND      ; r10*
  N231.                    V11(rsi*)
  N233.                    STOREIND ; rsi*,rcx
  N235.                    V28(r9*)
  N237. rcx             =  IND      ; r9*
  N239.                    V15(rdi*)
  N241.                    STOREIND ; rdi*,rcx
  N243.                    V29(r11*)
  N245. STK             =  IND      ; r11*
  N247.                    V19(r14*)
  N249.                    STORE_BLK; r14*,STK
  N251.                    V23(r16)
  N253.                    CNS_INT   0
  N255.                    STOREIND ; r16
  N257.                    V00(rbx*)
  N259. rcx             =  IND      ; rbx*
  N261. rcx             =  PUTARG_REG; rcx
S N263.                    V23(r16)
  N265. rdx             =  PUTARG_REG; r16
  N267.                    CNS_INT(h) 0x7fff6f084408 ftn
  N269.                    IND      
  N271.                    CALL     ; rcx,rdx
Var=Reg end of BB12: none

BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
=====
Predecessor for variable locations: BB00
Var=Reg beg of BB13: none
  N275. rdx             =  CATCH_ARG
* N277.                    V31(rcx); rdx
  N279.                    V31(rcx*)
  N281. rcx             =  PUTARG_REG; rcx*
  N283.                    CNS_INT(h) 0x7fff6d1fcf30 ftn
  N285.                    IND      
  N287. rax             =  CALL     ; rcx
  N289.                    V05 MEM; rax
Var=Reg end of BB13: none

BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
=====
Predecessor for variable locations: BB11
Var=Reg beg of BB16: none
  N293.                    V23(rcx*)R
  N295. rcx             =  PUTARG_REG; rcx*
  N297.                    CNS_INT(h) 0x7fff6f084438 ftn
  N299.                    IND      
  N301.                    CALL     ; rcx
  N303.                    V01(rdx*)R
  N305.                    CNS_INT   0
  N307.                    STORE_BLK; rdx*
  N309.                    V05 MEM
  N311.                    CNS_INT   null
  N313.                    CMP      
  N315.                    JCC       cond=UEQ
Var=Reg end of BB16: none

BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
=====
Predecessor for variable locations: BB16
Var=Reg beg of BB17: none
  N319. rcx*            =  V05 MEM
  N321. rcx             =  PUTARG_REG; rcx*
  N323.                    CNS_INT(h) 0x7fff6d1fcf18 ftn
  N325.                    IND      
  N327.                    CALL     ; rcx
Var=Reg end of BB17: none

BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
=====
Predecessor for variable locations: BB12
Var=Reg beg of BB14: none
  N331.                    RETURN   
Var=Reg end of BB14: none




*************** Finishing PHASE Linear scan register alloc
Trees after Linear scan register alloc

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12}
N003 (???,???) [000227] -----------                            IL_OFFSET void   INLRT @ 0x000[E-] REG NA
N005 (  1,  1) [000000] -----+-----                    t0 =    CNS_INT   ref    null REG rcx $VN.Null
                                                            /--*  t0     ref    
N007 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 NA REG NA $VN.Void
N009 (  1,  1) [000002] -----+-----                    t2 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t2     byref  
N011 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 rcx REG rcx $VN.Void
N013 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 rcx REG rcx $80
N015 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 REG NA $VN.Null
N017 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1          rcx (last use) REG rcx
N019 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N021 (  1,  1) [000192] -c---+-----                  t192 =    CNS_INT   long   8 REG NA $200
                                                            /--*  t9     byref  
                                                            +--*  t192   long   
N023 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  REG rax $240
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N025 (  3,  3) [000005] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t225   byref  
                                                            +--*  t193   byref  
N027 (  8,  8) [000226] -----------                  t226 = *  SELECTCC  byref  cond=UEQ REG rcx
                                                            /--*  t226   byref  
N029 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 rcx REG rcx $VN.Void
N031 (  1,  1) [000012] -----+-----                   t12 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
                                                            /--*  t12    long   
N033 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 rax REG rax $VN.Void
N035 (  1,  1) [000016] -----+-----                   t16 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t16    byref  
N037 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 r10 REG r10 $VN.Void
N039 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 r10 REG r10 $80
N041 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 REG NA $VN.Null
N043 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2          r10 (last use) REG r10
N045 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N047 (  1,  1) [000188] -c---+-----                  t188 =    CNS_INT   long   12 REG NA $201
                                                            /--*  t23    byref  
                                                            +--*  t188   long   
N049 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  REG r9 $242
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N051 (  3,  3) [000019] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t223   byref  
                                                            +--*  t189   byref  
N053 (  8,  8) [000224] -----------                  t224 = *  SELECTCC  byref  cond=UEQ REG r10
                                                            /--*  t224   byref  
N055 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 r10 REG r10 $VN.Void
N057 (  1,  1) [000026] -----+-----                   t26 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N059 (  1,  1) [000028] -c---+-----                   t28 =    CNS_INT   long   4 REG NA $202
                                                            /--*  t26    long   
                                                            +--*  t28    long   
N061 (  3,  3) [000029] -----+-----                   t29 = *  ADD       long   REG rsi $2c0
                                                            /--*  t29    long   
N063 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 rsi REG rsi $VN.Void
N065 (  1,  1) [000031] -----+-----                   t31 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t31    byref  
N067 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 r9 REG r9 $VN.Void
N069 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 r9 REG r9 $80
N071 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 REG NA $VN.Null
N073 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3          r9 (last use) REG r9
N075 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N077 (  1,  1) [000184] -c---+-----                  t184 =    CNS_INT   long   16 REG NA $204
                                                            /--*  t38    byref  
                                                            +--*  t184   long   
N079 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  REG r11 $244
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N081 (  3,  3) [000034] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t221   byref  
                                                            +--*  t185   byref  
N083 (  8,  8) [000222] -----------                  t222 = *  SELECTCC  byref  cond=UEQ REG r9
                                                            /--*  t222   byref  
N085 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 r9 REG r9 $VN.Void
N087 (  1,  1) [000041] -----+-----                   t41 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N089 (  1,  1) [000043] -c---+-----                   t43 =    CNS_INT   long   8 REG NA $200
                                                            /--*  t41    long   
                                                            +--*  t43    long   
N091 (  3,  3) [000044] -----+-----                   t44 = *  ADD       long   REG rdi $2c1
                                                            /--*  t44    long   
N093 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 rdi REG rdi $VN.Void
N095 (  1,  1) [000046] -----+-----                   t46 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t46    byref  
N097 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 r11 REG r11 $VN.Void
N099 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 r11 REG r11 $80
N101 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 REG NA $VN.Null
N103 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4          r11 (last use) REG r11
N105 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N107 (  1,  1) [000180] -c---+-----                  t180 =    CNS_INT   long   24 REG NA $205
                                                            /--*  t53    byref  
                                                            +--*  t180   long   
N109 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  REG r16 $246
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N111 (  3,  3) [000049] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t217   byref  
                                                            +--*  t181   byref  
N113 (  8,  8) [000218] -----------                  t218 = *  SELECTCC  byref  cond=UEQ REG r11
                                                            /--*  t218   byref  
N115 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 r11 REG r11 $VN.Void
N117 (  1,  1) [000056] -----+-----                   t56 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N119 (  1,  1) [000058] -c---+-----                   t58 =    CNS_INT   long   16 REG NA $204
                                                            /--*  t56    long   
                                                            +--*  t58    long   
N121 (  3,  3) [000059] -----+-----                   t59 = *  ADD       long   REG r14 $2c2
                                                            /--*  t59    long   
N123 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 r14 REG r14 $VN.Void
N125 (  1,  1) [000071] -----+-----                   t71 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N127 (  1,  1) [000073] -c---+-----                   t73 =    CNS_INT   long   48 REG NA $206
                                                            /--*  t71    long   
                                                            +--*  t73    long   
N129 (  3,  3) [000074] -----+-----                   t74 = *  ADD       long   REG r16 $2c3
                                                            /--*  t74    long   
N131 (  7,  6) [000075] DA---+----#                         *  STORE_LCL_VAR byref  V23 loc19        d:2 r16 REG r16 $VN.Void
N133 (  1,  1) [000076] -----+-----                   t76 =    LCL_VAR   int    V02 arg2         u:1 r8 REG r8 $100
N135 (  1,  1) [000077] -c---+-----                   t77 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t76    int    
                                                            +--*  t77    int    
N137 (  3,  3) [000078] -----+-N---                         *  CMP       void   REG NA
N139 (  5,  5) [000079] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15}
N143 (  1,  1) [000135] -----+-----                  t135 =    LCL_VAR   int    V02 arg2         u:1 r8 REG r8 $100
N145 (  1,  1) [000136] -c---+-----                  t136 =    CNS_INT   int    1 REG NA $41
                                                            /--*  t135   int    
                                                            +--*  t136   int    
N147 (  3,  3) [000137] -----+-N---                         *  CMP       void   REG NA
N149 (  5,  5) [000138] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
N153 (  1,  1) [000171] -----+-----                  t171 =    LCL_VAR   int    V02 arg2         u:1 r8 (last use) REG r8 $100
N155 (  1,  1) [000172] -c---+-----                  t172 =    CNS_INT   int    2 REG NA $42
                                                            /--*  t171   int    
                                                            +--*  t172   int    
N157 (  3,  3) [000173] -----+-N---                         *  CMP       void   REG NA
N159 (  5,  5) [000174] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14}
N213 (  1,  1) [000082] -----+----Z                   t82 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N215 (  1,  1) [000083] -c---+-N---                   t83 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t82    long   
                                                            +--*  t83    int    
N217 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
N219 (  1,  1) [000086] -----+-----                   t86 =    LCL_VAR   byref  V26 tmp1         u:4 rcx (last use) REG rcx $280
                                                            /--*  t86    byref  
N221 (  3,  2) [000087] U--XG+-----                   t87 = *  IND       int    REG rcx <l:$1cb, c:$1ca>
N223 (  3,  2) [000089] -----+-----                   t89 =    LCL_VAR   byref  V07 loc3         u:2 rax (last use) REG rax $241
                                                            /--*  t89    byref  
                                                            +--*  t87    int    
N225 ( 10,  7) [000091] UA-XG+-----                         *  STOREIND  int    REG NA $384
N227 (  1,  1) [000092] -----+-----                   t92 =    LCL_VAR   byref  V27 tmp2         u:4 r10 (last use) REG r10 $281
                                                            /--*  t92    byref  
N229 (  3,  2) [000093] U--XG+-----                   t93 = *  IND       int    REG rcx <l:$1cd, c:$1cc>
N231 (  3,  2) [000095] -----+-----                   t95 =    LCL_VAR   byref  V11 loc7         u:2 rsi (last use) REG rsi $243
                                                            /--*  t95    byref  
                                                            +--*  t93    int    
N233 ( 10,  7) [000097] UA-XG+-----                         *  STOREIND  int    REG NA $389
N235 (  1,  1) [000098] -----+-----                   t98 =    LCL_VAR   byref  V28 tmp3         u:4 r9 (last use) REG r9 $282
                                                            /--*  t98    byref  
N237 (  3,  2) [000099] U--XG+-----                   t99 = *  IND       int    REG rcx <l:$1cf, c:$1ce>
N239 (  3,  2) [000101] -----+-----                  t101 =    LCL_VAR   byref  V15 loc11        u:2 rdi (last use) REG rdi $245
                                                            /--*  t101   byref  
                                                            +--*  t99    int    
N241 ( 10,  7) [000103] UA-XG+-----                         *  STOREIND  int    REG NA $38e
N243 (  1,  1) [000104] -----+-----                  t104 =    LCL_VAR   byref  V29 tmp4         u:4 r11 (last use) REG r11 $283
                                                            /--*  t104   byref  
N245 (  7,  5) [000105] Uc-XG+-----                  t105 = *  IND       struct REG NA
N247 (  3,  2) [000107] -----+-----                  t107 =    LCL_VAR   byref  V19 loc15        u:2 r14 (last use) REG r14 $247
                                                            /--*  t107   byref  
                                                            +--*  t105   struct 
N249 ( 17, 12) [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
N251 (  3,  2) [000110] -----+-----                  t110 =    LCL_VAR   byref  V23 loc19        u:2 r16 REG r16 $248
N253 (  1,  1) [000111] -c---+-----                  t111 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t110   byref  
                                                            +--*  t111   int    
N255 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  REG NA $39d
N257 (  1,  1) [000113] -----+-----                  t113 =    LCL_VAR   byref  V00 arg0         u:1 rbx (last use) REG rbx $80
                                                            /--*  t113   byref  
N259 (  3,  2) [000114] U--XG+-----                  t114 = *  IND       ref    REG rcx <l:$39f, c:$39e>
                                                            /--*  t114   ref    
N261 (???,???) [000228] ---XG------                  t228 = *  PUTARG_REG ref    REG rcx
N263 (  3,  2) [000115] -----+----Z                  t115 =    LCL_VAR   byref  V23 loc19        u:2 r16 REG r16 $248
                                                            /--*  t115   byref  
N265 (???,???) [000229] -----------                  t229 = *  PUTARG_REG byref  REG rdx
N267 (  3, 10) [000230] Hc---------                  t230 =    CNS_INT(h) long   0x7fff6f084408 ftn REG NA
                                                            /--*  t230   long   
N269 (  5, 12) [000231] nc--G------                  t231 = *  IND       long   REG NA
                                                            /--*  t228   ref    arg0 in rcx
                                                            +--*  t229   byref  arg1 in rdx
                                                            +--*  t231   long   control expr
N271 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
N331 (  0,  0) [000117] -----+-----                            RETURN    void   REG NA $VN.Void

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}
N163 (  3,  2) [000139] -----+-----                  t139 =    LCL_VAR   byref  V07 loc3         u:2 rax (last use) REG rax $241
                                                            /--*  t139   byref  
N165 (  6,  4) [000140] U--XG+-----                  t140 = *  IND       int    REG rax <l:$1c4, c:$1c3>
N167 (  1,  1) [000142] -----+-----                  t142 =    LCL_VAR   byref  V26 tmp1         u:4 rcx (last use) REG rcx $280
                                                            /--*  t142   byref  
                                                            +--*  t140   int    
N169 ( 10,  7) [000144] UA-XG+-----                         *  STOREIND  int    REG NA $384
N171 (  3,  2) [000145] -----+-----                  t145 =    LCL_VAR   byref  V11 loc7         u:2 rsi (last use) REG rsi $243
                                                            /--*  t145   byref  
N173 (  6,  4) [000146] U--XG+-----                  t146 = *  IND       int    REG rcx <l:$1c6, c:$1c5>
N175 (  1,  1) [000148] -----+-----                  t148 =    LCL_VAR   byref  V27 tmp2         u:4 r10 (last use) REG r10 $281
                                                            /--*  t148   byref  
                                                            +--*  t146   int    
N177 ( 10,  7) [000150] UA-XG+-----                         *  STOREIND  int    REG NA $389
N179 (  3,  2) [000151] -----+-----                  t151 =    LCL_VAR   byref  V15 loc11        u:2 rdi (last use) REG rdi $245
                                                            /--*  t151   byref  
N181 (  6,  4) [000152] U--XG+-----                  t152 = *  IND       int    REG rcx <l:$1c8, c:$1c7>
N183 (  1,  1) [000154] -----+-----                  t154 =    LCL_VAR   byref  V28 tmp3         u:4 r9 (last use) REG r9 $282
                                                            /--*  t154   byref  
                                                            +--*  t152   int    
N185 ( 10,  7) [000156] UA-XG+-----                         *  STOREIND  int    REG NA $38e
N187 (  3,  2) [000157] -----+-----                  t157 =    LCL_VAR   byref  V19 loc15        u:2 r14 (last use) REG r14 $247
                                                            /--*  t157   byref  
N189 (  9,  6) [000158] Uc-XG+-----                  t158 = *  IND       struct REG NA
N191 (  1,  1) [000160] -----+-----                  t160 =    LCL_VAR   byref  V29 tmp4         u:4 r11 (last use) REG r11 $283
                                                            /--*  t160   byref  
                                                            +--*  t158   struct 
N193 ( 17, 12) [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
N195 (  3,  2) [000163] -----+-----                  t163 =    LCL_VAR   byref  V23 loc19        u:2 r16 (last use) REG r16 $248
                                                            /--*  t163   byref  
N197 (???,???) [000232] -----------                  t232 = *  PUTARG_REG byref  REG rcx
N199 (  3, 10) [000233] Hc---------                  t233 =    CNS_INT(h) long   0x7fff6f084420 ftn REG NA
                                                            /--*  t233   long   
N201 (  5, 12) [000234] nc--G------                  t234 = *  IND       long   REG NA
                                                            /--*  t232   byref  arg0 in rcx
                                                            +--*  t234   long   control expr
N203 ( 17,  8) [000164] --CXG+-----                  t164 = *  CALL      ref    <unknown method> REG rax $348
                                                            /--*  t164   ref    
               [000244] --CXG------                  t244 = *  COPY      ref    REG rdx
N205 (  1,  1) [000167] -----+-----                  t167 =    LCL_VAR   byref  V00 arg0         u:1 rbx (last use) REG rbx $80
                                                            /--*  t167   byref  
                                                            +--*  t244   ref    
N207 ( 21, 11) [000169] UACXG+-----                         *  STOREIND  ref    REG NA $395
N209 (  0,  0) [000170] -----+-----                            RETURN    void   REG NA $VN.Void

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
N293 (  3,  2) [000122] -----+----z                  t122 =    LCL_VAR   byref  V23 loc19        u:2 rcx (last use) REG rcx $248
                                                            /--*  t122   byref  
N295 (???,???) [000235] -----------                  t235 = *  PUTARG_REG byref  REG rcx
N297 (  3, 10) [000236] Hc---------                  t236 =    CNS_INT(h) long   0x7fff6f084438 ftn REG NA
                                                            /--*  t236   long   
N299 (  5, 12) [000237] nc--G------                  t237 = *  IND       long   REG NA
                                                            /--*  t235   byref  arg0 in rcx
                                                            +--*  t237   long   control expr
N301 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void
N303 (  1,  1) [000124] -----+----z                  t124 =    LCL_VAR   long   V01 arg1         u:1 rdx (last use) REG rdx $c0
N305 (  1,  1) [000125] -c---+-N---                  t125 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t124   long   
                                                            +--*  t125   int    
N307 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
N309 (  3,  2) [000128] -c---+-----                  t128 =    LCL_VAR   ref    V05 loc1         u:4 NA REG NA $480
N311 (  1,  1) [000129] -c---+-----                  t129 =    CNS_INT   ref    null REG NA $VN.Null
                                                            /--*  t128   ref    
                                                            +--*  t129   ref    
N313 (  5,  4) [000130] -----+-N---                         *  CMP       void   REG NA
N315 (  7,  6) [000131] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
N319 (  3,  2) [000132] -----+-----                  t132 =    LCL_VAR   ref    V05 loc1         u:4 rcx (last use) REG rcx $480
                                                            /--*  t132   ref    
N321 (???,???) [000238] -----------                  t238 = *  PUTARG_REG ref    REG rcx
N323 (  3, 10) [000239] Hc---------                  t239 =    CNS_INT(h) long   0x7fff6d1fcf18 ftn REG NA
                                                            /--*  t239   long   
N325 (  5, 12) [000240] nc--G------                  t240 = *  IND       long   REG NA
                                                            /--*  t238   ref    this in rcx
                                                            +--*  t240   long   control expr
N327 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this REG NA $VN.Void

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
N275 (  1,  1) [000081] -----+-----                   t81 =    CATCH_ARG ref    REG rdx $34d
                                                            /--*  t81    ref    
N277 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 rcx REG rcx $VN.Void
N279 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 rcx (last use) REG rcx $34d
                                                            /--*  t119   ref    
N281 (???,???) [000241] -----------                  t241 = *  PUTARG_REG ref    REG rcx
N283 (  3, 10) [000242] Hc---------                  t242 =    CNS_INT(h) long   0x7fff6d1fcf30 ftn REG NA
                                                            /--*  t242   long   
N285 (  5, 12) [000243] nc--G------                  t243 = *  IND       long   REG NA
                                                            /--*  t241   ref    arg0 in rcx
                                                            +--*  t243   long   control expr
N287 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> REG rax $34e
                                                            /--*  t120   ref    
N289 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 NA REG NA $VN.Void

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Optimize layout
*************** In fgDoReversePostOrderLayout()

Initial BasicBlocks
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Identifying loops in DFS tree with following reverse post order:
RPO -> BB [pre, post]
00 -> BB01[0, 8]
01 -> BB10[6, 7]
02 -> BB11[8, 6]
03 -> BB15[7, 5]
04 -> BB12[1, 4]
05 -> BB13[3, 3]
06 -> BB16[4, 2]
07 -> BB17[5, 1]
08 -> BB14[2, 0]
Flow graph has no cycles; skipping identification of natural loops
*************** In fgMoveHotJumps()

Initial BasicBlocks
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** In fgMoveColdBlocks()

Initial BasicBlocks
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Optimize layout
Trees after Optimize layout

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB14(0.48),BB17(0.52)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12}
N003 (???,???) [000227] -----------                            IL_OFFSET void   INLRT @ 0x000[E-] REG NA
N005 (  1,  1) [000000] -----+-----                    t0 =    CNS_INT   ref    null REG rcx $VN.Null
                                                            /--*  t0     ref    
N007 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 NA REG NA $VN.Void
N009 (  1,  1) [000002] -----+-----                    t2 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t2     byref  
N011 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 rcx REG rcx $VN.Void
N013 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 rcx REG rcx $80
N015 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 REG NA $VN.Null
N017 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1          rcx (last use) REG rcx
N019 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N021 (  1,  1) [000192] -c---+-----                  t192 =    CNS_INT   long   8 REG NA $200
                                                            /--*  t9     byref  
                                                            +--*  t192   long   
N023 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  REG rax $240
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N025 (  3,  3) [000005] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t225   byref  
                                                            +--*  t193   byref  
N027 (  8,  8) [000226] -----------                  t226 = *  SELECTCC  byref  cond=UEQ REG rcx
                                                            /--*  t226   byref  
N029 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 rcx REG rcx $VN.Void
N031 (  1,  1) [000012] -----+-----                   t12 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
                                                            /--*  t12    long   
N033 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 rax REG rax $VN.Void
N035 (  1,  1) [000016] -----+-----                   t16 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t16    byref  
N037 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 r10 REG r10 $VN.Void
N039 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 r10 REG r10 $80
N041 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 REG NA $VN.Null
N043 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2          r10 (last use) REG r10
N045 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N047 (  1,  1) [000188] -c---+-----                  t188 =    CNS_INT   long   12 REG NA $201
                                                            /--*  t23    byref  
                                                            +--*  t188   long   
N049 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  REG r9 $242
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N051 (  3,  3) [000019] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t223   byref  
                                                            +--*  t189   byref  
N053 (  8,  8) [000224] -----------                  t224 = *  SELECTCC  byref  cond=UEQ REG r10
                                                            /--*  t224   byref  
N055 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 r10 REG r10 $VN.Void
N057 (  1,  1) [000026] -----+-----                   t26 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N059 (  1,  1) [000028] -c---+-----                   t28 =    CNS_INT   long   4 REG NA $202
                                                            /--*  t26    long   
                                                            +--*  t28    long   
N061 (  3,  3) [000029] -----+-----                   t29 = *  ADD       long   REG rsi $2c0
                                                            /--*  t29    long   
N063 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 rsi REG rsi $VN.Void
N065 (  1,  1) [000031] -----+-----                   t31 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t31    byref  
N067 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 r9 REG r9 $VN.Void
N069 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 r9 REG r9 $80
N071 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 REG NA $VN.Null
N073 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3          r9 (last use) REG r9
N075 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N077 (  1,  1) [000184] -c---+-----                  t184 =    CNS_INT   long   16 REG NA $204
                                                            /--*  t38    byref  
                                                            +--*  t184   long   
N079 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  REG r11 $244
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N081 (  3,  3) [000034] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t221   byref  
                                                            +--*  t185   byref  
N083 (  8,  8) [000222] -----------                  t222 = *  SELECTCC  byref  cond=UEQ REG r9
                                                            /--*  t222   byref  
N085 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 r9 REG r9 $VN.Void
N087 (  1,  1) [000041] -----+-----                   t41 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N089 (  1,  1) [000043] -c---+-----                   t43 =    CNS_INT   long   8 REG NA $200
                                                            /--*  t41    long   
                                                            +--*  t43    long   
N091 (  3,  3) [000044] -----+-----                   t44 = *  ADD       long   REG rdi $2c1
                                                            /--*  t44    long   
N093 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 rdi REG rdi $VN.Void
N095 (  1,  1) [000046] -----+-----                   t46 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t46    byref  
N097 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 r11 REG r11 $VN.Void
N099 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 r11 REG r11 $80
N101 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 REG NA $VN.Null
N103 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4          r11 (last use) REG r11
N105 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N107 (  1,  1) [000180] -c---+-----                  t180 =    CNS_INT   long   24 REG NA $205
                                                            /--*  t53    byref  
                                                            +--*  t180   long   
N109 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  REG r16 $246
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N111 (  3,  3) [000049] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t217   byref  
                                                            +--*  t181   byref  
N113 (  8,  8) [000218] -----------                  t218 = *  SELECTCC  byref  cond=UEQ REG r11
                                                            /--*  t218   byref  
N115 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 r11 REG r11 $VN.Void
N117 (  1,  1) [000056] -----+-----                   t56 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N119 (  1,  1) [000058] -c---+-----                   t58 =    CNS_INT   long   16 REG NA $204
                                                            /--*  t56    long   
                                                            +--*  t58    long   
N121 (  3,  3) [000059] -----+-----                   t59 = *  ADD       long   REG r14 $2c2
                                                            /--*  t59    long   
N123 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 r14 REG r14 $VN.Void
N125 (  1,  1) [000071] -----+-----                   t71 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N127 (  1,  1) [000073] -c---+-----                   t73 =    CNS_INT   long   48 REG NA $206
                                                            /--*  t71    long   
                                                            +--*  t73    long   
N129 (  3,  3) [000074] -----+-----                   t74 = *  ADD       long   REG r16 $2c3
                                                            /--*  t74    long   
N131 (  7,  6) [000075] DA---+----#                         *  STORE_LCL_VAR byref  V23 loc19        d:2 r16 REG r16 $VN.Void
N133 (  1,  1) [000076] -----+-----                   t76 =    LCL_VAR   int    V02 arg2         u:1 r8 REG r8 $100
N135 (  1,  1) [000077] -c---+-----                   t77 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t76    int    
                                                            +--*  t77    int    
N137 (  3,  3) [000078] -----+-N---                         *  CMP       void   REG NA
N139 (  5,  5) [000079] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15}
N143 (  1,  1) [000135] -----+-----                  t135 =    LCL_VAR   int    V02 arg2         u:1 r8 REG r8 $100
N145 (  1,  1) [000136] -c---+-----                  t136 =    CNS_INT   int    1 REG NA $41
                                                            /--*  t135   int    
                                                            +--*  t136   int    
N147 (  3,  3) [000137] -----+-N---                         *  CMP       void   REG NA
N149 (  5,  5) [000138] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
N153 (  1,  1) [000171] -----+-----                  t171 =    LCL_VAR   int    V02 arg2         u:1 r8 (last use) REG r8 $100
N155 (  1,  1) [000172] -c---+-----                  t172 =    CNS_INT   int    2 REG NA $42
                                                            /--*  t171   int    
                                                            +--*  t172   int    
N157 (  3,  3) [000173] -----+-N---                         *  CMP       void   REG NA
N159 (  5,  5) [000174] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}
N163 (  3,  2) [000139] -----+-----                  t139 =    LCL_VAR   byref  V07 loc3         u:2 rax (last use) REG rax $241
                                                            /--*  t139   byref  
N165 (  6,  4) [000140] U--XG+-----                  t140 = *  IND       int    REG rax <l:$1c4, c:$1c3>
N167 (  1,  1) [000142] -----+-----                  t142 =    LCL_VAR   byref  V26 tmp1         u:4 rcx (last use) REG rcx $280
                                                            /--*  t142   byref  
                                                            +--*  t140   int    
N169 ( 10,  7) [000144] UA-XG+-----                         *  STOREIND  int    REG NA $384
N171 (  3,  2) [000145] -----+-----                  t145 =    LCL_VAR   byref  V11 loc7         u:2 rsi (last use) REG rsi $243
                                                            /--*  t145   byref  
N173 (  6,  4) [000146] U--XG+-----                  t146 = *  IND       int    REG rcx <l:$1c6, c:$1c5>
N175 (  1,  1) [000148] -----+-----                  t148 =    LCL_VAR   byref  V27 tmp2         u:4 r10 (last use) REG r10 $281
                                                            /--*  t148   byref  
                                                            +--*  t146   int    
N177 ( 10,  7) [000150] UA-XG+-----                         *  STOREIND  int    REG NA $389
N179 (  3,  2) [000151] -----+-----                  t151 =    LCL_VAR   byref  V15 loc11        u:2 rdi (last use) REG rdi $245
                                                            /--*  t151   byref  
N181 (  6,  4) [000152] U--XG+-----                  t152 = *  IND       int    REG rcx <l:$1c8, c:$1c7>
N183 (  1,  1) [000154] -----+-----                  t154 =    LCL_VAR   byref  V28 tmp3         u:4 r9 (last use) REG r9 $282
                                                            /--*  t154   byref  
                                                            +--*  t152   int    
N185 ( 10,  7) [000156] UA-XG+-----                         *  STOREIND  int    REG NA $38e
N187 (  3,  2) [000157] -----+-----                  t157 =    LCL_VAR   byref  V19 loc15        u:2 r14 (last use) REG r14 $247
                                                            /--*  t157   byref  
N189 (  9,  6) [000158] Uc-XG+-----                  t158 = *  IND       struct REG NA
N191 (  1,  1) [000160] -----+-----                  t160 =    LCL_VAR   byref  V29 tmp4         u:4 r11 (last use) REG r11 $283
                                                            /--*  t160   byref  
                                                            +--*  t158   struct 
N193 ( 17, 12) [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
N195 (  3,  2) [000163] -----+-----                  t163 =    LCL_VAR   byref  V23 loc19        u:2 r16 (last use) REG r16 $248
                                                            /--*  t163   byref  
N197 (???,???) [000232] -----------                  t232 = *  PUTARG_REG byref  REG rcx
N199 (  3, 10) [000233] Hc---------                  t233 =    CNS_INT(h) long   0x7fff6f084420 ftn REG NA
                                                            /--*  t233   long   
N201 (  5, 12) [000234] nc--G------                  t234 = *  IND       long   REG NA
                                                            /--*  t232   byref  arg0 in rcx
                                                            +--*  t234   long   control expr
N203 ( 17,  8) [000164] --CXG+-----                  t164 = *  CALL      ref    <unknown method> REG rax $348
                                                            /--*  t164   ref    
               [000244] --CXG------                  t244 = *  COPY      ref    REG rdx
N205 (  1,  1) [000167] -----+-----                  t167 =    LCL_VAR   byref  V00 arg0         u:1 rbx (last use) REG rbx $80
                                                            /--*  t167   byref  
                                                            +--*  t244   ref    
N207 ( 21, 11) [000169] UACXG+-----                         *  STOREIND  ref    REG NA $395
N209 (  0,  0) [000170] -----+-----                            RETURN    void   REG NA $VN.Void

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14}
N213 (  1,  1) [000082] -----+----Z                   t82 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N215 (  1,  1) [000083] -c---+-N---                   t83 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t82    long   
                                                            +--*  t83    int    
N217 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
N219 (  1,  1) [000086] -----+-----                   t86 =    LCL_VAR   byref  V26 tmp1         u:4 rcx (last use) REG rcx $280
                                                            /--*  t86    byref  
N221 (  3,  2) [000087] U--XG+-----                   t87 = *  IND       int    REG rcx <l:$1cb, c:$1ca>
N223 (  3,  2) [000089] -----+-----                   t89 =    LCL_VAR   byref  V07 loc3         u:2 rax (last use) REG rax $241
                                                            /--*  t89    byref  
                                                            +--*  t87    int    
N225 ( 10,  7) [000091] UA-XG+-----                         *  STOREIND  int    REG NA $384
N227 (  1,  1) [000092] -----+-----                   t92 =    LCL_VAR   byref  V27 tmp2         u:4 r10 (last use) REG r10 $281
                                                            /--*  t92    byref  
N229 (  3,  2) [000093] U--XG+-----                   t93 = *  IND       int    REG rcx <l:$1cd, c:$1cc>
N231 (  3,  2) [000095] -----+-----                   t95 =    LCL_VAR   byref  V11 loc7         u:2 rsi (last use) REG rsi $243
                                                            /--*  t95    byref  
                                                            +--*  t93    int    
N233 ( 10,  7) [000097] UA-XG+-----                         *  STOREIND  int    REG NA $389
N235 (  1,  1) [000098] -----+-----                   t98 =    LCL_VAR   byref  V28 tmp3         u:4 r9 (last use) REG r9 $282
                                                            /--*  t98    byref  
N237 (  3,  2) [000099] U--XG+-----                   t99 = *  IND       int    REG rcx <l:$1cf, c:$1ce>
N239 (  3,  2) [000101] -----+-----                  t101 =    LCL_VAR   byref  V15 loc11        u:2 rdi (last use) REG rdi $245
                                                            /--*  t101   byref  
                                                            +--*  t99    int    
N241 ( 10,  7) [000103] UA-XG+-----                         *  STOREIND  int    REG NA $38e
N243 (  1,  1) [000104] -----+-----                  t104 =    LCL_VAR   byref  V29 tmp4         u:4 r11 (last use) REG r11 $283
                                                            /--*  t104   byref  
N245 (  7,  5) [000105] Uc-XG+-----                  t105 = *  IND       struct REG NA
N247 (  3,  2) [000107] -----+-----                  t107 =    LCL_VAR   byref  V19 loc15        u:2 r14 (last use) REG r14 $247
                                                            /--*  t107   byref  
                                                            +--*  t105   struct 
N249 ( 17, 12) [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
N251 (  3,  2) [000110] -----+-----                  t110 =    LCL_VAR   byref  V23 loc19        u:2 r16 REG r16 $248
N253 (  1,  1) [000111] -c---+-----                  t111 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t110   byref  
                                                            +--*  t111   int    
N255 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  REG NA $39d
N257 (  1,  1) [000113] -----+-----                  t113 =    LCL_VAR   byref  V00 arg0         u:1 rbx (last use) REG rbx $80
                                                            /--*  t113   byref  
N259 (  3,  2) [000114] U--XG+-----                  t114 = *  IND       ref    REG rcx <l:$39f, c:$39e>
                                                            /--*  t114   ref    
N261 (???,???) [000228] ---XG------                  t228 = *  PUTARG_REG ref    REG rcx
N263 (  3,  2) [000115] -----+----Z                  t115 =    LCL_VAR   byref  V23 loc19        u:2 r16 REG r16 $248
                                                            /--*  t115   byref  
N265 (???,???) [000229] -----------                  t229 = *  PUTARG_REG byref  REG rdx
N267 (  3, 10) [000230] Hc---------                  t230 =    CNS_INT(h) long   0x7fff6f084408 ftn REG NA
                                                            /--*  t230   long   
N269 (  5, 12) [000231] nc--G------                  t231 = *  IND       long   REG NA
                                                            /--*  t228   ref    arg0 in rcx
                                                            +--*  t229   byref  arg1 in rdx
                                                            +--*  t231   long   control expr
N271 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void

------------ BB16 [0019] [167..17A) -> BB14(0.48),BB17(0.52) (cond), preds={BB11,BB13} succs={BB17,BB14}
N293 (  3,  2) [000122] -----+----z                  t122 =    LCL_VAR   byref  V23 loc19        u:2 rcx (last use) REG rcx $248
                                                            /--*  t122   byref  
N295 (???,???) [000235] -----------                  t235 = *  PUTARG_REG byref  REG rcx
N297 (  3, 10) [000236] Hc---------                  t236 =    CNS_INT(h) long   0x7fff6f084438 ftn REG NA
                                                            /--*  t236   long   
N299 (  5, 12) [000237] nc--G------                  t237 = *  IND       long   REG NA
                                                            /--*  t235   byref  arg0 in rcx
                                                            +--*  t237   long   control expr
N301 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void
N303 (  1,  1) [000124] -----+----z                  t124 =    LCL_VAR   long   V01 arg1         u:1 rdx (last use) REG rdx $c0
N305 (  1,  1) [000125] -c---+-N---                  t125 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t124   long   
                                                            +--*  t125   int    
N307 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
N309 (  3,  2) [000128] -c---+-----                  t128 =    LCL_VAR   ref    V05 loc1         u:4 NA REG NA $480
N311 (  1,  1) [000129] -c---+-----                  t129 =    CNS_INT   ref    null REG NA $VN.Null
                                                            /--*  t128   ref    
                                                            +--*  t129   ref    
N313 (  5,  4) [000130] -----+-N---                         *  CMP       void   REG NA
N315 (  7,  6) [000131] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
N331 (  0,  0) [000117] -----+-----                            RETURN    void   REG NA $VN.Void

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
N319 (  3,  2) [000132] -----+-----                  t132 =    LCL_VAR   ref    V05 loc1         u:4 rcx (last use) REG rcx $480
                                                            /--*  t132   ref    
N321 (???,???) [000238] -----------                  t238 = *  PUTARG_REG ref    REG rcx
N323 (  3, 10) [000239] Hc---------                  t239 =    CNS_INT(h) long   0x7fff6d1fcf18 ftn REG NA
                                                            /--*  t239   long   
N325 (  5, 12) [000240] nc--G------                  t240 = *  IND       long   REG NA
                                                            /--*  t238   ref    this in rcx
                                                            +--*  t240   long   control expr
N327 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this REG NA $VN.Void

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
N275 (  1,  1) [000081] -----+-----                   t81 =    CATCH_ARG ref    REG rdx $34d
                                                            /--*  t81    ref    
N277 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 rcx REG rcx $VN.Void
N279 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 rcx (last use) REG rcx $34d
                                                            /--*  t119   ref    
N281 (???,???) [000241] -----------                  t241 = *  PUTARG_REG ref    REG rcx
N283 (  3, 10) [000242] Hc---------                  t242 =    CNS_INT(h) long   0x7fff6d1fcf30 ftn REG NA
                                                            /--*  t242   long   
N285 (  5, 12) [000243] nc--G------                  t243 = *  IND       long   REG NA
                                                            /--*  t241   ref    arg0 in rcx
                                                            +--*  t243   long   control expr
N287 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> REG rax $34e
                                                            /--*  t120   ref    
N289 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 NA REG NA $VN.Void

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Optimize post-layout

*************** Finishing PHASE Optimize post-layout
Trees after Optimize post-layout

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB17(0.52),BB14(0.48)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12}
N003 (???,???) [000227] -----------                            IL_OFFSET void   INLRT @ 0x000[E-] REG NA
N005 (  1,  1) [000000] -----+-----                    t0 =    CNS_INT   ref    null REG rcx $VN.Null
                                                            /--*  t0     ref    
N007 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 NA REG NA $VN.Void
N009 (  1,  1) [000002] -----+-----                    t2 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t2     byref  
N011 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 rcx REG rcx $VN.Void
N013 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 rcx REG rcx $80
N015 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 REG NA $VN.Null
N017 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1          rcx (last use) REG rcx
N019 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N021 (  1,  1) [000192] -c---+-----                  t192 =    CNS_INT   long   8 REG NA $200
                                                            /--*  t9     byref  
                                                            +--*  t192   long   
N023 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  REG rax $240
                                                            /--*  t3     byref  
                                                            +--*  t4     byref  
N025 (  3,  3) [000005] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t225   byref  
                                                            +--*  t193   byref  
N027 (  8,  8) [000226] -----------                  t226 = *  SELECTCC  byref  cond=UEQ REG rcx
                                                            /--*  t226   byref  
N029 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 rcx REG rcx $VN.Void
N031 (  1,  1) [000012] -----+-----                   t12 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
                                                            /--*  t12    long   
N033 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 rax REG rax $VN.Void
N035 (  1,  1) [000016] -----+-----                   t16 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t16    byref  
N037 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 r10 REG r10 $VN.Void
N039 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 r10 REG r10 $80
N041 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 REG NA $VN.Null
N043 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2          r10 (last use) REG r10
N045 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N047 (  1,  1) [000188] -c---+-----                  t188 =    CNS_INT   long   12 REG NA $201
                                                            /--*  t23    byref  
                                                            +--*  t188   long   
N049 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  REG r9 $242
                                                            /--*  t17    byref  
                                                            +--*  t18    byref  
N051 (  3,  3) [000019] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t223   byref  
                                                            +--*  t189   byref  
N053 (  8,  8) [000224] -----------                  t224 = *  SELECTCC  byref  cond=UEQ REG r10
                                                            /--*  t224   byref  
N055 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 r10 REG r10 $VN.Void
N057 (  1,  1) [000026] -----+-----                   t26 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N059 (  1,  1) [000028] -c---+-----                   t28 =    CNS_INT   long   4 REG NA $202
                                                            /--*  t26    long   
                                                            +--*  t28    long   
N061 (  3,  3) [000029] -----+-----                   t29 = *  ADD       long   REG rsi $2c0
                                                            /--*  t29    long   
N063 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 rsi REG rsi $VN.Void
N065 (  1,  1) [000031] -----+-----                   t31 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t31    byref  
N067 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 r9 REG r9 $VN.Void
N069 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 r9 REG r9 $80
N071 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 REG NA $VN.Null
N073 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3          r9 (last use) REG r9
N075 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N077 (  1,  1) [000184] -c---+-----                  t184 =    CNS_INT   long   16 REG NA $204
                                                            /--*  t38    byref  
                                                            +--*  t184   long   
N079 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  REG r11 $244
                                                            /--*  t32    byref  
                                                            +--*  t33    byref  
N081 (  3,  3) [000034] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t221   byref  
                                                            +--*  t185   byref  
N083 (  8,  8) [000222] -----------                  t222 = *  SELECTCC  byref  cond=UEQ REG r9
                                                            /--*  t222   byref  
N085 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 r9 REG r9 $VN.Void
N087 (  1,  1) [000041] -----+-----                   t41 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N089 (  1,  1) [000043] -c---+-----                   t43 =    CNS_INT   long   8 REG NA $200
                                                            /--*  t41    long   
                                                            +--*  t43    long   
N091 (  3,  3) [000044] -----+-----                   t44 = *  ADD       long   REG rdi $2c1
                                                            /--*  t44    long   
N093 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 rdi REG rdi $VN.Void
N095 (  1,  1) [000046] -----+-----                   t46 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                            /--*  t46    byref  
N097 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 r11 REG r11 $VN.Void
N099 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 r11 REG r11 $80
N101 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 REG NA $VN.Null
N103 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4          r11 (last use) REG r11
N105 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
N107 (  1,  1) [000180] -c---+-----                  t180 =    CNS_INT   long   24 REG NA $205
                                                            /--*  t53    byref  
                                                            +--*  t180   long   
N109 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  REG r16 $246
                                                            /--*  t47    byref  
                                                            +--*  t48    byref  
N111 (  3,  3) [000049] -----+-N---                         *  CMP       void   REG NA
                                                            /--*  t217   byref  
                                                            +--*  t181   byref  
N113 (  8,  8) [000218] -----------                  t218 = *  SELECTCC  byref  cond=UEQ REG r11
                                                            /--*  t218   byref  
N115 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 r11 REG r11 $VN.Void
N117 (  1,  1) [000056] -----+-----                   t56 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N119 (  1,  1) [000058] -c---+-----                   t58 =    CNS_INT   long   16 REG NA $204
                                                            /--*  t56    long   
                                                            +--*  t58    long   
N121 (  3,  3) [000059] -----+-----                   t59 = *  ADD       long   REG r14 $2c2
                                                            /--*  t59    long   
N123 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 r14 REG r14 $VN.Void
N125 (  1,  1) [000071] -----+-----                   t71 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N127 (  1,  1) [000073] -c---+-----                   t73 =    CNS_INT   long   48 REG NA $206
                                                            /--*  t71    long   
                                                            +--*  t73    long   
N129 (  3,  3) [000074] -----+-----                   t74 = *  ADD       long   REG r16 $2c3
                                                            /--*  t74    long   
N131 (  7,  6) [000075] DA---+----#                         *  STORE_LCL_VAR byref  V23 loc19        d:2 r16 REG r16 $VN.Void
N133 (  1,  1) [000076] -----+-----                   t76 =    LCL_VAR   int    V02 arg2         u:1 r8 REG r8 $100
N135 (  1,  1) [000077] -c---+-----                   t77 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t76    int    
                                                            +--*  t77    int    
N137 (  3,  3) [000078] -----+-N---                         *  CMP       void   REG NA
N139 (  5,  5) [000079] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15}
N143 (  1,  1) [000135] -----+-----                  t135 =    LCL_VAR   int    V02 arg2         u:1 r8 REG r8 $100
N145 (  1,  1) [000136] -c---+-----                  t136 =    CNS_INT   int    1 REG NA $41
                                                            /--*  t135   int    
                                                            +--*  t136   int    
N147 (  3,  3) [000137] -----+-N---                         *  CMP       void   REG NA
N149 (  5,  5) [000138] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16}
N153 (  1,  1) [000171] -----+-----                  t171 =    LCL_VAR   int    V02 arg2         u:1 r8 (last use) REG r8 $100
N155 (  1,  1) [000172] -c---+-----                  t172 =    CNS_INT   int    2 REG NA $42
                                                            /--*  t171   int    
                                                            +--*  t172   int    
N157 (  3,  3) [000173] -----+-N---                         *  CMP       void   REG NA
N159 (  5,  5) [000174] -----+-----                            JCC       void   cond=UEQ REG NA

------------ BB15 [0017] [104..166) (return), preds={BB10} succs={}
N163 (  3,  2) [000139] -----+-----                  t139 =    LCL_VAR   byref  V07 loc3         u:2 rax (last use) REG rax $241
                                                            /--*  t139   byref  
N165 (  6,  4) [000140] U--XG+-----                  t140 = *  IND       int    REG rax <l:$1c4, c:$1c3>
N167 (  1,  1) [000142] -----+-----                  t142 =    LCL_VAR   byref  V26 tmp1         u:4 rcx (last use) REG rcx $280
                                                            /--*  t142   byref  
                                                            +--*  t140   int    
N169 ( 10,  7) [000144] UA-XG+-----                         *  STOREIND  int    REG NA $384
N171 (  3,  2) [000145] -----+-----                  t145 =    LCL_VAR   byref  V11 loc7         u:2 rsi (last use) REG rsi $243
                                                            /--*  t145   byref  
N173 (  6,  4) [000146] U--XG+-----                  t146 = *  IND       int    REG rcx <l:$1c6, c:$1c5>
N175 (  1,  1) [000148] -----+-----                  t148 =    LCL_VAR   byref  V27 tmp2         u:4 r10 (last use) REG r10 $281
                                                            /--*  t148   byref  
                                                            +--*  t146   int    
N177 ( 10,  7) [000150] UA-XG+-----                         *  STOREIND  int    REG NA $389
N179 (  3,  2) [000151] -----+-----                  t151 =    LCL_VAR   byref  V15 loc11        u:2 rdi (last use) REG rdi $245
                                                            /--*  t151   byref  
N181 (  6,  4) [000152] U--XG+-----                  t152 = *  IND       int    REG rcx <l:$1c8, c:$1c7>
N183 (  1,  1) [000154] -----+-----                  t154 =    LCL_VAR   byref  V28 tmp3         u:4 r9 (last use) REG r9 $282
                                                            /--*  t154   byref  
                                                            +--*  t152   int    
N185 ( 10,  7) [000156] UA-XG+-----                         *  STOREIND  int    REG NA $38e
N187 (  3,  2) [000157] -----+-----                  t157 =    LCL_VAR   byref  V19 loc15        u:2 r14 (last use) REG r14 $247
                                                            /--*  t157   byref  
N189 (  9,  6) [000158] Uc-XG+-----                  t158 = *  IND       struct REG NA
N191 (  1,  1) [000160] -----+-----                  t160 =    LCL_VAR   byref  V29 tmp4         u:4 r11 (last use) REG r11 $283
                                                            /--*  t160   byref  
                                                            +--*  t158   struct 
N193 ( 17, 12) [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
N195 (  3,  2) [000163] -----+-----                  t163 =    LCL_VAR   byref  V23 loc19        u:2 r16 (last use) REG r16 $248
                                                            /--*  t163   byref  
N197 (???,???) [000232] -----------                  t232 = *  PUTARG_REG byref  REG rcx
N199 (  3, 10) [000233] Hc---------                  t233 =    CNS_INT(h) long   0x7fff6f084420 ftn REG NA
                                                            /--*  t233   long   
N201 (  5, 12) [000234] nc--G------                  t234 = *  IND       long   REG NA
                                                            /--*  t232   byref  arg0 in rcx
                                                            +--*  t234   long   control expr
N203 ( 17,  8) [000164] --CXG+-----                  t164 = *  CALL      ref    <unknown method> REG rax $348
                                                            /--*  t164   ref    
               [000244] --CXG------                  t244 = *  COPY      ref    REG rdx
N205 (  1,  1) [000167] -----+-----                  t167 =    LCL_VAR   byref  V00 arg0         u:1 rbx (last use) REG rbx $80
                                                            /--*  t167   byref  
                                                            +--*  t244   ref    
N207 ( 21, 11) [000169] UACXG+-----                         *  STOREIND  ref    REG NA $395
N209 (  0,  0) [000170] -----+-----                            RETURN    void   REG NA $VN.Void

------------ BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14}
N213 (  1,  1) [000082] -----+----Z                   t82 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
N215 (  1,  1) [000083] -c---+-N---                   t83 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t82    long   
                                                            +--*  t83    int    
N217 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
N219 (  1,  1) [000086] -----+-----                   t86 =    LCL_VAR   byref  V26 tmp1         u:4 rcx (last use) REG rcx $280
                                                            /--*  t86    byref  
N221 (  3,  2) [000087] U--XG+-----                   t87 = *  IND       int    REG rcx <l:$1cb, c:$1ca>
N223 (  3,  2) [000089] -----+-----                   t89 =    LCL_VAR   byref  V07 loc3         u:2 rax (last use) REG rax $241
                                                            /--*  t89    byref  
                                                            +--*  t87    int    
N225 ( 10,  7) [000091] UA-XG+-----                         *  STOREIND  int    REG NA $384
N227 (  1,  1) [000092] -----+-----                   t92 =    LCL_VAR   byref  V27 tmp2         u:4 r10 (last use) REG r10 $281
                                                            /--*  t92    byref  
N229 (  3,  2) [000093] U--XG+-----                   t93 = *  IND       int    REG rcx <l:$1cd, c:$1cc>
N231 (  3,  2) [000095] -----+-----                   t95 =    LCL_VAR   byref  V11 loc7         u:2 rsi (last use) REG rsi $243
                                                            /--*  t95    byref  
                                                            +--*  t93    int    
N233 ( 10,  7) [000097] UA-XG+-----                         *  STOREIND  int    REG NA $389
N235 (  1,  1) [000098] -----+-----                   t98 =    LCL_VAR   byref  V28 tmp3         u:4 r9 (last use) REG r9 $282
                                                            /--*  t98    byref  
N237 (  3,  2) [000099] U--XG+-----                   t99 = *  IND       int    REG rcx <l:$1cf, c:$1ce>
N239 (  3,  2) [000101] -----+-----                  t101 =    LCL_VAR   byref  V15 loc11        u:2 rdi (last use) REG rdi $245
                                                            /--*  t101   byref  
                                                            +--*  t99    int    
N241 ( 10,  7) [000103] UA-XG+-----                         *  STOREIND  int    REG NA $38e
N243 (  1,  1) [000104] -----+-----                  t104 =    LCL_VAR   byref  V29 tmp4         u:4 r11 (last use) REG r11 $283
                                                            /--*  t104   byref  
N245 (  7,  5) [000105] Uc-XG+-----                  t105 = *  IND       struct REG NA
N247 (  3,  2) [000107] -----+-----                  t107 =    LCL_VAR   byref  V19 loc15        u:2 r14 (last use) REG r14 $247
                                                            /--*  t107   byref  
                                                            +--*  t105   struct 
N249 ( 17, 12) [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
N251 (  3,  2) [000110] -----+-----                  t110 =    LCL_VAR   byref  V23 loc19        u:2 r16 REG r16 $248
N253 (  1,  1) [000111] -c---+-----                  t111 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t110   byref  
                                                            +--*  t111   int    
N255 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  REG NA $39d
N257 (  1,  1) [000113] -----+-----                  t113 =    LCL_VAR   byref  V00 arg0         u:1 rbx (last use) REG rbx $80
                                                            /--*  t113   byref  
N259 (  3,  2) [000114] U--XG+-----                  t114 = *  IND       ref    REG rcx <l:$39f, c:$39e>
                                                            /--*  t114   ref    
N261 (???,???) [000228] ---XG------                  t228 = *  PUTARG_REG ref    REG rcx
N263 (  3,  2) [000115] -----+----Z                  t115 =    LCL_VAR   byref  V23 loc19        u:2 r16 REG r16 $248
                                                            /--*  t115   byref  
N265 (???,???) [000229] -----------                  t229 = *  PUTARG_REG byref  REG rdx
N267 (  3, 10) [000230] Hc---------                  t230 =    CNS_INT(h) long   0x7fff6f084408 ftn REG NA
                                                            /--*  t230   long   
N269 (  5, 12) [000231] nc--G------                  t231 = *  IND       long   REG NA
                                                            /--*  t228   ref    arg0 in rcx
                                                            +--*  t229   byref  arg1 in rdx
                                                            +--*  t231   long   control expr
N271 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void

------------ BB16 [0019] [167..17A) -> BB17(0.52),BB14(0.48) (cond), preds={BB11,BB13} succs={BB14,BB17}
N293 (  3,  2) [000122] -----+----z                  t122 =    LCL_VAR   byref  V23 loc19        u:2 rcx (last use) REG rcx $248
                                                            /--*  t122   byref  
N295 (???,???) [000235] -----------                  t235 = *  PUTARG_REG byref  REG rcx
N297 (  3, 10) [000236] Hc---------                  t236 =    CNS_INT(h) long   0x7fff6f084438 ftn REG NA
                                                            /--*  t236   long   
N299 (  5, 12) [000237] nc--G------                  t237 = *  IND       long   REG NA
                                                            /--*  t235   byref  arg0 in rcx
                                                            +--*  t237   long   control expr
N301 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void
N303 (  1,  1) [000124] -----+----z                  t124 =    LCL_VAR   long   V01 arg1         u:1 rdx (last use) REG rdx $c0
N305 (  1,  1) [000125] -c---+-N---                  t125 =    CNS_INT   int    0 REG NA $40
                                                            /--*  t124   long   
                                                            +--*  t125   int    
N307 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
N309 (  3,  2) [000128] -c---+-----                  t128 =    LCL_VAR   ref    V05 loc1         u:4 NA REG NA $480
N311 (  1,  1) [000129] -c---+-----                  t129 =    CNS_INT   ref    null REG NA $VN.Null
                                                            /--*  t128   ref    
                                                            +--*  t129   ref    
N313 (  5,  4) [000130] -----+-N---                         *  CMP       void   REG NA
N315 (  7,  6) [000131] -----+-----                            JCC       void   cond=UNE REG NA

------------ BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={}
N331 (  0,  0) [000117] -----+-----                            RETURN    void   REG NA $VN.Void

------------ BB17 [0020] [17A..181) (throw), preds={BB16} succs={}
N319 (  3,  2) [000132] -----+-----                  t132 =    LCL_VAR   ref    V05 loc1         u:4 rcx (last use) REG rcx $480
                                                            /--*  t132   ref    
N321 (???,???) [000238] -----------                  t238 = *  PUTARG_REG ref    REG rcx
N323 (  3, 10) [000239] Hc---------                  t239 =    CNS_INT(h) long   0x7fff6d1fcf18 ftn REG NA
                                                            /--*  t239   long   
N325 (  5, 12) [000240] nc--G------                  t240 = *  IND       long   REG NA
                                                            /--*  t238   ref    this in rcx
                                                            +--*  t240   long   control expr
N327 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this REG NA $VN.Void

------------ BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16}
N275 (  1,  1) [000081] -----+-----                   t81 =    CATCH_ARG ref    REG rdx $34d
                                                            /--*  t81    ref    
N277 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 rcx REG rcx $VN.Void
N279 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 rcx (last use) REG rcx $34d
                                                            /--*  t119   ref    
N281 (???,???) [000241] -----------                  t241 = *  PUTARG_REG ref    REG rcx
N283 (  3, 10) [000242] Hc---------                  t242 =    CNS_INT(h) long   0x7fff6d1fcf30 ftn REG NA
                                                            /--*  t242   long   
N285 (  5, 12) [000243] nc--G------                  t243 = *  IND       long   REG NA
                                                            /--*  t241   ref    arg0 in rcx
                                                            +--*  t243   long   control expr
N287 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> REG rax $34e
                                                            /--*  t120   ref    
N289 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 NA REG NA $VN.Void

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Checking Profile Weights (flags:0xb)
All block successor flow edge likelihoods sum to 1.0

*************** Starting PHASE Determine first cold block
No procedure splitting will be done for this method

*************** Finishing PHASE Determine first cold block [no changes]

*************** Starting PHASE Place 'align' instructions
*************** In placeLoopAlignInstructions()
Identifying loops in DFS tree with following reverse post order:
RPO -> BB [pre, post]
00 -> BB01[0, 8]
01 -> BB10[1, 7]
02 -> BB15[8, 6]
03 -> BB11[2, 5]
04 -> BB12[3, 4]
05 -> BB13[5, 3]
06 -> BB16[6, 2]
07 -> BB17[7, 1]
08 -> BB14[4, 0]
Flow graph has no cycles; skipping identification of natural loops
Not checking for any loops as fgMightHaveNaturalLoops is false

*************** Finishing PHASE Place 'align' instructions [no changes]
*************** In genGenerateCode()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC hascall gcsafe
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB17(0.52),BB14(0.48)   ( cond )                     i LIR IBC hascall gcsafe bwd bwd-src
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC bwd-target
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Generate code
*************** In fgDebugCheckBBlist
Finalizing stack frame
Recording Var Locations at start of BB01
  V00(rbx)  V01(rdx)  V02(r8)
Modified regs: [rax rcx rdx rbx rsi rdi r8-r11 r14 r16-r31 mm0-mm5 mm16-mm31 k1-k7]
Callee-saved registers pushed: 4 [rbx rsi rdi r14]
*************** In lvaAssignFrameOffsets(FINAL_FRAME_LAYOUT)
Set V00 to offset 0
Set V01 to offset 8
Set V02 to offset 16
Set V03 to offset 24
Assign V05 loc1, size=8, stkOffs=-0x38
Assign V23 loc19, size=8, stkOffs=-0x40
Assign V32 PSPSym, size=8, stkOffs=-0x48
Assign V25 OutArgs, size=32, stkOffs=-0x68
--- delta bump 8 for RA
--- delta bump 8 for FP
--- delta bump 0 for FP frame
--- virtual stack offset to actual stack offset delta is 16
-- V00 was 0, now 16
-- V01 was 8, now 24
-- V02 was 16, now 32
-- V03 was 24, now 40
-- V05 was -56, now -40
-- V23 was -64, now -48
-- V25 was -104, now -88
-- V32 was -80, now -64
; Final local variable assignments
;
;  V00 arg0         [V00,T00] ( 12, 10.80)   byref  ->  rbx         single-def
;  V01 arg1         [V01,T01] (  9,  7.90)    long  ->  [rbp+0x18]  EH-live single-def
;  V02 arg2         [V02,T02] (  5,  3.94)     int  ->   r8         single-def
;* V03 arg3         [V03    ] (  0,  0   )   byref  ->  zero-ref    single-def
;* V04 loc0         [V04    ] (  0,  0   )     int  ->  zero-ref   
;  V05 loc1         [V05,T12] (  4,  1.20)     ref  ->  [rbp-0x28]  do-not-enreg[M] class-hnd EH-live <System.Runtime.ExceptionServices.ExceptionDispatchInfo>
;* V06 loc2         [V06    ] (  0,  0   )   byref  ->  zero-ref    single-def
;  V07 loc3         [V07,T07] (  3,  1.80)   byref  ->  rax         single-def
;* V08 loc4         [V08    ] (  0,  0   )     int  ->  zero-ref   
;* V09 loc5         [V09    ] (  0,  0   )     int  ->  zero-ref   
;* V10 loc6         [V10    ] (  0,  0   )   byref  ->  zero-ref    single-def
;  V11 loc7         [V11,T08] (  3,  1.80)   byref  ->  rsi         single-def
;* V12 loc8         [V12    ] (  0,  0   )     int  ->  zero-ref   
;* V13 loc9         [V13    ] (  0,  0   )     int  ->  zero-ref   
;* V14 loc10        [V14    ] (  0,  0   )   byref  ->  zero-ref    single-def
;  V15 loc11        [V15,T09] (  3,  1.80)   byref  ->  rdi         single-def
;* V16 loc12        [V16    ] (  0,  0   )     int  ->  zero-ref   
;* V17 loc13        [V17    ] (  0,  0   )     int  ->  zero-ref   
;* V18 loc14        [V18    ] (  0,  0   )   byref  ->  zero-ref    single-def
;  V19 loc15        [V19,T10] (  3,  1.80)   byref  ->  r14         single-def
;* V20 loc16        [V20    ] (  0,  0   )  struct (32) zero-ref    do-not-enreg[S] <System.Data.OleDb.tagDBIDX>
;* V21 loc17        [V21    ] (  0,  0   )  struct (32) zero-ref    do-not-enreg[S] <System.Data.OleDb.tagDBIDX>
;* V22 loc18        [V22    ] (  0,  0   )   byref  ->  zero-ref    single-def
;  V23 loc19        [V23,T11] (  5,  1.70)   byref  ->  [rbp-0x30]  EH-live spill-single-def
;* V24 loc20        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd <<unknown class>>
;  V25 OutArgs      [V25    ] (  1,  1   )  struct (32) [rsp+0x00]  do-not-enreg[XS] addr-exposed "OutgoingArgSpace"
;  V26 tmp1         [V26,T03] (  6,  4.80)   byref  ->  rcx        
;  V27 tmp2         [V27,T04] (  6,  4.80)   byref  ->  r10        
;  V28 tmp3         [V28,T05] (  6,  4.80)   byref  ->   r9        
;  V29 tmp4         [V29,T06] (  6,  4.80)   byref  ->  r11        
;* V30 tmp5         [V30    ] (  0,  0   )   byref  ->  zero-ref   
;  V31 tmp6         [V31,T14] (  2,  0   )     ref  ->  rcx         class-hnd single-def "impSpillSpecialSideEff" <<unknown class>>
;  V32 PSPSym       [V32,T13] (  1,  1   )    long  ->  [rbp-0x40]  do-not-enreg[V] "PSPSym"
;
; Lcl frame size = 64
Created:
      G_M18993_IG02:        ; offs=0x000000, size=0x0000, bbWeight=1, gcrefRegs=0000 {}
Mark labels for codegen
  BB01 : first block
  BB12 : branch target
  BB15 : branch target
  BB16 : branch target
  BB12 : branch target
  BB14 : branch target
  BB17 : branch target
  BB16 : branch target
  BB12 : try begin
  BB13 : hnd begin
  BB16 : try end
*************** After genMarkLabelsForCodegen()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   IBC [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    100 [000..07B)-> BB12(0.48),BB10(0.52)   ( cond )                     i LIR IBC label
BB10 [0011]  1       BB01                  0.52  52 [07B..082)-> BB15(0.2),BB11(0.8)     ( cond )                     i LIR IBC
BB11 [0012]  1       BB10                  0.42  42 [082..089)-> BB16(0.48),BB12(0.52)   ( cond )                     i LIR IBC
BB15 [0017]  1       BB10                  0.10  10 [104..166)                           (return)                     i LIR IBC label hascall gcsafe
BB12 [0014]  2  0    BB01,BB11             0.70  70 [089..0F8)-> BB14(1)                 (always) T0      try { }     i LIR IBC keep label hascall gcsafe
BB16 [0019]  2       BB11,BB13             0.20  20 [167..17A)-> BB17(0.52),BB14(0.48)   ( cond )                     i LIR IBC label hascall gcsafe bwd bwd-src
BB14 [0016]  2       BB12,BB16             0.79  79 [103..104)                           (return)                     i LIR IBC label bwd-target
BB17 [0020]  1       BB16                  0      0 [17A..181)                           (throw )                     i LIR IBC rare label hascall gcsafe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB13 [0015]  1     0                       0      0 [0F8..103)-> BB16(1)                 ( cret )    H0 F catch { }   i LIR IBC rare keep label hascall xentry gcsafe flet
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Setting stack level from -572662307 to 0

=============== Generating BB01 [0000] [000..07B) -> BB12(0.48),BB10(0.52) (cond), preds={} succs={BB10,BB12} flags=0x00000000.04008011: i LIR IBC label
BB01 IN (3)={V00 V01 V02                                        } + ByrefExposed + GcHeap
     OUT(13)={V00 V01 V02 V26 V27 V28 V29 V07 V11 V15 V19 V23 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB01
  V00(rbx)  V01(rdx)  V02(r8)
Change life 0000000000000000 {} -> 0000000000000007 {V00 V01 V02}
							V00 in reg rbx is becoming live  [------]
							Live regs: 0000000000000000 {} + {rbx} => 0000000000000008 {rbx}
							V01 in reg rdx is becoming live  [------]
							Live regs: 0000000000000008 {rbx} + {rdx} => 000000000000000C {rdx rbx}
							V02 in reg r8 is becoming live  [------]
							Live regs: 000000000000000C {rdx rbx} + {r8} => 000000000000010C {rdx rbx r8}
							Live regs: (unchanged) 000000000000010C {rdx rbx r8}
							GC regs: (unchanged) 0000 {}
							Byref regs: (unchanged) 0008 {rbx}

      L_M18993_BB01:
Label: G_M18993_IG02, GCvars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0008 {rbx}
Generating: N003 (???,???) [000227] -----------                            IL_OFFSET void   INLRT @ 0x000[E-] REG NA
Generating: N005 (  1,  1) [000000] -----+-----                    t0 =    CNS_INT   ref    null REG rcx $VN.Null
Mapped BB01 to G_M18993_IG02
IN0001:        xor      rcx, rcx
							GC regs: 0000 {} => 0002 {rcx}
                                                                        /--*  t0     ref    
Generating: N007 (  5,  4) [000001] DA---+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:2 NA REG NA $VN.Void
							GC regs: 0002 {rcx} => 0000 {}
IN0002:        mov      gword ptr [V05 rbp-0x28], rcx
							Live vars after [000001]: {V00 V01 V02} +{V05} => {V00 V01 V02 V05}
							GC vars after [000001]: {} => {V05}
Generating: N009 (  1,  1) [000002] -----+-----                    t2 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                                        /--*  t2     byref  
Generating: N011 (  1,  3) [000007] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:2 rcx REG rcx $VN.Void
IN0003:        mov      rcx, rbx
							V26 in reg rcx is becoming live  [000007]
							Live regs: 000000000000010C {rdx rbx r8} + {rcx} => 000000000000010E {rcx rdx rbx r8}
							Live vars after [000007]: {V00 V01 V02 V05} +{V26} => {V00 V01 V02 V05 V26}
							Byref regs: 0008 {rbx} => 000A {rcx rbx}
Generating: N013 (  1,  1) [000003] -----+-----                    t3 =    LCL_VAR   byref  V26 tmp1         u:2 rcx REG rcx $80
Generating: N015 (  1,  1) [000004] -c---+-----                    t4 =    CNS_INT   byref  0 REG NA $VN.Null
Generating: N017 (  1,  1) [000225] -----------                  t225 =    LCL_VAR   byref  V26 tmp1          rcx (last use) REG rcx
Generating: N019 (  1,  1) [000009] -----+-----                    t9 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
Generating: N021 (  1,  1) [000192] -c---+-----                  t192 =    CNS_INT   long   8 REG NA $200
                                                                        /--*  t9     byref  
                                                                        +--*  t192   long   
Generating: N023 (  3,  3) [000193] -----+-----                  t193 = *  ADD       byref  REG rax $240
IN0004:        lea      rax, bword ptr [rbx+0x08]
							Byref regs: 000A {rcx rbx} => 000B {rax rcx rbx}
                                                                        /--*  t3     byref  
                                                                        +--*  t4     byref  
Generating: N025 (  3,  3) [000005] -----+-N---                         *  CMP       void   REG NA
IN0005:        test     rcx, rcx
                                                                        /--*  t225   byref  
                                                                        +--*  t193   byref  
Generating: N027 (  8,  8) [000226] -----------                  t226 = *  SELECTCC  byref  cond=UEQ REG rcx
							V26 in reg rcx is becoming dead  [000225]
							Live regs: 000000000000010E {rcx rdx rbx r8} - {rcx} => 000000000000010C {rdx rbx r8}
							Live vars after [000225]: {V00 V01 V02 V05 V26} -{V26} => {V00 V01 V02 V05}
							Byref regs: 000B {rax rcx rbx} => 0009 {rax rbx}
							Byref regs: 0009 {rax rbx} => 0008 {rbx}
IN0006:        cmovne   rcx, rax
							Byref regs: 0008 {rbx} => 000A {rcx rbx}
                                                                        /--*  t226   byref  
Generating: N029 (  8,  8) [000194] DA---+-----                         *  STORE_LCL_VAR byref  V26 tmp1         d:3 rcx REG rcx $VN.Void
							Byref regs: 000A {rcx rbx} => 0008 {rbx}
							V26 in reg rcx is becoming live  [000194]
							Live regs: 000000000000010C {rdx rbx r8} + {rcx} => 000000000000010E {rcx rdx rbx r8}
							Live vars after [000194]: {V00 V01 V02 V05} +{V26} => {V00 V01 V02 V05 V26}
							Byref regs: 0008 {rbx} => 000A {rcx rbx}
Generating: N031 (  1,  1) [000012] -----+-----                   t12 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
                                                                        /--*  t12    long   
Generating: N033 (  5,  4) [000015] DA---+-----                         *  STORE_LCL_VAR byref  V07 loc3         d:2 rax REG rax $VN.Void
IN0007:        mov      rax, rdx
							V07 in reg rax is becoming live  [000015]
							Live regs: 000000000000010E {rcx rdx rbx r8} + {rax} => 000000000000010F {rax rcx rdx rbx r8}
							Live vars after [000015]: {V00 V01 V02 V05 V26} +{V07} => {V00 V01 V02 V05 V07 V26}
							Byref regs: 000A {rcx rbx} => 000B {rax rcx rbx}
Generating: N035 (  1,  1) [000016] -----+-----                   t16 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                                        /--*  t16    byref  
Generating: N037 (  1,  3) [000021] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:2 r10 REG r10 $VN.Void
IN0008:        mov      r10, rbx
							V27 in reg r10 is becoming live  [000021]
							Live regs: 000000000000010F {rax rcx rdx rbx r8} + {r10} => 000000000000050F {rax rcx rdx rbx r8 r10}
							Live vars after [000021]: {V00 V01 V02 V05 V07 V26} +{V27} => {V00 V01 V02 V05 V07 V26 V27}
							Byref regs: 000B {rax rcx rbx} => 040B {rax rcx rbx r10}
Generating: N039 (  1,  1) [000017] -----+-----                   t17 =    LCL_VAR   byref  V27 tmp2         u:2 r10 REG r10 $80
Generating: N041 (  1,  1) [000018] -c---+-----                   t18 =    CNS_INT   byref  0 REG NA $VN.Null
Generating: N043 (  1,  1) [000223] -----------                  t223 =    LCL_VAR   byref  V27 tmp2          r10 (last use) REG r10
Generating: N045 (  1,  1) [000023] -----+-----                   t23 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
Generating: N047 (  1,  1) [000188] -c---+-----                  t188 =    CNS_INT   long   12 REG NA $201
                                                                        /--*  t23    byref  
                                                                        +--*  t188   long   
Generating: N049 (  3,  3) [000189] -----+-----                  t189 = *  ADD       byref  REG r9 $242
IN0009:        lea      r9, bword ptr [rbx+0x0C]
							Byref regs: 040B {rax rcx rbx r10} => 060B {rax rcx rbx r9 r10}
                                                                        /--*  t17    byref  
                                                                        +--*  t18    byref  
Generating: N051 (  3,  3) [000019] -----+-N---                         *  CMP       void   REG NA
IN000a:        test     r10, r10
                                                                        /--*  t223   byref  
                                                                        +--*  t189   byref  
Generating: N053 (  8,  8) [000224] -----------                  t224 = *  SELECTCC  byref  cond=UEQ REG r10
							V27 in reg r10 is becoming dead  [000223]
							Live regs: 000000000000050F {rax rcx rdx rbx r8 r10} - {r10} => 000000000000010F {rax rcx rdx rbx r8}
							Live vars after [000223]: {V00 V01 V02 V05 V07 V26 V27} -{V27} => {V00 V01 V02 V05 V07 V26}
							Byref regs: 060B {rax rcx rbx r9 r10} => 020B {rax rcx rbx r9}
							Byref regs: 020B {rax rcx rbx r9} => 000B {rax rcx rbx}
IN000b:        cmovne   r10, r9
							Byref regs: 000B {rax rcx rbx} => 040B {rax rcx rbx r10}
                                                                        /--*  t224   byref  
Generating: N055 (  8,  8) [000190] DA---+-----                         *  STORE_LCL_VAR byref  V27 tmp2         d:3 r10 REG r10 $VN.Void
							Byref regs: 040B {rax rcx rbx r10} => 000B {rax rcx rbx}
							V27 in reg r10 is becoming live  [000190]
							Live regs: 000000000000010F {rax rcx rdx rbx r8} + {r10} => 000000000000050F {rax rcx rdx rbx r8 r10}
							Live vars after [000190]: {V00 V01 V02 V05 V07 V26} +{V27} => {V00 V01 V02 V05 V07 V26 V27}
							Byref regs: 000B {rax rcx rbx} => 040B {rax rcx rbx r10}
Generating: N057 (  1,  1) [000026] -----+-----                   t26 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
Generating: N059 (  1,  1) [000028] -c---+-----                   t28 =    CNS_INT   long   4 REG NA $202
                                                                        /--*  t26    long   
                                                                        +--*  t28    long   
Generating: N061 (  3,  3) [000029] -----+-----                   t29 = *  ADD       long   REG rsi $2c0
IN000c:        lea      rsi, [rdx+0x04]
                                                                        /--*  t29    long   
Generating: N063 (  7,  6) [000030] DA---+-----                         *  STORE_LCL_VAR byref  V11 loc7         d:2 rsi REG rsi $VN.Void
							V11 in reg rsi is becoming live  [000030]
							Live regs: 000000000000050F {rax rcx rdx rbx r8 r10} + {rsi} => 000000000000054F {rax rcx rdx rbx rsi r8 r10}
							Live vars after [000030]: {V00 V01 V02 V05 V07 V26 V27} +{V11} => {V00 V01 V02 V05 V07 V11 V26 V27}
							Byref regs: 040B {rax rcx rbx r10} => 044B {rax rcx rbx rsi r10}
Generating: N065 (  1,  1) [000031] -----+-----                   t31 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                                        /--*  t31    byref  
Generating: N067 (  1,  3) [000036] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:2 r9 REG r9 $VN.Void
IN000d:        mov      r9, rbx
							V28 in reg r9 is becoming live  [000036]
							Live regs: 000000000000054F {rax rcx rdx rbx rsi r8 r10} + {r9} => 000000000000074F {rax rcx rdx rbx rsi r8 r9 r10}
							Live vars after [000036]: {V00 V01 V02 V05 V07 V11 V26 V27} +{V28} => {V00 V01 V02 V05 V07 V11 V26 V27 V28}
							Byref regs: 044B {rax rcx rbx rsi r10} => 064B {rax rcx rbx rsi r9 r10}
Generating: N069 (  1,  1) [000032] -----+-----                   t32 =    LCL_VAR   byref  V28 tmp3         u:2 r9 REG r9 $80
Generating: N071 (  1,  1) [000033] -c---+-----                   t33 =    CNS_INT   byref  0 REG NA $VN.Null
Generating: N073 (  1,  1) [000221] -----------                  t221 =    LCL_VAR   byref  V28 tmp3          r9 (last use) REG r9
Generating: N075 (  1,  1) [000038] -----+-----                   t38 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
Generating: N077 (  1,  1) [000184] -c---+-----                  t184 =    CNS_INT   long   16 REG NA $204
                                                                        /--*  t38    byref  
                                                                        +--*  t184   long   
Generating: N079 (  3,  3) [000185] -----+-----                  t185 = *  ADD       byref  REG r11 $244
IN000e:        lea      r11, bword ptr [rbx+0x10]
							Byref regs: 064B {rax rcx rbx rsi r9 r10} => 0E4B {rax rcx rbx rsi r9 r10 r11}
                                                                        /--*  t32    byref  
                                                                        +--*  t33    byref  
Generating: N081 (  3,  3) [000034] -----+-N---                         *  CMP       void   REG NA
IN000f:        test     r9, r9
                                                                        /--*  t221   byref  
                                                                        +--*  t185   byref  
Generating: N083 (  8,  8) [000222] -----------                  t222 = *  SELECTCC  byref  cond=UEQ REG r9
							V28 in reg r9 is becoming dead  [000221]
							Live regs: 000000000000074F {rax rcx rdx rbx rsi r8 r9 r10} - {r9} => 000000000000054F {rax rcx rdx rbx rsi r8 r10}
							Live vars after [000221]: {V00 V01 V02 V05 V07 V11 V26 V27 V28} -{V28} => {V00 V01 V02 V05 V07 V11 V26 V27}
							Byref regs: 0E4B {rax rcx rbx rsi r9 r10 r11} => 0C4B {rax rcx rbx rsi r10 r11}
							Byref regs: 0C4B {rax rcx rbx rsi r10 r11} => 044B {rax rcx rbx rsi r10}
IN0010:        cmovne   r9, r11
							Byref regs: 044B {rax rcx rbx rsi r10} => 064B {rax rcx rbx rsi r9 r10}
                                                                        /--*  t222   byref  
Generating: N085 (  8,  8) [000186] DA---+-----                         *  STORE_LCL_VAR byref  V28 tmp3         d:3 r9 REG r9 $VN.Void
							Byref regs: 064B {rax rcx rbx rsi r9 r10} => 044B {rax rcx rbx rsi r10}
							V28 in reg r9 is becoming live  [000186]
							Live regs: 000000000000054F {rax rcx rdx rbx rsi r8 r10} + {r9} => 000000000000074F {rax rcx rdx rbx rsi r8 r9 r10}
							Live vars after [000186]: {V00 V01 V02 V05 V07 V11 V26 V27} +{V28} => {V00 V01 V02 V05 V07 V11 V26 V27 V28}
							Byref regs: 044B {rax rcx rbx rsi r10} => 064B {rax rcx rbx rsi r9 r10}
Generating: N087 (  1,  1) [000041] -----+-----                   t41 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
Generating: N089 (  1,  1) [000043] -c---+-----                   t43 =    CNS_INT   long   8 REG NA $200
                                                                        /--*  t41    long   
                                                                        +--*  t43    long   
Generating: N091 (  3,  3) [000044] -----+-----                   t44 = *  ADD       long   REG rdi $2c1
IN0011:        lea      rdi, [rdx+0x08]
                                                                        /--*  t44    long   
Generating: N093 (  7,  6) [000045] DA---+-----                         *  STORE_LCL_VAR byref  V15 loc11        d:2 rdi REG rdi $VN.Void
							V15 in reg rdi is becoming live  [000045]
							Live regs: 000000000000074F {rax rcx rdx rbx rsi r8 r9 r10} + {rdi} => 00000000000007CF {rax rcx rdx rbx rsi rdi r8 r9 r10}
							Live vars after [000045]: {V00 V01 V02 V05 V07 V11 V26 V27 V28} +{V15} => {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28}
							Byref regs: 064B {rax rcx rbx rsi r9 r10} => 06CB {rax rcx rbx rsi rdi r9 r10}
Generating: N095 (  1,  1) [000046] -----+-----                   t46 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
                                                                        /--*  t46    byref  
Generating: N097 (  1,  3) [000051] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:2 r11 REG r11 $VN.Void
IN0012:        mov      r11, rbx
							V29 in reg r11 is becoming live  [000051]
							Live regs: 00000000000007CF {rax rcx rdx rbx rsi rdi r8 r9 r10} + {r11} => 0000000000000FCF {rax rcx rdx rbx rsi rdi r8 r9 r10 r11}
							Live vars after [000051]: {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28} +{V29} => {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28 V29}
							Byref regs: 06CB {rax rcx rbx rsi rdi r9 r10} => 0ECB {rax rcx rbx rsi rdi r9 r10 r11}
Generating: N099 (  1,  1) [000047] -----+-----                   t47 =    LCL_VAR   byref  V29 tmp4         u:2 r11 REG r11 $80
Generating: N101 (  1,  1) [000048] -c---+-----                   t48 =    CNS_INT   byref  0 REG NA $VN.Null
Generating: N103 (  1,  1) [000217] -----------                  t217 =    LCL_VAR   byref  V29 tmp4          r11 (last use) REG r11
Generating: N105 (  1,  1) [000053] -----+-----                   t53 =    LCL_VAR   byref  V00 arg0         u:1 rbx REG rbx $80
Generating: N107 (  1,  1) [000180] -c---+-----                  t180 =    CNS_INT   long   24 REG NA $205
                                                                        /--*  t53    byref  
                                                                        +--*  t180   long   
Generating: N109 (  3,  3) [000181] -----+-----                  t181 = *  ADD       byref  REG r16 $246
IN0013:        lea      r16, bword ptr [rbx+0x18]
							Byref regs: 0ECB {rax rcx rbx rsi rdi r9 r10 r11} => 10ECB {rax rcx rbx rsi rdi r9 r10 r11 r16}
                                                                        /--*  t47    byref  
                                                                        +--*  t48    byref  
Generating: N111 (  3,  3) [000049] -----+-N---                         *  CMP       void   REG NA
IN0014:        test     r11, r11
                                                                        /--*  t217   byref  
                                                                        +--*  t181   byref  
Generating: N113 (  8,  8) [000218] -----------                  t218 = *  SELECTCC  byref  cond=UEQ REG r11
							V29 in reg r11 is becoming dead  [000217]
							Live regs: 0000000000000FCF {rax rcx rdx rbx rsi rdi r8 r9 r10 r11} - {r11} => 00000000000007CF {rax rcx rdx rbx rsi rdi r8 r9 r10}
							Live vars after [000217]: {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28 V29} -{V29} => {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28}
							Byref regs: 10ECB {rax rcx rbx rsi rdi r9 r10 r11 r16} => 106CB {rax rcx rbx rsi rdi r9 r10 r16}
							Byref regs: 106CB {rax rcx rbx rsi rdi r9 r10 r16} => 06CB {rax rcx rbx rsi rdi r9 r10}
IN0015:        cmovne   r11, r16
							Byref regs: 06CB {rax rcx rbx rsi rdi r9 r10} => 0ECB {rax rcx rbx rsi rdi r9 r10 r11}
                                                                        /--*  t218   byref  
Generating: N115 (  8,  8) [000182] DA---+-----                         *  STORE_LCL_VAR byref  V29 tmp4         d:3 r11 REG r11 $VN.Void
							Byref regs: 0ECB {rax rcx rbx rsi rdi r9 r10 r11} => 06CB {rax rcx rbx rsi rdi r9 r10}
							V29 in reg r11 is becoming live  [000182]
							Live regs: 00000000000007CF {rax rcx rdx rbx rsi rdi r8 r9 r10} + {r11} => 0000000000000FCF {rax rcx rdx rbx rsi rdi r8 r9 r10 r11}
							Live vars after [000182]: {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28} +{V29} => {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28 V29}
							Byref regs: 06CB {rax rcx rbx rsi rdi r9 r10} => 0ECB {rax rcx rbx rsi rdi r9 r10 r11}
Generating: N117 (  1,  1) [000056] -----+-----                   t56 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
Generating: N119 (  1,  1) [000058] -c---+-----                   t58 =    CNS_INT   long   16 REG NA $204
                                                                        /--*  t56    long   
                                                                        +--*  t58    long   
Generating: N121 (  3,  3) [000059] -----+-----                   t59 = *  ADD       long   REG r14 $2c2
IN0016:        lea      r14, [rdx+0x10]
                                                                        /--*  t59    long   
Generating: N123 (  7,  6) [000060] DA---+-----                         *  STORE_LCL_VAR byref  V19 loc15        d:2 r14 REG r14 $VN.Void
							V19 in reg r14 is becoming live  [000060]
							Live regs: 0000000000000FCF {rax rcx rdx rbx rsi rdi r8 r9 r10 r11} + {r14} => 0000000000004FCF {rax rcx rdx rbx rsi rdi r8 r9 r10 r11 r14}
							Live vars after [000060]: {V00 V01 V02 V05 V07 V11 V15 V26 V27 V28 V29} +{V19} => {V00 V01 V02 V05 V07 V11 V15 V19 V26 V27 V28 V29}
							Byref regs: 0ECB {rax rcx rbx rsi rdi r9 r10 r11} => 4ECB {rax rcx rbx rsi rdi r9 r10 r11 r14}
Generating: N125 (  1,  1) [000071] -----+-----                   t71 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
Generating: N127 (  1,  1) [000073] -c---+-----                   t73 =    CNS_INT   long   48 REG NA $206
                                                                        /--*  t71    long   
                                                                        +--*  t73    long   
Generating: N129 (  3,  3) [000074] -----+-----                   t74 = *  ADD       long   REG r16 $2c3
IN0017:        lea      r16, [rdx+0x30]
                                                                        /--*  t74    long   
Generating: N131 (  7,  6) [000075] DA---+----#                         *  STORE_LCL_VAR byref  V23 loc19        d:2 r16 REG r16 $VN.Void
IN0018:        mov      bword ptr [V23 rbp-0x30], r16
							V23 in reg r16 is becoming live  [000075]
							Live regs: 0000000000004FCF {rax rcx rdx rbx rsi rdi r8 r9 r10 r11 r14} + {r16} => 0000000000014FCF {rax rcx rdx rbx rsi rdi r8 r9 r10 r11 r14 r16}
							Live vars after [000075]: {V00 V01 V02 V05 V07 V11 V15 V19 V26 V27 V28 V29} +{V23} => {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
							GC vars after [000075]: {V05} => {V05 V23}
							Byref regs: 4ECB {rax rcx rbx rsi rdi r9 r10 r11 r14} => 14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
Generating: N133 (  1,  1) [000076] -----+-----                   t76 =    LCL_VAR   int    V02 arg2         u:1 r8 REG r8 $100
Generating: N135 (  1,  1) [000077] -c---+-----                   t77 =    CNS_INT   int    0 REG NA $40
                                                                        /--*  t76    int    
                                                                        +--*  t77    int    
Generating: N137 (  3,  3) [000078] -----+-N---                         *  CMP       void   REG NA
IN0019:        test     r8d, r8d
Generating: N139 (  5,  5) [000079] -----+-----                            JCC       void   cond=UEQ REG NA
IN001a:        je       L_M18993_BB12

Variable Live Range History Dump for BB01
..None..

=============== Generating BB10 [0011] [07B..082) -> BB15(0.2),BB11(0.8) (cond), preds={BB01} succs={BB11,BB15} flags=0x00000000.04000011: i LIR IBC
BB10 IN (13)={V00 V01 V02 V26 V27 V28 V29 V07 V11 V15 V19 V23 V05} + ByrefExposed + GcHeap
     OUT(13)={V00 V01 V02 V26 V27 V28 V29 V07 V11 V15 V19 V23 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB10
  V00(rbx)  V01(rdx)  V02(r8)  V26(rcx)  V27(r10)  V28(r9)  V29(r11)  V07(rax)  V11(rsi)  V15(rdi)  V19(r14)  V23(r16)
Liveness not changing: 0000000000001FFF {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
							Live regs: 0000000000000000 {} + {rax rcx rdx rbx rsi rdi r8 r9 r10 r11 r14 r16} => 0000000000014FCF {rax rcx rdx rbx rsi rdi r8 r9 r10 r11 r14 r16}
							GC regs: (unchanged) 0000 {}
							Byref regs: 0000 {} => 14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}

      L_M18993_BB10:
Adding label due to BB weight difference: BBJ_COND BB01 with weight 100 different from BB10 with weight 52
Saved:
      G_M18993_IG02:        ; offs=0x000000, size=0x0061, bbWeight=1, gcrefRegs=0000 {}, byrefRegs=0008 {rbx}, BB01 [0000], byref
Created:
      G_M18993_IG03:        ; offs=0x000061, size=0x0000, bbWeight=0.52, gcrefRegs=0000 {}
Label: G_M18993_IG03, GCvars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
Generating: N143 (  1,  1) [000135] -----+-----                  t135 =    LCL_VAR   int    V02 arg2         u:1 r8 REG r8 $100
Generating: N145 (  1,  1) [000136] -c---+-----                  t136 =    CNS_INT   int    1 REG NA $41
                                                                        /--*  t135   int    
                                                                        +--*  t136   int    
Generating: N147 (  3,  3) [000137] -----+-N---                         *  CMP       void   REG NA
Mapped BB10 to G_M18993_IG03
IN001b:        cmp      r8d, 1
Generating: N149 (  5,  5) [000138] -----+-----                            JCC       void   cond=UEQ REG NA
IN001c:        je       L_M18993_BB15

Variable Live Range History Dump for BB10
..None..

=============== Generating BB11 [0012] [082..089) -> BB16(0.48),BB12(0.52) (cond), preds={BB10} succs={BB12,BB16} flags=0x00000000.04000011: i LIR IBC
BB11 IN (13)={V00 V01 V02 V26 V27 V28 V29 V07 V11 V15 V19 V23 V05} + ByrefExposed + GcHeap
     OUT(12)={V00 V01     V26 V27 V28 V29 V07 V11 V15 V19 V23 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB11
  V00(rbx)  V01(rdx)  V02(r8)  V26(rcx)  V27(r10)  V28(r9)  V29(r11)  V07(rax)  V11(rsi)  V15(rdi)  V19(r14)  V23(r16)
Liveness not changing: 0000000000001FFF {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
							Live regs: 0000000000000000 {} + {rax rcx rdx rbx rsi rdi r8 r9 r10 r11 r14 r16} => 0000000000014FCF {rax rcx rdx rbx rsi rdi r8 r9 r10 r11 r14 r16}
							GC regs: (unchanged) 0000 {}
							Byref regs: 0000 {} => 14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}

      L_M18993_BB11:
Adding label due to BB weight difference: BBJ_COND BB10 with weight 52 different from BB11 with weight 41.6
Saved:
      G_M18993_IG03:        ; offs=0x000061, size=0x000A, bbWeight=0.52, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB10 [0011], gcvars, byref
Created:
      G_M18993_IG04:        ; offs=0x00006B, size=0x0000, bbWeight=0.42, gcrefRegs=0000 {}
Label: G_M18993_IG04, GCvars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
Generating: N153 (  1,  1) [000171] -----+-----                  t171 =    LCL_VAR   int    V02 arg2         u:1 r8 (last use) REG r8 $100
Generating: N155 (  1,  1) [000172] -c---+-----                  t172 =    CNS_INT   int    2 REG NA $42
                                                                        /--*  t171   int    
                                                                        +--*  t172   int    
Generating: N157 (  3,  3) [000173] -----+-N---                         *  CMP       void   REG NA
							V02 in reg r8 is becoming dead  [000171]
							Live regs: 0000000000014FCF {rax rcx rdx rbx rsi rdi r8 r9 r10 r11 r14 r16} - {r8} => 0000000000014ECF {rax rcx rdx rbx rsi rdi r9 r10 r11 r14 r16}
							Live vars after [000171]: {V00 V01 V02 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29} -{V02} => {V00 V01 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29}
Mapped BB11 to G_M18993_IG04
IN001d:        cmp      r8d, 2
Generating: N159 (  5,  5) [000174] -----+-----                            JCC       void   cond=UEQ REG NA
IN001e:        je       L_M18993_BB16
IN001f:        jmp      L_M18993_BB12

Variable Live Range History Dump for BB11
..None..

=============== Generating BB15 [0017] [104..166) (return), preds={BB10} succs={} flags=0x00000000.14088011: i LIR IBC label hascall gcsafe
BB15 IN (10)={V00 V26 V27 V28 V29 V07 V11 V15 V19 V23} + ByrefExposed + GcHeap
     OUT(0)={                                       }

Recording Var Locations at start of BB15
  V00(rbx)  V26(rcx)  V27(r10)  V28(r9)  V29(r11)  V07(rax)  V11(rsi)  V15(rdi)  V19(r14)  V23(r16)
Change life 0000000000001FFB {V00 V01 V05 V07 V11 V15 V19 V23 V26 V27 V28 V29} -> 0000000000000FF9 {V00 V07 V11 V15 V19 V23 V26 V27 V28 V29}
							V01 in reg rdx is becoming dead  [------]
							Live regs: (unchanged) 0000000000000000 {}
							V05 becoming dead
							Live regs: 0000000000000000 {} + {rax rcx rbx rsi rdi r9 r10 r11 r14 r16} => 0000000000014ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
							GC regs: (unchanged) 0000 {}
							Byref regs: 0000 {} => 14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}

      L_M18993_BB15:
Adding label due to BB weight difference: BBJ_COND BB11 with weight 41.6 different from BB15 with weight 10.4
Saved:
      G_M18993_IG04:        ; offs=0x00006B, size=0x000F, bbWeight=0.42, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB11 [0012], byref
Created:
      G_M18993_IG05:        ; offs=0x00007A, size=0x0000, bbWeight=0.10, gcrefRegs=0000 {}
Label: G_M18993_IG05, GCvars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
Generating: N163 (  3,  2) [000139] -----+-----                  t139 =    LCL_VAR   byref  V07 loc3         u:2 rax (last use) REG rax $241
                                                                        /--*  t139   byref  
Generating: N165 (  6,  4) [000140] U--XG+-----                  t140 = *  IND       int    REG rax <l:$1c4, c:$1c3>
							V07 in reg rax is becoming dead  [000139]
							Live regs: 0000000000014ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16} - {rax} => 0000000000014ECA {rcx rbx rsi rdi r9 r10 r11 r14 r16}
							Live vars after [000139]: {V00 V07 V11 V15 V19 V23 V26 V27 V28 V29} -{V07} => {V00 V11 V15 V19 V23 V26 V27 V28 V29}
							Byref regs: 14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16} => 14ECA {rcx rbx rsi rdi r9 r10 r11 r14 r16}
Mapped BB15 to G_M18993_IG05
IN0020:        mov      eax, dword ptr [rax]
Generating: N167 (  1,  1) [000142] -----+-----                  t142 =    LCL_VAR   byref  V26 tmp1         u:4 rcx (last use) REG rcx $280
                                                                        /--*  t142   byref  
                                                                        +--*  t140   int    
Generating: N169 ( 10,  7) [000144] UA-XG+-----                         *  STOREIND  int    REG NA $384
							V26 in reg rcx is becoming dead  [000142]
							Live regs: 0000000000014ECA {rcx rbx rsi rdi r9 r10 r11 r14 r16} - {rcx} => 0000000000014EC8 {rbx rsi rdi r9 r10 r11 r14 r16}
							Live vars after [000142]: {V00 V11 V15 V19 V23 V26 V27 V28 V29} -{V26} => {V00 V11 V15 V19 V23 V27 V28 V29}
							Byref regs: 14ECA {rcx rbx rsi rdi r9 r10 r11 r14 r16} => 14EC8 {rbx rsi rdi r9 r10 r11 r14 r16}
IN0021:        mov      dword ptr [rcx], eax
Generating: N171 (  3,  2) [000145] -----+-----                  t145 =    LCL_VAR   byref  V11 loc7         u:2 rsi (last use) REG rsi $243
                                                                        /--*  t145   byref  
Generating: N173 (  6,  4) [000146] U--XG+-----                  t146 = *  IND       int    REG rcx <l:$1c6, c:$1c5>
							V11 in reg rsi is becoming dead  [000145]
							Live regs: 0000000000014EC8 {rbx rsi rdi r9 r10 r11 r14 r16} - {rsi} => 0000000000014E88 {rbx rdi r9 r10 r11 r14 r16}
							Live vars after [000145]: {V00 V11 V15 V19 V23 V27 V28 V29} -{V11} => {V00 V15 V19 V23 V27 V28 V29}
							Byref regs: 14EC8 {rbx rsi rdi r9 r10 r11 r14 r16} => 14E88 {rbx rdi r9 r10 r11 r14 r16}
IN0022:        mov      ecx, dword ptr [rsi]
Generating: N175 (  1,  1) [000148] -----+-----                  t148 =    LCL_VAR   byref  V27 tmp2         u:4 r10 (last use) REG r10 $281
                                                                        /--*  t148   byref  
                                                                        +--*  t146   int    
Generating: N177 ( 10,  7) [000150] UA-XG+-----                         *  STOREIND  int    REG NA $389
							V27 in reg r10 is becoming dead  [000148]
							Live regs: 0000000000014E88 {rbx rdi r9 r10 r11 r14 r16} - {r10} => 0000000000014A88 {rbx rdi r9 r11 r14 r16}
							Live vars after [000148]: {V00 V15 V19 V23 V27 V28 V29} -{V27} => {V00 V15 V19 V23 V28 V29}
							Byref regs: 14E88 {rbx rdi r9 r10 r11 r14 r16} => 14A88 {rbx rdi r9 r11 r14 r16}
IN0023:        mov      dword ptr [r10], ecx
Generating: N179 (  3,  2) [000151] -----+-----                  t151 =    LCL_VAR   byref  V15 loc11        u:2 rdi (last use) REG rdi $245
                                                                        /--*  t151   byref  
Generating: N181 (  6,  4) [000152] U--XG+-----                  t152 = *  IND       int    REG rcx <l:$1c8, c:$1c7>
							V15 in reg rdi is becoming dead  [000151]
							Live regs: 0000000000014A88 {rbx rdi r9 r11 r14 r16} - {rdi} => 0000000000014A08 {rbx r9 r11 r14 r16}
							Live vars after [000151]: {V00 V15 V19 V23 V28 V29} -{V15} => {V00 V19 V23 V28 V29}
							Byref regs: 14A88 {rbx rdi r9 r11 r14 r16} => 14A08 {rbx r9 r11 r14 r16}
IN0024:        mov      ecx, dword ptr [rdi]
Generating: N183 (  1,  1) [000154] -----+-----                  t154 =    LCL_VAR   byref  V28 tmp3         u:4 r9 (last use) REG r9 $282
                                                                        /--*  t154   byref  
                                                                        +--*  t152   int    
Generating: N185 ( 10,  7) [000156] UA-XG+-----                         *  STOREIND  int    REG NA $38e
							V28 in reg r9 is becoming dead  [000154]
							Live regs: 0000000000014A08 {rbx r9 r11 r14 r16} - {r9} => 0000000000014808 {rbx r11 r14 r16}
							Live vars after [000154]: {V00 V19 V23 V28 V29} -{V28} => {V00 V19 V23 V29}
							Byref regs: 14A08 {rbx r9 r11 r14 r16} => 14808 {rbx r11 r14 r16}
IN0025:        mov      dword ptr [r9], ecx
Generating: N187 (  3,  2) [000157] -----+-----                  t157 =    LCL_VAR   byref  V19 loc15        u:2 r14 (last use) REG r14 $247
                                                                        /--*  t157   byref  
Generating: N189 (  9,  6) [000158] Uc-XG+-----                  t158 = *  IND       struct REG NA
Generating: N191 (  1,  1) [000160] -----+-----                  t160 =    LCL_VAR   byref  V29 tmp4         u:4 r11 (last use) REG r11 $283
                                                                        /--*  t160   byref  
                                                                        +--*  t158   struct 
Generating: N193 ( 17, 12) [000162] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
							V29 in reg r11 is becoming dead  [000160]
							Live regs: 0000000000014808 {rbx r11 r14 r16} - {r11} => 0000000000014008 {rbx r14 r16}
							Live vars after [000160]: {V00 V19 V23 V29} -{V29} => {V00 V19 V23}
							Byref regs: 14808 {rbx r11 r14 r16} => 14008 {rbx r14 r16}
							V19 in reg r14 is becoming dead  [000157]
							Live regs: 0000000000014008 {rbx r14 r16} - {r14} => 0000000000010008 {rbx r16}
							Live vars after [000157]: {V00 V19 V23} -{V19} => {V00 V23}
							Byref regs: 14008 {rbx r14 r16} => 10008 {rbx r16}
IN0026:        vmovdqu  ymm0, ymmword ptr [r14]
IN0027:        vmovdqu  ymmword ptr [r11], ymm0
Generating: N195 (  3,  2) [000163] -----+-----                  t163 =    LCL_VAR   byref  V23 loc19        u:2 r16 (last use) REG r16 $248
                                                                        /--*  t163   byref  
Generating: N197 (???,???) [000232] -----------                  t232 = *  PUTARG_REG byref  REG rcx
							V23 in reg r16 is becoming dead  [000163]
							Live regs: 0000000000010008 {rbx r16} - {r16} => 0000000000000008 {rbx}
							Live vars after [000163]: {V00 V23} -{V23} => {V00}
							GC vars after [000163]: {V23} => {}
							Byref regs: 10008 {rbx r16} => 0008 {rbx}
IN0028:        mov      rcx, r16
							Byref regs: 0008 {rbx} => 000A {rcx rbx}
Generating: N199 (  3, 10) [000233] Hc---------                  t233 =    CNS_INT(h) long   0x7fff6f084420 ftn REG NA
                                                                        /--*  t233   long   
Generating: N201 (  5, 12) [000234] nc--G------                  t234 = *  IND       long   REG NA
                                                                        /--*  t232   byref  arg0 in rcx
                                                                        +--*  t234   long   control expr
Generating: N203 ( 17,  8) [000164] --CXG+-----                  t164 = *  CALL      ref    <unknown method> REG rax $348
							Byref regs: 000A {rcx rbx} => 0008 {rbx}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0008 {rbx}
IN0029:        call     [<unknown method>]
							GC regs: 0000 {} => 0001 {rax}
                                                                        /--*  t164   ref    
Generating:                [000244] --CXG------                  t244 = *  COPY      ref    REG rdx
Generating: N205 (  1,  1) [000167] -----+-----                  t167 =    LCL_VAR   byref  V00 arg0         u:1 rbx (last use) REG rbx $80
                                                                        /--*  t167   byref  
                                                                        +--*  t244   ref    
Generating: N207 ( 21, 11) [000169] UACXG+-----                         *  STOREIND  ref    REG NA $395
							V00 in reg rbx is becoming dead  [000167]
							Live regs: 0000000000000008 {rbx} - {rbx} => 0000000000000000 {}
							Live vars after [000167]: {V00} -{V00} => {}
							Byref regs: 0008 {rbx} => 0000 {}
							GC regs: 0001 {rax} => 0000 {}
IN002a:        mov      rdx, rax
							GC regs: 0000 {} => 0004 {rdx}
							GC regs: 0004 {rdx} => 0000 {}
IN002b:        mov      rcx, rbx
NoGC Call: savedSet=F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}
IN002c:        call     CORINFO_HELP_CHECKED_ASSIGN_REF
Generating: N209 (  0,  0) [000170] -----+-----                            RETURN    void   REG NA $VN.Void
Reserving epilog IG for block BB15
IN002d:        nop      
Saved:
      G_M18993_IG05:        ; offs=0x00007A, size=0x002E, bbWeight=0.10, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB15 [0017], gcvars, byref
Created:
      G_M18993_IG06:        ; offs=0x0000A8, size=0x0000, bbWeight=0.10, gcrefRegs=0000 {}
Created:
      G_M18993_IG07:        ; offs=0x0001A8, size=0x0000, bbWeight=0.10, gcrefRegs=0000 {}, epilog
*************** After placeholder IG creation
G_M18993_IG01:        ; func=00, offs=0x000000, size=0x0000, bbWeight=1, gcrefRegs=0000 {} <-- Prolog IG
G_M18993_IG02:        ; offs=0x000000, size=0x0061, bbWeight=1, gcrefRegs=0000 {}, byrefRegs=0008 {rbx}, BB01 [0000], byref
G_M18993_IG03:        ; offs=0x000061, size=0x000A, bbWeight=0.52, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB10 [0011], gcvars, byref
G_M18993_IG04:        ; offs=0x00006B, size=0x000F, bbWeight=0.42, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB11 [0012], byref
G_M18993_IG05:        ; offs=0x00007A, size=0x002E, bbWeight=0.10, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB15 [0017], gcvars, byref
G_M18993_IG06:        ; epilog placeholder, next placeholder=<END>, BB15 [0017], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000001800 {V05 V23}, PrevGCrefRegs=0000 {}, PrevByrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
                      ;   InitGCVars=0000000000000800 {V23}, InitGCrefRegs=0000 {}, InitByrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
G_M18993_IG07:        ; offs=0x0001A8, size=0x0000, bbWeight=0.10, gcrefRegs=0000 {} <-- Current IG

Variable Live Range History Dump for BB15
..None..

=============== Generating BB12 [0014] [089..0F8) -> BB14(1) (always), preds={BB01,BB11} succs={BB14} flags=0x00000000.14088019: i LIR IBC keep label hascall gcsafe
BB12 IN (11)={V00 V01 V26 V27 V28 V29 V07 V11 V15 V19 V23} + ByrefExposed + GcHeap
     OUT(2)={    V01                                 V23} + ByrefExposed + GcHeap

Recording Var Locations at start of BB12
  V00(rbx)  V01(rdx)  V26(rcx)  V27(r10)  V28(r9)  V29(r11)  V07(rax)  V11(rsi)  V15(rdi)  V19(r14)  V23(r16)
Change life 0000000000000000 {} -> 0000000000000FFB {V00 V01 V07 V11 V15 V19 V23 V26 V27 V28 V29}
							V00 in reg rbx is becoming live  [------]
							Live regs: 0000000000000000 {} + {rbx} => 0000000000000008 {rbx}
							V01 in reg rdx is becoming live  [------]
							Live regs: 0000000000000008 {rbx} + {rdx} => 000000000000000C {rdx rbx}
							V26 in reg rcx is becoming live  [------]
							Live regs: 000000000000000C {rdx rbx} + {rcx} => 000000000000000E {rcx rdx rbx}
							V27 in reg r10 is becoming live  [------]
							Live regs: 000000000000000E {rcx rdx rbx} + {r10} => 000000000000040E {rcx rdx rbx r10}
							V28 in reg r9 is becoming live  [------]
							Live regs: 000000000000040E {rcx rdx rbx r10} + {r9} => 000000000000060E {rcx rdx rbx r9 r10}
							V29 in reg r11 is becoming live  [------]
							Live regs: 000000000000060E {rcx rdx rbx r9 r10} + {r11} => 0000000000000E0E {rcx rdx rbx r9 r10 r11}
							V07 in reg rax is becoming live  [------]
							Live regs: 0000000000000E0E {rcx rdx rbx r9 r10 r11} + {rax} => 0000000000000E0F {rax rcx rdx rbx r9 r10 r11}
							V11 in reg rsi is becoming live  [------]
							Live regs: 0000000000000E0F {rax rcx rdx rbx r9 r10 r11} + {rsi} => 0000000000000E4F {rax rcx rdx rbx rsi r9 r10 r11}
							V15 in reg rdi is becoming live  [------]
							Live regs: 0000000000000E4F {rax rcx rdx rbx rsi r9 r10 r11} + {rdi} => 0000000000000ECF {rax rcx rdx rbx rsi rdi r9 r10 r11}
							V19 in reg r14 is becoming live  [------]
							Live regs: 0000000000000ECF {rax rcx rdx rbx rsi rdi r9 r10 r11} + {r14} => 0000000000004ECF {rax rcx rdx rbx rsi rdi r9 r10 r11 r14}
							V23 in reg r16 is becoming live  [------]
							Live regs: 0000000000004ECF {rax rcx rdx rbx rsi rdi r9 r10 r11 r14} + {r16} => 0000000000014ECF {rax rcx rdx rbx rsi rdi r9 r10 r11 r14 r16}
							Live regs: (unchanged) 0000000000014ECF {rax rcx rdx rbx rsi rdi r9 r10 r11 r14 r16}
							Added GCVars: {V23}
							GC regs: (unchanged) 0000 {}
							Byref regs: (unchanged) 14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}

      L_M18993_BB12:
Label: G_M18993_IG07, GCvars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
Generating: N213 (  1,  1) [000082] -----+----Z                   t82 =    LCL_VAR   long   V01 arg1         u:1 rdx REG rdx $c0
Generating: N215 (  1,  1) [000083] -c---+-N---                   t83 =    CNS_INT   int    0 REG NA $40
                                                                        /--*  t82    long   
                                                                        +--*  t83    int    
Generating: N217 (  9,  7) [000085] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
							V01 in reg rdx is becoming dead  [000082]
							Live regs: 0000000000014ECF {rax rcx rdx rbx rsi rdi r9 r10 r11 r14 r16} - {rdx} => 0000000000014ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
Mapped BB12 to G_M18993_IG07
IN002e:        vxorps   ymm0, ymm0, ymm0
IN002f:        vmovdqu  ymmword ptr [rdx], ymm0
IN0030:        vmovdqu  ymmword ptr [rdx+0x20], ymm0
IN0031:        vmovdqu  xmmword ptr [rdx+0x38], xmm0
Generating: N219 (  1,  1) [000086] -----+-----                   t86 =    LCL_VAR   byref  V26 tmp1         u:4 rcx (last use) REG rcx $280
                                                                        /--*  t86    byref  
Generating: N221 (  3,  2) [000087] U--XG+-----                   t87 = *  IND       int    REG rcx <l:$1cb, c:$1ca>
							V26 in reg rcx is becoming dead  [000086]
							Live regs: 0000000000014ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16} - {rcx} => 0000000000014EC9 {rax rbx rsi rdi r9 r10 r11 r14 r16}
							Live vars after [000086]: {V00 V01 V07 V11 V15 V19 V23 V26 V27 V28 V29} -{V26} => {V00 V01 V07 V11 V15 V19 V23 V27 V28 V29}
							Byref regs: 14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16} => 14EC9 {rax rbx rsi rdi r9 r10 r11 r14 r16}
IN0032:        mov      ecx, dword ptr [rcx]
Generating: N223 (  3,  2) [000089] -----+-----                   t89 =    LCL_VAR   byref  V07 loc3         u:2 rax (last use) REG rax $241
                                                                        /--*  t89    byref  
                                                                        +--*  t87    int    
Generating: N225 ( 10,  7) [000091] UA-XG+-----                         *  STOREIND  int    REG NA $384
							V07 in reg rax is becoming dead  [000089]
							Live regs: 0000000000014EC9 {rax rbx rsi rdi r9 r10 r11 r14 r16} - {rax} => 0000000000014EC8 {rbx rsi rdi r9 r10 r11 r14 r16}
							Live vars after [000089]: {V00 V01 V07 V11 V15 V19 V23 V27 V28 V29} -{V07} => {V00 V01 V11 V15 V19 V23 V27 V28 V29}
							Byref regs: 14EC9 {rax rbx rsi rdi r9 r10 r11 r14 r16} => 14EC8 {rbx rsi rdi r9 r10 r11 r14 r16}
IN0033:        mov      dword ptr [rax], ecx
Generating: N227 (  1,  1) [000092] -----+-----                   t92 =    LCL_VAR   byref  V27 tmp2         u:4 r10 (last use) REG r10 $281
                                                                        /--*  t92    byref  
Generating: N229 (  3,  2) [000093] U--XG+-----                   t93 = *  IND       int    REG rcx <l:$1cd, c:$1cc>
							V27 in reg r10 is becoming dead  [000092]
							Live regs: 0000000000014EC8 {rbx rsi rdi r9 r10 r11 r14 r16} - {r10} => 0000000000014AC8 {rbx rsi rdi r9 r11 r14 r16}
							Live vars after [000092]: {V00 V01 V11 V15 V19 V23 V27 V28 V29} -{V27} => {V00 V01 V11 V15 V19 V23 V28 V29}
							Byref regs: 14EC8 {rbx rsi rdi r9 r10 r11 r14 r16} => 14AC8 {rbx rsi rdi r9 r11 r14 r16}
IN0034:        mov      ecx, dword ptr [r10]
Generating: N231 (  3,  2) [000095] -----+-----                   t95 =    LCL_VAR   byref  V11 loc7         u:2 rsi (last use) REG rsi $243
                                                                        /--*  t95    byref  
                                                                        +--*  t93    int    
Generating: N233 ( 10,  7) [000097] UA-XG+-----                         *  STOREIND  int    REG NA $389
							V11 in reg rsi is becoming dead  [000095]
							Live regs: 0000000000014AC8 {rbx rsi rdi r9 r11 r14 r16} - {rsi} => 0000000000014A88 {rbx rdi r9 r11 r14 r16}
							Live vars after [000095]: {V00 V01 V11 V15 V19 V23 V28 V29} -{V11} => {V00 V01 V15 V19 V23 V28 V29}
							Byref regs: 14AC8 {rbx rsi rdi r9 r11 r14 r16} => 14A88 {rbx rdi r9 r11 r14 r16}
IN0035:        mov      dword ptr [rsi], ecx
Generating: N235 (  1,  1) [000098] -----+-----                   t98 =    LCL_VAR   byref  V28 tmp3         u:4 r9 (last use) REG r9 $282
                                                                        /--*  t98    byref  
Generating: N237 (  3,  2) [000099] U--XG+-----                   t99 = *  IND       int    REG rcx <l:$1cf, c:$1ce>
							V28 in reg r9 is becoming dead  [000098]
							Live regs: 0000000000014A88 {rbx rdi r9 r11 r14 r16} - {r9} => 0000000000014888 {rbx rdi r11 r14 r16}
							Live vars after [000098]: {V00 V01 V15 V19 V23 V28 V29} -{V28} => {V00 V01 V15 V19 V23 V29}
							Byref regs: 14A88 {rbx rdi r9 r11 r14 r16} => 14888 {rbx rdi r11 r14 r16}
IN0036:        mov      ecx, dword ptr [r9]
Generating: N239 (  3,  2) [000101] -----+-----                  t101 =    LCL_VAR   byref  V15 loc11        u:2 rdi (last use) REG rdi $245
                                                                        /--*  t101   byref  
                                                                        +--*  t99    int    
Generating: N241 ( 10,  7) [000103] UA-XG+-----                         *  STOREIND  int    REG NA $38e
							V15 in reg rdi is becoming dead  [000101]
							Live regs: 0000000000014888 {rbx rdi r11 r14 r16} - {rdi} => 0000000000014808 {rbx r11 r14 r16}
							Live vars after [000101]: {V00 V01 V15 V19 V23 V29} -{V15} => {V00 V01 V19 V23 V29}
							Byref regs: 14888 {rbx rdi r11 r14 r16} => 14808 {rbx r11 r14 r16}
IN0037:        mov      dword ptr [rdi], ecx
Generating: N243 (  1,  1) [000104] -----+-----                  t104 =    LCL_VAR   byref  V29 tmp4         u:4 r11 (last use) REG r11 $283
                                                                        /--*  t104   byref  
Generating: N245 (  7,  5) [000105] Uc-XG+-----                  t105 = *  IND       struct REG NA
Generating: N247 (  3,  2) [000107] -----+-----                  t107 =    LCL_VAR   byref  V19 loc15        u:2 r14 (last use) REG r14 $247
                                                                        /--*  t107   byref  
                                                                        +--*  t105   struct 
Generating: N249 ( 17, 12) [000109] UA-XG+-----                         *  STORE_BLK struct<System.Data.OleDb.tagDBIDX, 32> (copy) (Unroll) REG NA $393
							V19 in reg r14 is becoming dead  [000107]
							Live regs: 0000000000014808 {rbx r11 r14 r16} - {r14} => 0000000000010808 {rbx r11 r16}
							Live vars after [000107]: {V00 V01 V19 V23 V29} -{V19} => {V00 V01 V23 V29}
							Byref regs: 14808 {rbx r11 r14 r16} => 10808 {rbx r11 r16}
							V29 in reg r11 is becoming dead  [000104]
							Live regs: 0000000000010808 {rbx r11 r16} - {r11} => 0000000000010008 {rbx r16}
							Live vars after [000104]: {V00 V01 V23 V29} -{V29} => {V00 V01 V23}
							Byref regs: 10808 {rbx r11 r16} => 10008 {rbx r16}
IN0038:        vmovdqu  ymm0, ymmword ptr [r11]
IN0039:        vmovdqu  ymmword ptr [r14], ymm0
Generating: N251 (  3,  2) [000110] -----+-----                  t110 =    LCL_VAR   byref  V23 loc19        u:2 r16 REG r16 $248
Generating: N253 (  1,  1) [000111] -c---+-----                  t111 =    CNS_INT   int    0 REG NA $40
                                                                        /--*  t110   byref  
                                                                        +--*  t111   int    
Generating: N255 (  9,  7) [000112] -A-XG+-----                         *  STOREIND  short  REG NA $39d
IN003a:        mov      word  ptr [r16], 0
Generating: N257 (  1,  1) [000113] -----+-----                  t113 =    LCL_VAR   byref  V00 arg0         u:1 rbx (last use) REG rbx $80
                                                                        /--*  t113   byref  
Generating: N259 (  3,  2) [000114] U--XG+-----                  t114 = *  IND       ref    REG rcx <l:$39f, c:$39e>
							V00 in reg rbx is becoming dead  [000113]
							Live regs: 0000000000010008 {rbx r16} - {rbx} => 0000000000010000 {r16}
							Live vars after [000113]: {V00 V01 V23} -{V00} => {V01 V23}
							Byref regs: 10008 {rbx r16} => 10000 {r16}
IN003b:        mov      rcx, gword ptr [rbx]
							GC regs: 0000 {} => 0002 {rcx}
                                                                        /--*  t114   ref    
Generating: N261 (???,???) [000228] ---XG------                  t228 = *  PUTARG_REG ref    REG rcx
							GC regs: 0002 {rcx} => 0000 {}
							GC regs: 0000 {} => 0002 {rcx}
Generating: N263 (  3,  2) [000115] -----+----Z                  t115 =    LCL_VAR   byref  V23 loc19        u:2 r16 REG r16 $248
                                                                        /--*  t115   byref  
Generating: N265 (???,???) [000229] -----------                  t229 = *  PUTARG_REG byref  REG rdx
							V23 in reg r16 is becoming dead  [000115]
							Live regs: 0000000000010000 {r16} - {r16} => 0000000000000000 {}
							Byref regs: 10000 {r16} => 0000 {}
							Var V23 continuing live
IN003c:        mov      rdx, r16
							Byref regs: 0000 {} => 0004 {rdx}
Generating: N267 (  3, 10) [000230] Hc---------                  t230 =    CNS_INT(h) long   0x7fff6f084408 ftn REG NA
                                                                        /--*  t230   long   
Generating: N269 (  5, 12) [000231] nc--G------                  t231 = *  IND       long   REG NA
                                                                        /--*  t228   ref    arg0 in rcx
                                                                        +--*  t229   byref  arg1 in rdx
                                                                        +--*  t231   long   control expr
Generating: N271 ( 20, 11) [000116] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void
							GC regs: 0002 {rcx} => 0000 {}
							Byref regs: 0004 {rdx} => 0000 {}
							Call: GCvars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=0000 {}
IN003d:        call     [<unknown method>]
IN003e:        jmp      L_M18993_BB14

Variable Live Range History Dump for BB12
..None..

=============== Generating BB16 [0019] [167..17A) -> BB17(0.52),BB14(0.48) (cond), preds={BB11,BB13} succs={BB14,BB17} flags=0x00000000.d4088011: i LIR IBC label hascall gcsafe bwd bwd-src
BB16 IN (3)={V01 V23 V05} + ByrefExposed + GcHeap
     OUT(1)={        V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB16
  <none>

Change life 0000000000000802 {V01 V23} -> 0000000000001802 {V01 V05 V23}
							V05 becoming live
							Live regs: (unchanged) 0000000000000000 {}
							GC regs: (unchanged) 0000 {}
							Byref regs: (unchanged) 0000 {}

      L_M18993_BB16:
Saved:
      G_M18993_IG07:        ; offs=0x0001A8, size=0x0043, bbWeight=0.70, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB12 [0014], gcvars, byref
Created:
      G_M18993_IG08:        ; offs=0x0001EB, size=0x0000, bbWeight=0.20, gcrefRegs=0000 {}
Label: G_M18993_IG08, GCvars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=0000 {}
Generating: N293 (  3,  2) [000122] -----+----z                  t122 =    LCL_VAR   byref  V23 loc19        u:2 rcx (last use) REG rcx $248
                                                                        /--*  t122   byref  
Generating: N295 (???,???) [000235] -----------                  t235 = *  PUTARG_REG byref  REG rcx
Mapped BB16 to G_M18993_IG08
IN003f:        mov      rcx, bword ptr [V23 rbp-0x30]
							V23 in reg rcx is becoming live  [000122]
							Live regs: 0000000000000000 {} + {rcx} => 0000000000000002 {rcx}
							Byref regs: 0000 {} => 0002 {rcx}
							V23 in reg rcx is becoming dead  [000122]
							Live regs: 0000000000000002 {rcx} - {rcx} => 0000000000000000 {}
							Live vars after [000122]: {V01 V05 V23} -{V23} => {V01 V05}
							GC vars after [000122]: {V05 V23} => {V05}
							Byref regs: 0002 {rcx} => 0000 {}
							Byref regs: 0000 {} => 0002 {rcx}
Generating: N297 (  3, 10) [000236] Hc---------                  t236 =    CNS_INT(h) long   0x7fff6f084438 ftn REG NA
                                                                        /--*  t236   long   
Generating: N299 (  5, 12) [000237] nc--G------                  t237 = *  IND       long   REG NA
                                                                        /--*  t235   byref  arg0 in rcx
                                                                        +--*  t237   long   control expr
Generating: N301 ( 17,  8) [000123] --CXG+-----                         *  CALL      void   <unknown method> REG NA $VN.Void
							Byref regs: 0002 {rcx} => 0000 {}
							Call: GCvars=0000000000001000 {V05}, gcrefRegs=0000 {}, byrefRegs=0000 {}
IN0040:        call     [<unknown method>]
Generating: N303 (  1,  1) [000124] -----+----z                  t124 =    LCL_VAR   long   V01 arg1         u:1 rdx (last use) REG rdx $c0
Generating: N305 (  1,  1) [000125] -c---+-N---                  t125 =    CNS_INT   int    0 REG NA $40
                                                                        /--*  t124   long   
                                                                        +--*  t125   int    
Generating: N307 (  9,  7) [000127] -A-XG+-----                         *  STORE_BLK struct<72> (init) (Unroll) REG NA $397
IN0041:        mov      rdx, qword ptr [V01 rbp+0x18]
							V01 in reg rdx is becoming live  [000124]
							Live regs: 0000000000000000 {} + {rdx} => 0000000000000004 {rdx}
							V01 in reg rdx is becoming dead  [000124]
							Live regs: 0000000000000004 {rdx} - {rdx} => 0000000000000000 {}
							Live vars after [000124]: {V01 V05} -{V01} => {V05}
IN0042:        vxorps   ymm0, ymm0, ymm0
IN0043:        vmovdqu  ymmword ptr [rdx], ymm0
IN0044:        vmovdqu  ymmword ptr [rdx+0x20], ymm0
IN0045:        vmovdqu  xmmword ptr [rdx+0x38], xmm0
Generating: N309 (  3,  2) [000128] -c---+-----                  t128 =    LCL_VAR   ref    V05 loc1         u:4 NA REG NA $480
Generating: N311 (  1,  1) [000129] -c---+-----                  t129 =    CNS_INT   ref    null REG NA $VN.Null
                                                                        /--*  t128   ref    
                                                                        +--*  t129   ref    
Generating: N313 (  5,  4) [000130] -----+-N---                         *  CMP       void   REG NA
IN0046:        cmp      gword ptr [V05 rbp-0x28], 0
Generating: N315 (  7,  6) [000131] -----+-----                            JCC       void   cond=UNE REG NA
IN0047:        jne      L_M18993_BB17

Variable Live Range History Dump for BB16
..None..

=============== Generating BB14 [0016] [103..104) (return), preds={BB12,BB16} succs={} flags=0x00000001.04008011: i LIR IBC label bwd-target
BB14 IN (0)={}
     OUT(0)={}

Recording Var Locations at start of BB14
  <none>

Change life 0000000000001000 {V05} -> 0000000000000000 {}
							V05 becoming dead
							Live regs: (unchanged) 0000000000000000 {}
							GC regs: (unchanged) 0000 {}
							Byref regs: (unchanged) 0000 {}

      L_M18993_BB14:
Adding label due to BB weight difference: BBJ_COND BB16 with weight 19.968 different from BB14 with weight 79.21664
Saved:
      G_M18993_IG08:        ; offs=0x0001EB, size=0x002B, bbWeight=0.20, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB16 [0019], gcvars, byref
Created:
      G_M18993_IG09:        ; offs=0x000216, size=0x0000, bbWeight=0.79, gcrefRegs=0000 {}
Label: G_M18993_IG09, GCvars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}
Generating: N331 (  0,  0) [000117] -----+-----                            RETURN    void   REG NA $VN.Void
Reserving epilog IG for block BB14
Created:
      G_M18993_IG10:        ; offs=0x000316, size=0x0000, bbWeight=0.79, gcrefRegs=0000 {}, epilog
*************** After placeholder IG creation
G_M18993_IG01:        ; func=00, offs=0x000000, size=0x0000, bbWeight=1, gcrefRegs=0000 {} <-- Prolog IG
G_M18993_IG02:        ; offs=0x000000, size=0x0061, bbWeight=1, gcrefRegs=0000 {}, byrefRegs=0008 {rbx}, BB01 [0000], byref
G_M18993_IG03:        ; offs=0x000061, size=0x000A, bbWeight=0.52, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB10 [0011], gcvars, byref
G_M18993_IG04:        ; offs=0x00006B, size=0x000F, bbWeight=0.42, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB11 [0012], byref
G_M18993_IG05:        ; offs=0x00007A, size=0x002E, bbWeight=0.10, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB15 [0017], gcvars, byref
G_M18993_IG06:        ; epilog placeholder, next placeholder=IG09 , BB15 [0017], epilog, extend <-- First placeholder
                      ;   PrevGCVars=0000000000001800 {V05 V23}, PrevGCrefRegs=0000 {}, PrevByrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
                      ;   InitGCVars=0000000000000800 {V23}, InitGCrefRegs=0000 {}, InitByrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
G_M18993_IG07:        ; offs=0x0001A8, size=0x0043, bbWeight=0.70, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB12 [0014], gcvars, byref
G_M18993_IG08:        ; offs=0x0001EB, size=0x002B, bbWeight=0.20, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB16 [0019], gcvars, byref
G_M18993_IG09:        ; epilog placeholder, next placeholder=<END>, BB14 [0016], epilog <-- Last placeholder
                      ;   PrevGCVars=0000000000001000 {V05}, PrevGCrefRegs=0000 {}, PrevByrefRegs=0000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=0000 {}, InitByrefRegs=0000 {}
G_M18993_IG10:        ; offs=0x000316, size=0x0000, bbWeight=0.79, gcrefRegs=0000 {} <-- Current IG

Variable Live Range History Dump for BB14
..None..

=============== Generating BB17 [0020] [17A..181) (throw), preds={BB16} succs={} flags=0x00000000.1408a011: i LIR IBC rare label hascall gcsafe
BB17 IN (1)={V05} + ByrefExposed + GcHeap
     OUT(0)={   }

Recording Var Locations at start of BB17
  <none>

Change life 0000000000000000 {} -> 0000000000001000 {V05}
							V05 becoming live
							Live regs: (unchanged) 0000000000000000 {}
							GC regs: (unchanged) 0000 {}
							Byref regs: (unchanged) 0000 {}

      L_M18993_BB17:
Label: G_M18993_IG10, GCvars=0000000000001000 {V05}, gcrefRegs=0000 {}, byrefRegs=0000 {}
Generating: N319 (  3,  2) [000132] -----+-----                  t132 =    LCL_VAR   ref    V05 loc1         u:4 rcx (last use) REG rcx $480
Mapped BB17 to G_M18993_IG10
IN0048:        mov      rcx, gword ptr [V05 rbp-0x28]
							Live vars after [000132]: {V05} -{V05} => {}
							GC vars after [000132]: {V05} => {}
							GC regs: 0000 {} => 0002 {rcx}
                                                                        /--*  t132   ref    
Generating: N321 (???,???) [000238] -----------                  t238 = *  PUTARG_REG ref    REG rcx
							GC regs: 0002 {rcx} => 0000 {}
							GC regs: 0000 {} => 0002 {rcx}
Generating: N323 (  3, 10) [000239] Hc---------                  t239 =    CNS_INT(h) long   0x7fff6d1fcf18 ftn REG NA
                                                                        /--*  t239   long   
Generating: N325 (  5, 12) [000240] nc--G------                  t240 = *  IND       long   REG NA
                                                                        /--*  t238   ref    this in rcx
                                                                        +--*  t240   long   control expr
Generating: N327 ( 17,  8) [000133] --CXG+-----                         *  CALL      void   System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this REG NA $VN.Void
							GC regs: 0002 {rcx} => 0000 {}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}
IN0049:        call     [System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this]
IN004a:        int3     

Variable Live Range History Dump for BB17
..None..

=============== Generating BB13 [0015] [0F8..103) -> BB16(1) (cret), preds={} succs={BB16} flags=0x00000000.3408a119: i LIR IBC rare keep label hascall xentry gcsafe flet
BB13 IN (2)={V01 V23    } + ByrefExposed + GcHeap
     OUT(3)={V01 V23 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB13
  V01(rdx->STK)  V23(rcx->STK)
Change life 0000000000000000 {} -> 0000000000000802 {V01 V23}
							V23 becoming live
							Live regs: (unchanged) 0000000000000000 {}
							GC regs: (unchanged) 0000 {}
							Byref regs: (unchanged) 0000 {}
							GC regs: 0000 {} => 0004 {rdx}

      L_M18993_BB13:
Saved:
      G_M18993_IG10:        ; offs=0x000316, size=0x000B, bbWeight=0, gcVars=0000000000001000 {V05}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB17 [0020], gcvars, byref
Created:
      G_M18993_IG11:        ; offs=0x000321, size=0x0000, bbWeight=0, gcrefRegs=0000 {}
Label: G_M18993_IG11, GCvars=0000000000000800 {V23}, gcrefRegs=0004 {rdx}, byrefRegs=0000 {}
Reserving funclet prolog IG for block BB13
Created:
      G_M18993_IG12:        ; offs=0x000421, size=0x0000, bbWeight=0, gcrefRegs=0000 {}, funclet prolog
*************** After placeholder IG creation
G_M18993_IG01:        ; func=00, offs=0x000000, size=0x0000, bbWeight=1, gcrefRegs=0000 {} <-- Prolog IG
G_M18993_IG02:        ; offs=0x000000, size=0x0061, bbWeight=1, gcrefRegs=0000 {}, byrefRegs=0008 {rbx}, BB01 [0000], byref
G_M18993_IG03:        ; offs=0x000061, size=0x000A, bbWeight=0.52, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB10 [0011], gcvars, byref
G_M18993_IG04:        ; offs=0x00006B, size=0x000F, bbWeight=0.42, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB11 [0012], byref
G_M18993_IG05:        ; offs=0x00007A, size=0x002E, bbWeight=0.10, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB15 [0017], gcvars, byref
G_M18993_IG06:        ; epilog placeholder, next placeholder=IG09 , BB15 [0017], epilog, extend <-- First placeholder
                      ;   PrevGCVars=0000000000001800 {V05 V23}, PrevGCrefRegs=0000 {}, PrevByrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
                      ;   InitGCVars=0000000000000800 {V23}, InitGCrefRegs=0000 {}, InitByrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
G_M18993_IG07:        ; offs=0x0001A8, size=0x0043, bbWeight=0.70, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB12 [0014], gcvars, byref
G_M18993_IG08:        ; offs=0x0001EB, size=0x002B, bbWeight=0.20, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB16 [0019], gcvars, byref
G_M18993_IG09:        ; epilog placeholder, next placeholder=IG11 , BB14 [0016], epilog
                      ;   PrevGCVars=0000000000001000 {V05}, PrevGCrefRegs=0000 {}, PrevByrefRegs=0000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=0000 {}, InitByrefRegs=0000 {}
G_M18993_IG10:        ; offs=0x000316, size=0x000B, bbWeight=0, gcVars=0000000000001000 {V05}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB17 [0020], gcvars, byref
G_M18993_IG11:        ; func=01, funclet prolog placeholder, next placeholder=<END>, BB13 [0015], funclet prolog <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=0000 {}, PrevByrefRegs=0000 {}
                      ;   InitGCVars=0000000000000800 {V23}, InitGCrefRegs=0004 {rdx}, InitByrefRegs=0000 {}
G_M18993_IG12:        ; offs=0x000421, size=0x0000, bbWeight=0, gcrefRegs=0000 {} <-- Current IG
Generating: N275 (  1,  1) [000081] -----+-----                   t81 =    CATCH_ARG ref    REG rdx $34d
							GC regs: 0004 {rdx} => 0000 {}
                                                                        /--*  t81    ref    
Generating: N277 (  5,  4) [000118] DA---+-----                         *  STORE_LCL_VAR ref    V31 tmp6         d:2 rcx REG rcx $VN.Void
Node was consumed twice:
N275 (  1,  1) [000081] -----+-----                         *  CATCH_ARG ref    REG rdx $34d
Mapped BB13 to G_M18993_IG12
IN004b:        mov      rcx, rdx
							V31 in reg rcx is becoming live  [000118]
							Live regs: 0000000000000000 {} + {rcx} => 0000000000000002 {rcx}
							Live vars after [000118]: {V01 V23} +{V31} => {V01 V23 V31}
							GC regs: 0000 {} => 0002 {rcx}
Generating: N279 (  3,  2) [000119] -----+-----                  t119 =    LCL_VAR   ref    V31 tmp6         u:2 rcx (last use) REG rcx $34d
                                                                        /--*  t119   ref    
Generating: N281 (???,???) [000241] -----------                  t241 = *  PUTARG_REG ref    REG rcx
							V31 in reg rcx is becoming dead  [000119]
							Live regs: 0000000000000002 {rcx} - {rcx} => 0000000000000000 {}
							Live vars after [000119]: {V01 V23 V31} -{V31} => {V01 V23}
							GC regs: 0002 {rcx} => 0000 {}
							GC regs: 0000 {} => 0002 {rcx}
Generating: N283 (  3, 10) [000242] Hc---------                  t242 =    CNS_INT(h) long   0x7fff6d1fcf30 ftn REG NA
                                                                        /--*  t242   long   
Generating: N285 (  5, 12) [000243] nc--G------                  t243 = *  IND       long   REG NA
                                                                        /--*  t241   ref    arg0 in rcx
                                                                        +--*  t243   long   control expr
Generating: N287 ( 17,  8) [000120] --CXG+-----                  t120 = *  CALL      ref    <unknown method> REG rax $34e
							GC regs: 0002 {rcx} => 0000 {}
							Call: GCvars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=0000 {}
IN004c:        call     [<unknown method>]
							GC regs: 0000 {} => 0001 {rax}
                                                                        /--*  t120   ref    
Generating: N289 ( 21, 11) [000121] DACXG+-----                         *  STORE_LCL_VAR ref    V05 loc1         d:3 NA REG NA $VN.Void
							GC regs: 0001 {rax} => 0000 {}
IN004d:        mov      gword ptr [V05 rbp-0x28], rax
							Live vars after [000121]: {V01 V23} +{V05} => {V01 V05 V23}
							GC vars after [000121]: {V23} => {V05 V23}
IN004e:        lea      rax, L_M18993_BB16
Reserving funclet epilog IG for block BB13
Saved:
      G_M18993_IG12:        ; offs=0x000421, size=0x0014, bbWeight=0, gcVars=0000000000000800 {V23}, gcrefRegs=0004 {rdx}, byrefRegs=0000 {}, BB13 [0015], gcvars, byref
Created:
      G_M18993_IG13:        ; offs=0x000435, size=0x0000, bbWeight=0, gcrefRegs=0000 {}
*************** After placeholder IG creation
G_M18993_IG01:        ; func=00, offs=0x000000, size=0x0000, bbWeight=1, gcrefRegs=0000 {} <-- Prolog IG
G_M18993_IG02:        ; offs=0x000000, size=0x0061, bbWeight=1, gcrefRegs=0000 {}, byrefRegs=0008 {rbx}, BB01 [0000], byref
G_M18993_IG03:        ; offs=0x000061, size=0x000A, bbWeight=0.52, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB10 [0011], gcvars, byref
G_M18993_IG04:        ; offs=0x00006B, size=0x000F, bbWeight=0.42, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB11 [0012], byref
G_M18993_IG05:        ; offs=0x00007A, size=0x002E, bbWeight=0.10, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB15 [0017], gcvars, byref
G_M18993_IG06:        ; epilog placeholder, next placeholder=IG09 , BB15 [0017], epilog, extend <-- First placeholder
                      ;   PrevGCVars=0000000000001800 {V05 V23}, PrevGCrefRegs=0000 {}, PrevByrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
                      ;   InitGCVars=0000000000000800 {V23}, InitGCrefRegs=0000 {}, InitByrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
G_M18993_IG07:        ; offs=0x0001A8, size=0x0043, bbWeight=0.70, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB12 [0014], gcvars, byref
G_M18993_IG08:        ; offs=0x0001EB, size=0x002B, bbWeight=0.20, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB16 [0019], gcvars, byref
G_M18993_IG09:        ; epilog placeholder, next placeholder=IG11 , BB14 [0016], epilog
                      ;   PrevGCVars=0000000000001000 {V05}, PrevGCrefRegs=0000 {}, PrevByrefRegs=0000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=0000 {}, InitByrefRegs=0000 {}
G_M18993_IG10:        ; offs=0x000316, size=0x000B, bbWeight=0, gcVars=0000000000001000 {V05}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB17 [0020], gcvars, byref
G_M18993_IG11:        ; func=01, funclet prolog placeholder, next placeholder=IG13 , BB13 [0015], funclet prolog
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=0000 {}, PrevByrefRegs=0000 {}
                      ;   InitGCVars=0000000000000800 {V23}, InitGCrefRegs=0004 {rdx}, InitByrefRegs=0000 {}
G_M18993_IG12:        ; offs=0x000421, size=0x0014, bbWeight=0, gcVars=0000000000000800 {V23}, gcrefRegs=0004 {rdx}, byrefRegs=0000 {}, BB13 [0015], gcvars, byref
G_M18993_IG13:        ; funclet epilog placeholder, next placeholder=<END>, BB13 [0015], funclet epilog, extend <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=0000 {}, PrevByrefRegs=0000 {}
                      ;   InitGCVars=0000000000000800 {V23}, InitGCrefRegs=0004 {rdx}, InitByrefRegs=0000 {}

Variable Live Range History Dump for BB13
..None..
Change life 0000000000001802 {V01 V05 V23} -> 0000000000000000 {}
							V23 becoming dead
							V05 becoming dead

# compCycleEstimate =    318, compSizeEstimate =   237 (dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)
; Final local variable assignments
;
;  V00 arg0         [V00,T00] ( 12, 10.80)   byref  ->  rbx         single-def
;  V01 arg1         [V01,T01] (  9,  7.90)    long  ->  [rbp+0x18]  EH-live single-def
;  V02 arg2         [V02,T02] (  5,  3.94)     int  ->   r8         single-def
;* V03 arg3         [V03    ] (  0,  0   )   byref  ->  zero-ref    single-def
;* V04 loc0         [V04    ] (  0,  0   )     int  ->  zero-ref   
;  V05 loc1         [V05,T12] (  4,  1.20)     ref  ->  [rbp-0x28]  do-not-enreg[M] class-hnd EH-live <System.Runtime.ExceptionServices.ExceptionDispatchInfo>
;* V06 loc2         [V06    ] (  0,  0   )   byref  ->  zero-ref    single-def
;  V07 loc3         [V07,T07] (  3,  1.80)   byref  ->  rax         single-def
;* V08 loc4         [V08    ] (  0,  0   )     int  ->  zero-ref   
;* V09 loc5         [V09    ] (  0,  0   )     int  ->  zero-ref   
;* V10 loc6         [V10    ] (  0,  0   )   byref  ->  zero-ref    single-def
;  V11 loc7         [V11,T08] (  3,  1.80)   byref  ->  rsi         single-def
;* V12 loc8         [V12    ] (  0,  0   )     int  ->  zero-ref   
;* V13 loc9         [V13    ] (  0,  0   )     int  ->  zero-ref   
;* V14 loc10        [V14    ] (  0,  0   )   byref  ->  zero-ref    single-def
;  V15 loc11        [V15,T09] (  3,  1.80)   byref  ->  rdi         single-def
;* V16 loc12        [V16    ] (  0,  0   )     int  ->  zero-ref   
;* V17 loc13        [V17    ] (  0,  0   )     int  ->  zero-ref   
;* V18 loc14        [V18    ] (  0,  0   )   byref  ->  zero-ref    single-def
;  V19 loc15        [V19,T10] (  3,  1.80)   byref  ->  r14         single-def
;* V20 loc16        [V20    ] (  0,  0   )  struct (32) zero-ref    do-not-enreg[S] <System.Data.OleDb.tagDBIDX>
;* V21 loc17        [V21    ] (  0,  0   )  struct (32) zero-ref    do-not-enreg[S] <System.Data.OleDb.tagDBIDX>
;* V22 loc18        [V22    ] (  0,  0   )   byref  ->  zero-ref    single-def
;  V23 loc19        [V23,T11] (  5,  1.70)   byref  ->  [rbp-0x30]  EH-live spill-single-def
;* V24 loc20        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd <<unknown class>>
;  V25 OutArgs      [V25    ] (  1,  1   )  struct (32) [rsp+0x00]  do-not-enreg[XS] addr-exposed "OutgoingArgSpace"
;  V26 tmp1         [V26,T03] (  6,  4.80)   byref  ->  rcx        
;  V27 tmp2         [V27,T04] (  6,  4.80)   byref  ->  r10        
;  V28 tmp3         [V28,T05] (  6,  4.80)   byref  ->   r9        
;  V29 tmp4         [V29,T06] (  6,  4.80)   byref  ->  r11        
;* V30 tmp5         [V30    ] (  0,  0   )   byref  ->  zero-ref   
;  V31 tmp6         [V31,T14] (  2,  0   )     ref  ->  rcx         class-hnd single-def "impSpillSpecialSideEff" <<unknown class>>
;  V32 PSPSym       [V32,T13] (  1,  1   )    long  ->  [rbp-0x40]  do-not-enreg[V] "PSPSym"
;
; Lcl frame size = 64
*************** Before prolog / epilog generation
G_M18993_IG01:        ; func=00, offs=0x000000, size=0x0000, bbWeight=1, gcrefRegs=0000 {} <-- Prolog IG
G_M18993_IG02:        ; offs=0x000000, size=0x0061, bbWeight=1, gcrefRegs=0000 {}, byrefRegs=0008 {rbx}, BB01 [0000], byref
G_M18993_IG03:        ; offs=0x000061, size=0x000A, bbWeight=0.52, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB10 [0011], gcvars, byref
G_M18993_IG04:        ; offs=0x00006B, size=0x000F, bbWeight=0.42, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB11 [0012], byref
G_M18993_IG05:        ; offs=0x00007A, size=0x002E, bbWeight=0.10, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB15 [0017], gcvars, byref
G_M18993_IG06:        ; epilog placeholder, next placeholder=IG09 , BB15 [0017], epilog, extend <-- First placeholder
                      ;   PrevGCVars=0000000000001800 {V05 V23}, PrevGCrefRegs=0000 {}, PrevByrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
                      ;   InitGCVars=0000000000000800 {V23}, InitGCrefRegs=0000 {}, InitByrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
G_M18993_IG07:        ; offs=0x0001A8, size=0x0043, bbWeight=0.70, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB12 [0014], gcvars, byref
G_M18993_IG08:        ; offs=0x0001EB, size=0x002B, bbWeight=0.20, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB16 [0019], gcvars, byref
G_M18993_IG09:        ; epilog placeholder, next placeholder=IG11 , BB14 [0016], epilog
                      ;   PrevGCVars=0000000000001000 {V05}, PrevGCrefRegs=0000 {}, PrevByrefRegs=0000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=0000 {}, InitByrefRegs=0000 {}
G_M18993_IG10:        ; offs=0x000316, size=0x000B, bbWeight=0, gcVars=0000000000001000 {V05}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB17 [0020], gcvars, byref
G_M18993_IG11:        ; func=01, funclet prolog placeholder, next placeholder=IG13 , BB13 [0015], funclet prolog
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=0000 {}, PrevByrefRegs=0000 {}
                      ;   InitGCVars=0000000000000800 {V23}, InitGCrefRegs=0004 {rdx}, InitByrefRegs=0000 {}
G_M18993_IG12:        ; offs=0x000421, size=0x0014, bbWeight=0, gcVars=0000000000000800 {V23}, gcrefRegs=0004 {rdx}, byrefRegs=0000 {}, BB13 [0015], gcvars, byref
G_M18993_IG13:        ; funclet epilog placeholder, next placeholder=<END>, BB13 [0015], funclet epilog, extend <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=0000 {}, PrevByrefRegs=0000 {}
                      ;   InitGCVars=0000000000000800 {V23}, InitGCrefRegs=0004 {rdx}, InitByrefRegs=0000 {}
Recording Var Locations at start of BB01
  V00(rbx)  V01(STK->rdx)  V02(r8)
*************** In genFnProlog()

__prolog:
IN004f:        push     rbp
IN0050:        push     r14
IN0051:        push     rdi
IN0052:        push     rsi
IN0053:        push     rbx
IN0054:        sub      rsp, 64
IN0055:        lea      rbp, [rsp+0x60]
IN0056:        mov      qword ptr [V32 rbp-0x40], rsp
*************** In genHomeRegisterParams()
IN0057:        mov      qword ptr [V01 rbp+0x18], rdx
4 registers in register parameter interference graph
  rcx
  rbx
    <- rcx
  rdx
  r8
IN0058:        mov      rbx, rcx
*************** In genEnregisterIncomingStackArgs()
2 tracked GC refs are at stack offsets -0030 ... FFFFFFE0

Saved:
      G_M18993_IG01:        ; offs=0x000000, size=0x001A, bbWeight=1, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, gcvars, byref, nogc

Funclet prolog / epilog info
   Function InitialSP-to-FP delta: 96
                         SP delta: 48
       PSP slot Initial SP offset: 32
*************** In genFnEpilog()

__epilog:
gcVarPtrSetCur=0000000000000800 {V23}, gcRegGCrefSetCur=0000 {}, gcRegByrefSetCur=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}
IN0059:        vzeroupper 
IN005a:        add      rsp, 64
IN005b:        pop      rbx
IN005c:        pop      rsi
IN005d:        pop      rdi
IN005e:        pop      r14
IN005f:        pop      rbp
IN0060:        ret      
Saved:
      G_M18993_IG06:        ; offs=0x0000A8, size=0x000E, bbWeight=0.10, epilog, nogc, extend
*************** In genFnEpilog()

__epilog:
gcVarPtrSetCur=0000000000000000 {}, gcRegGCrefSetCur=0000 {}, gcRegByrefSetCur=0000 {}
IN0061:        vzeroupper 
IN0062:        add      rsp, 64
IN0063:        pop      rbx
IN0064:        pop      rsi
IN0065:        pop      rdi
IN0066:        pop      r14
IN0067:        pop      rbp
IN0068:        ret      
Saved:
      G_M18993_IG09:        ; offs=0x000216, size=0x000E, bbWeight=0.79, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, gcvars, byref, epilog, nogc
*************** In genFuncletProlog()
IN0069:        push     rbp
IN006a:        push     r14
IN006b:        push     rdi
IN006c:        push     rsi
IN006d:        push     rbx
IN006e:        sub      rsp, 48
IN006f:        mov      rbp, qword ptr [rcx+0x20]
Marking regs modified: [rbp] ([rax rcx rdx rbx rsi rdi r8-r11 r14 r16-r31 mm0-mm5 mm16-mm31 k1-k7] => [rax rcx rdx rbx rbp rsi rdi r8-r11 r14 r16-r31 mm0-mm5 mm16-mm31 k1-k7])
IN0070:        mov      qword ptr [rsp+0x20], rbp
IN0071:        lea      rbp, [rbp+0x60]
Removing modified regs: [rbp] ([rax rcx rdx rbx rbp rsi rdi r8-r11 r14 r16-r31 mm0-mm5 mm16-mm31 k1-k7] => [rax rcx rdx rbx rsi rdi r8-r11 r14 r16-r31 mm0-mm5 mm16-mm31 k1-k7])
Saved:
      G_M18993_IG11:        ; offs=0x000321, size=0x0017, bbWeight=0, gcVars=0000000000000800 {V23}, gcrefRegs=0004 {rdx}, byrefRegs=0000 {}, gcvars, byref, funclet prolog, nogc
*************** In genFuncletEpilog()
IN0072:        vzeroupper 
IN0073:        add      rsp, 48
IN0074:        pop      rbx
IN0075:        pop      rsi
IN0076:        pop      rdi
IN0077:        pop      r14
IN0078:        pop      rbp
IN0079:        ret      
Saved:
      G_M18993_IG13:        ; offs=0x000435, size=0x000E, bbWeight=0, funclet epilog, nogc, extend
0 prologs, 2 epilogs, 1 funclet prologs, 1 funclet epilogs
*************** After prolog / epilog generation
G_M18993_IG01:        ; func=00, offs=0x000000, size=0x001A, bbWeight=1, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, gcvars, byref, nogc <-- Prolog IG
G_M18993_IG02:        ; offs=0x00001A, size=0x0061, bbWeight=1, gcrefRegs=0000 {}, byrefRegs=0008 {rbx}, BB01 [0000], byref
G_M18993_IG03:        ; offs=0x00007B, size=0x000A, bbWeight=0.52, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB10 [0011], gcvars, byref
G_M18993_IG04:        ; offs=0x000085, size=0x000F, bbWeight=0.42, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB11 [0012], byref
G_M18993_IG05:        ; offs=0x000094, size=0x002E, bbWeight=0.10, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB15 [0017], gcvars, byref
G_M18993_IG06:        ; offs=0x0000C2, size=0x000E, bbWeight=0.10, epilog, nogc, extend
G_M18993_IG07:        ; offs=0x0000D0, size=0x0043, bbWeight=0.70, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB12 [0014], gcvars, byref
G_M18993_IG08:        ; offs=0x000113, size=0x002B, bbWeight=0.20, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB16 [0019], gcvars, byref
G_M18993_IG09:        ; offs=0x00013E, size=0x000E, bbWeight=0.79, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, gcvars, byref, epilog, nogc
G_M18993_IG10:        ; offs=0x00014C, size=0x000B, bbWeight=0, gcVars=0000000000001000 {V05}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB17 [0020], gcvars, byref
G_M18993_IG11:        ; func=01, offs=0x000157, size=0x0017, bbWeight=0, gcVars=0000000000000800 {V23}, gcrefRegs=0004 {rdx}, byrefRegs=0000 {}, gcvars, byref, funclet prolog, nogc
G_M18993_IG12:        ; offs=0x00016E, size=0x0014, bbWeight=0, gcVars=0000000000000800 {V23}, gcrefRegs=0004 {rdx}, byrefRegs=0000 {}, BB13 [0015], gcvars, byref
G_M18993_IG13:        ; offs=0x000182, size=0x000E, bbWeight=0, funclet epilog, nogc, extend
*************** In emitRemoveJumpToNextInst()
Emitter Jump List:
IG02 IN001a  je[6] -> IG07
IG03 IN001c  je[6] -> IG05
IG04 IN001e  je[6] -> IG08
IG04 IN001f jmp[5] -> IG07
IG07 IN003e jmp[5] -> IG09 ; removal candidate ; after call before epilog
IG08 IN0047 jne[6] -> IG10
IG12 IN004e lea[7] -> IG08 (long)
  total jump count: 7
IG07 IN003e does not jump to the next instruction group, keeping.
emitRemoveJumpToNextInst removed no unconditional jumps
*************** In emitJumpDistBind()
Emitter Jump List:
IG02 IN001a  je[6] -> IG07
IG03 IN001c  je[6] -> IG05
IG04 IN001e  je[6] -> IG08
IG04 IN001f jmp[5] -> IG07
IG07 IN003e jmp[5] -> IG09 ; after call before epilog
IG08 IN0047 jne[6] -> IG10
IG12 IN004e lea[7] -> IG08 (long)
  total jump count: 7
Binding: IN001a: 000000 je       L_M18993_BB12
Binding L_M18993_BB12 to G_M18993_IG07
Estimate of fwd jump [F4EED6C4/026]: 0075 -> 00D0 = 0059
Shrinking jump [F4EED6C4/026]
Adjusted offset of BB03 from 007B to 0077
Binding: IN001c: 000000 je       L_M18993_BB15
Binding L_M18993_BB15 to G_M18993_IG05
Estimate of fwd jump [F4EED974/028]: 007B -> 0090 = 0013
Shrinking jump [F4EED974/028]
Adjusted offset of BB04 from 0085 to 007D
Binding: IN001e: 000000 je       L_M18993_BB16
Binding L_M18993_BB16 to G_M18993_IG08
Estimate of fwd jump [F4EEDD94/030]: 0081 -> 010B = 0088
Binding: IN001f: 000000 jmp      L_M18993_BB12
Binding L_M18993_BB12 to G_M18993_IG07
Estimate of fwd jump [F4EEDDCC/031]: 0087 -> 00C8 = 003F
Shrinking jump [F4EEDDCC/031]
Adjusted offset of BB05 from 0094 to 0089
Adjusted offset of BB06 from 00C2 to 00B7
Adjusted offset of BB07 from 00D0 to 00C5
Binding: IN003e: 000000 jmp      L_M18993_BB14
Binding L_M18993_BB14 to G_M18993_IG09
Estimate of fwd jump [F4EEEF8C/062]: 0103 -> 0133 = 002E
Shrinking jump [F4EEEF8C/062]
Adjusted offset of BB08 from 0113 to 0105
Binding: IN0047: 000000 jne      L_M18993_BB17
Binding L_M18993_BB17 to G_M18993_IG10
Estimate of fwd jump [F4EEF424/071]: 012A -> 013E = 0012
Shrinking jump [F4EEF424/071]
Adjusted offset of BB09 from 013E to 012C
Adjusted offset of BB10 from 014C to 013A
Adjusted offset of BB11 from 0157 to 0145
Adjusted offset of BB12 from 016E to 015C
Binding: IN004e: 000000 lea      rax, L_M18993_BB16
Binding L_M18993_BB16 to G_M18993_IG08
Estimate of bwd jump [F4EF002C/078]: 0169 -> 0105 = 0064
Adjusted offset of BB13 from 0182 to 0170
Total shrinkage =  18, min extra jump size =   9
Iterating branch shortening. Iteration = 2
Adjusted offset of BB03 from 0077 to 0077
Adjusted offset of BB04 from 007D to 007D
Estimate of fwd jump [F4EEDD94/030]: 0081 -> 0105 = 0082
Adjusted offset of BB05 from 0089 to 0089
Adjusted offset of BB06 from 00B7 to 00B7
Adjusted offset of BB07 from 00C5 to 00C5
Adjusted offset of BB08 from 0105 to 0105
Adjusted offset of BB09 from 012C to 012C
Adjusted offset of BB10 from 013A to 013A
Adjusted offset of BB11 from 0145 to 0145
Adjusted offset of BB12 from 015C to 015C
Estimate of bwd jump [F4EF002C/078]: 0169 -> 0105 = 0064

*************** Finishing PHASE Generate code

*************** Starting PHASE Emit code

Hot  code size = 0x17E bytes
Cold code size = 0x0 bytes
reserveUnwindInfo(isFunclet=false, isColdCode=false, unwindSize=0x10)
reserveUnwindInfo(isFunclet=true, isColdCode=false, unwindSize=0x10)
*************** In emitEndCodeGen()
Converting emitMaxStackDepth from bytes (0) to elements (0)

***************************************************************************
Instructions as they come out of the scheduler


G_M18993_IG01:        ; offs=0x000000, size=0x001A, bbWeight=1, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, gcvars, byref, nogc <-- Prolog IG
IN004f: 000000 push     rbp
IN0050: 000001 push     r14
IN0051: 000003 push     rdi
IN0052: 000004 push     rsi
IN0053: 000005 push     rbx
IN0054: 000006 sub      rsp, 64
IN0055: 00000A lea      rbp, [rsp+0x60]
IN0056: 00000F mov      qword ptr [rbp-0x40], rsp
IN0057: 000013 mov      qword ptr [rbp+0x18], rdx
IN0058: 000017 mov      rbx, rcx
                            ; byrRegs +[rbx]
						;; size=26 bbWeight=1 PerfScore 8.00
G_M18993_IG02:        ; offs=0x00001A, size=0x005D, bbWeight=1, gcrefRegs=0000 {}, byrefRegs=0008 {rbx}, BB01 [0000], byref, isz
IN0001: 00001A xor      rcx, rcx
                            ; gcrRegs +[rcx]
IN0002: 00001C mov      gword ptr [rbp-0x28], rcx
                            ; GC ptr vars +{V05}
IN0003: 000020 mov      rcx, rbx
                            ; gcrRegs -[rcx]
                            ; byrRegs +[rcx]
IN0004: 000023 lea      rax, bword ptr [rbx+0x08]
                            ; byrRegs +[rax]
IN0005: 000027 test     rcx, rcx
IN0006: 00002A cmovne   rcx, rax
IN0007: 00002E mov      rax, rdx
IN0008: 000031 mov      r10, rbx
                            ; byrRegs +[r10]
IN0009: 000034 lea      r9, bword ptr [rbx+0x0C]
                            ; byrRegs +[r9]
IN000a: 000038 test     r10, r10
IN000b: 00003B cmovne   r10, r9
IN000c: 00003F lea      rsi, [rdx+0x04]
IN000d: 000043 mov      r9, rbx
IN000e: 000046 lea      r11, bword ptr [rbx+0x10]
                            ; byrRegs +[r11]
IN000f: 00004A test     r9, r9
IN0010: 00004D cmovne   r9, r11
IN0011: 000051 lea      rdi, [rdx+0x08]
IN0012: 000055 mov      r11, rbx
IN0013: 000058 lea      r16, bword ptr [rbx+0x18]
                            ; byrRegs +[r16]
IN0014: 00005D test     r11, r11
IN0015: 000060 cmovne   r11, r16
IN0016: 000064 lea      r14, [rdx+0x10]
IN0017: 000068 lea      r16, [rdx+0x30]
                            ; byrRegs -[r16]
IN0018: 00006D mov      bword ptr [rbp-0x30], r16
                            ; GC ptr vars +{V23}
IN0019: 000072 test     r8d, r8d
IN001a: 000075 je       SHORT G_M18993_IG07
						;; size=93 bbWeight=1 PerfScore 10.75
G_M18993_IG03:        ; offs=0x000077, size=0x0006, bbWeight=0.52, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB10 [0011], gcvars, byref, isz
                            ; byrRegs +[rsi rdi r14 r16]
IN001b: 000077 cmp      r8d, 1
IN001c: 00007B je       SHORT G_M18993_IG05
						;; size=6 bbWeight=0.52 PerfScore 0.65
G_M18993_IG04:        ; offs=0x00007D, size=0x000C, bbWeight=0.42, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB11 [0012], byref, isz
IN001d: 00007D cmp      r8d, 2
IN001e: 000081 je       G_M18993_IG08
IN001f: 000087 jmp      SHORT G_M18993_IG07
						;; size=12 bbWeight=0.42 PerfScore 1.35
G_M18993_IG05:        ; offs=0x000089, size=0x002E, bbWeight=0.10, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB15 [0017], gcvars, byref
                            ; GC ptr vars -{V05}
IN0020: 000089 mov      eax, dword ptr [rax]
                            ; byrRegs -[rax]
IN0021: 00008B mov      dword ptr [rcx], eax
IN0022: 00008D mov      ecx, dword ptr [rsi]
                            ; byrRegs -[rcx]
IN0023: 00008F mov      dword ptr [r10], ecx
IN0024: 000092 mov      ecx, dword ptr [rdi]
IN0025: 000094 mov      dword ptr [r9], ecx
IN0026: 000097 vmovdqu  ymm0, ymmword ptr [r14]
IN0027: 00009C vmovdqu  ymmword ptr [r11], ymm0
IN0028: 0000A1 mov      rcx, r16
                            ; byrRegs +[rcx]
recordRelocation: 000001BDF2142807 (rw: 000001BDF2142807) => 00007FFF6F084420, type 16 (IMAGE_REL_BASED_DISP32), delta 0
                            ; GC ptr vars -{V23}
IN0029: 0000A5 call     [<unknown method>]
                            ; gcrRegs +[rax]
                            ; byrRegs -[rcx rsi rdi r9-r11 r14 r16]
                            ; gcr arg pop 0
IN002a: 0000AB mov      rdx, rax
                            ; gcrRegs +[rdx]
IN002b: 0000AE mov      rcx, rbx
                            ; byrRegs +[rcx]
recordRelocation: 000001BDF2142812 (rw: 000001BDF2142812) => 00007FFFCC0FB3A0, type 16 (IMAGE_REL_BASED_REL32), delta 0
IN002c: 0000B1 call     CORINFO_HELP_CHECKED_ASSIGN_REF
                            ; gcrRegs -[rax rdx]
                            ; byrRegs -[rcx rbx]
IN002d: 0000B6 nop      
						;; size=46 bbWeight=0.10 PerfScore 2.18
G_M18993_IG06:        ; offs=0x0000B7, size=0x000E, bbWeight=0.10, epilog, nogc, extend
IN0059: 0000B7 vzeroupper 
IN005a: 0000BA add      rsp, 64
IN005b: 0000BE pop      rbx
IN005c: 0000BF pop      rsi
IN005d: 0000C0 pop      rdi
IN005e: 0000C1 pop      r14
IN005f: 0000C3 pop      rbp
IN0060: 0000C4 ret      
						;; size=14 bbWeight=0.10 PerfScore 0.49
G_M18993_IG07:        ; offs=0x0000C5, size=0x0040, bbWeight=0.70, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB12 [0014], gcvars, byref, isz
                            ; byrRegs +[rax rcx rbx rsi rdi r9-r11 r14 r16]
                            ; GC ptr vars +{V11 V23}
IN002e: 0000C5 vxorps   ymm0, ymm0, ymm0
IN002f: 0000C9 vmovdqu  ymmword ptr [rdx], ymm0
IN0030: 0000CD vmovdqu  ymmword ptr [rdx+0x20], ymm0
IN0031: 0000D2 vmovdqu  xmmword ptr [rdx+0x38], xmm0
IN0032: 0000D7 mov      ecx, dword ptr [rcx]
                            ; byrRegs -[rcx]
IN0033: 0000D9 mov      dword ptr [rax], ecx
IN0034: 0000DB mov      ecx, dword ptr [r10]
IN0035: 0000DE mov      dword ptr [rsi], ecx
IN0036: 0000E0 mov      ecx, dword ptr [r9]
IN0037: 0000E3 mov      dword ptr [rdi], ecx
IN0038: 0000E5 vmovdqu  ymm0, ymmword ptr [r11]
IN0039: 0000EA vmovdqu  ymmword ptr [r14], ymm0
IN003a: 0000EF mov      word  ptr [r16], 0
IN003b: 0000F6 mov      rcx, gword ptr [rbx]
                            ; gcrRegs +[rcx]
IN003c: 0000F9 mov      rdx, r16
                            ; byrRegs +[rdx]
recordRelocation: 000001BDF214285F (rw: 000001BDF214285F) => 00007FFF6F084408, type 16 (IMAGE_REL_BASED_DISP32), delta 0
IN003d: 0000FD call     [<unknown method>]
                            ; gcrRegs -[rcx]
                            ; byrRegs -[rax rdx rbx rsi rdi r9-r11 r14 r16]
                            ; gcr arg pop 0
IN003e: 000103 jmp      SHORT G_M18993_IG09
						;; size=64 bbWeight=0.70 PerfScore 21.30
G_M18993_IG08:        ; offs=0x000105, size=0x0027, bbWeight=0.20, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB16 [0019], gcvars, byref, isz
                            ; GC ptr vars -{V11} +{V05}
IN003f: 000105 mov      rcx, bword ptr [rbp-0x30]
                            ; byrRegs +[rcx]
recordRelocation: 000001BDF214286B (rw: 000001BDF214286B) => 00007FFF6F084438, type 16 (IMAGE_REL_BASED_DISP32), delta 0
                            ; GC ptr vars -{V23}
IN0040: 000109 call     [<unknown method>]
                            ; byrRegs -[rcx]
                            ; gcr arg pop 0
IN0041: 00010F mov      rdx, qword ptr [rbp+0x18]
IN0042: 000113 vxorps   ymm0, ymm0, ymm0
IN0043: 000117 vmovdqu  ymmword ptr [rdx], ymm0
IN0044: 00011B vmovdqu  ymmword ptr [rdx+0x20], ymm0
IN0045: 000120 vmovdqu  xmmword ptr [rdx+0x38], xmm0
IN0046: 000125 cmp      gword ptr [rbp-0x28], 0
IN0047: 00012A jne      SHORT G_M18993_IG10
						;; size=39 bbWeight=0.20 PerfScore 2.86
G_M18993_IG09:        ; offs=0x00012C, size=0x000E, bbWeight=0.79, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, gcvars, byref, epilog, nogc
                            ; GC ptr vars -{V05}
IN0061: 00012C vzeroupper 
IN0062: 00012F add      rsp, 64
IN0063: 000133 pop      rbx
IN0064: 000134 pop      rsi
IN0065: 000135 pop      rdi
IN0066: 000136 pop      r14
IN0067: 000138 pop      rbp
IN0068: 000139 ret      
						;; size=14 bbWeight=0.79 PerfScore 3.76
G_M18993_IG10:        ; offs=0x00013A, size=0x000B, bbWeight=0, gcVars=0000000000001000 {V05}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB17 [0020], gcvars, byref
                            ; GC ptr vars +{V05}
IN0048: 00013A mov      rcx, gword ptr [rbp-0x28]
                            ; gcrRegs +[rcx]
recordRelocation: 000001BDF21428A0 (rw: 000001BDF21428A0) => 00007FFF6D1FCF18, type 16 (IMAGE_REL_BASED_DISP32), delta 0
                            ; GC ptr vars -{V05}
IN0049: 00013E call     [System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this]
                            ; gcrRegs -[rcx]
                            ; gcr arg pop 0
IN004a: 000144 int3     
						;; size=11 bbWeight=0 PerfScore 0.00
G_M18993_IG11:        ; offs=0x000145, size=0x0017, bbWeight=0, gcVars=0000000000000800 {V23}, gcrefRegs=0004 {rdx}, byrefRegs=0000 {}, gcvars, byref, funclet prolog, nogc
                            ; gcrRegs +[rdx]
                            ; GC ptr vars +{V11 V23}
IN0069: 000145 push     rbp
IN006a: 000146 push     r14
IN006b: 000148 push     rdi
IN006c: 000149 push     rsi
IN006d: 00014A push     rbx
IN006e: 00014B sub      rsp, 48
IN006f: 00014F mov      rbp, qword ptr [rcx+0x20]
IN0070: 000153 mov      qword ptr [rsp+0x20], rbp
IN0071: 000158 lea      rbp, [rbp+0x60]
						;; size=23 bbWeight=0 PerfScore 0.00
G_M18993_IG12:        ; offs=0x00015C, size=0x0014, bbWeight=0, gcVars=0000000000000800 {V23}, gcrefRegs=0004 {rdx}, byrefRegs=0000 {}, BB13 [0015], gcvars, byref
IN004b: 00015C mov      rcx, rdx
                            ; gcrRegs +[rcx]
recordRelocation: 000001BDF21428C1 (rw: 000001BDF21428C1) => 00007FFF6D1FCF30, type 16 (IMAGE_REL_BASED_DISP32), delta 0
IN004c: 00015F call     [<unknown method>]
                            ; gcrRegs -[rcx rdx] +[rax]
                            ; gcr arg pop 0
IN004d: 000165 mov      gword ptr [rbp-0x28], rax
                            ; GC ptr vars +{V05}
recordRelocation: 000001BDF21428CC (rw: 000001BDF21428CC) => 000001BDF2142865, type 16 (IMAGE_REL_BASED_DISP32), delta 0
IN004e: 000169 lea      rax, G_M18993_IG08
                            ; gcrRegs -[rax]
						;; size=20 bbWeight=0 PerfScore 0.00
G_M18993_IG13:        ; offs=0x000170, size=0x000E, bbWeight=0, funclet epilog, nogc, extend
IN0072: 000170 vzeroupper 
IN0073: 000173 add      rsp, 48
IN0074: 000177 pop      rbx
IN0075: 000178 pop      rsi
IN0076: 000179 pop      rdi
IN0077: 00017A pop      r14
IN0078: 00017C pop      rbp
IN0079: 00017D ret      
						;; size=14 bbWeight=0 PerfScore 0.00

Allocated method code size =  382 , actual size =  382, unused size =    0

; Total bytes of code 382, prolog size 26, PerfScore 51.35, instruction count 121, allocated bytes for code 382 (MethodHash=972eb5ce) for method (dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref) (FullOpts)
; ============================================================

*************** After end code gen, before unwindEmit()
G_M18993_IG01:        ; func=00, offs=0x000000, size=0x001A, bbWeight=1, PerfScore 8.00, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, gcvars, byref, nogc <-- Prolog IG

IN004f: 000000 push     rbp
IN0050: 000001 push     r14
IN0051: 000003 push     rdi
IN0052: 000004 push     rsi
IN0053: 000005 push     rbx
IN0054: 000006 sub      rsp, 64
IN0055: 00000A lea      rbp, [rsp+0x60]
IN0056: 00000F mov      qword ptr [V32 rbp-0x40], rsp
IN0057: 000013 mov      qword ptr [V01 rbp+0x18], rdx
IN0058: 000017 mov      rbx, rcx

G_M18993_IG02:        ; offs=0x00001A, size=0x005D, bbWeight=1, PerfScore 10.75, gcrefRegs=0000 {}, byrefRegs=0008 {rbx}, BB01 [0000], byref, isz

IN0001: 00001A xor      rcx, rcx
IN0002: 00001C mov      gword ptr [V05 rbp-0x28], rcx
IN0003: 000020 mov      rcx, rbx
IN0004: 000023 lea      rax, bword ptr [rbx+0x08]
IN0005: 000027 test     rcx, rcx
IN0006: 00002A cmovne   rcx, rax
IN0007: 00002E mov      rax, rdx
IN0008: 000031 mov      r10, rbx
IN0009: 000034 lea      r9, bword ptr [rbx+0x0C]
IN000a: 000038 test     r10, r10
IN000b: 00003B cmovne   r10, r9
IN000c: 00003F lea      rsi, [rdx+0x04]
IN000d: 000043 mov      r9, rbx
IN000e: 000046 lea      r11, bword ptr [rbx+0x10]
IN000f: 00004A test     r9, r9
IN0010: 00004D cmovne   r9, r11
IN0011: 000051 lea      rdi, [rdx+0x08]
IN0012: 000055 mov      r11, rbx
IN0013: 000058 lea      r16, bword ptr [rbx+0x18]
IN0014: 00005D test     r11, r11
IN0015: 000060 cmovne   r11, r16
IN0016: 000064 lea      r14, [rdx+0x10]
IN0017: 000068 lea      r16, [rdx+0x30]
IN0018: 00006D mov      bword ptr [V23 rbp-0x30], r16
IN0019: 000072 test     r8d, r8d
IN001a: 000075 je       SHORT G_M18993_IG07

G_M18993_IG03:        ; offs=0x000077, size=0x0006, bbWeight=0.52, PerfScore 0.65, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB10 [0011], gcvars, byref, isz

IN001b: 000077 cmp      r8d, 1
IN001c: 00007B je       SHORT G_M18993_IG05

G_M18993_IG04:        ; offs=0x00007D, size=0x000C, bbWeight=0.42, PerfScore 1.35, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB11 [0012], byref, isz

IN001d: 00007D cmp      r8d, 2
IN001e: 000081 je       G_M18993_IG08
IN001f: 000087 jmp      SHORT G_M18993_IG07

G_M18993_IG05:        ; offs=0x000089, size=0x002E, bbWeight=0.10, PerfScore 2.18, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB15 [0017], gcvars, byref

IN0020: 000089 mov      eax, dword ptr [rax]
IN0021: 00008B mov      dword ptr [rcx], eax
IN0022: 00008D mov      ecx, dword ptr [rsi]
IN0023: 00008F mov      dword ptr [r10], ecx
IN0024: 000092 mov      ecx, dword ptr [rdi]
IN0025: 000094 mov      dword ptr [r9], ecx
IN0026: 000097 vmovdqu  ymm0, ymmword ptr [r14]
IN0027: 00009C vmovdqu  ymmword ptr [r11], ymm0
IN0028: 0000A1 mov      rcx, r16
IN0029: 0000A5 call     [<unknown method>]
IN002a: 0000AB mov      rdx, rax
IN002b: 0000AE mov      rcx, rbx
IN002c: 0000B1 call     CORINFO_HELP_CHECKED_ASSIGN_REF
IN002d: 0000B6 nop      

G_M18993_IG06:        ; offs=0x0000B7, size=0x000E, bbWeight=0.10, PerfScore 0.49, epilog, nogc, extend

IN0059: 0000B7 vzeroupper 
IN005a: 0000BA add      rsp, 64
IN005b: 0000BE pop      rbx
IN005c: 0000BF pop      rsi
IN005d: 0000C0 pop      rdi
IN005e: 0000C1 pop      r14
IN005f: 0000C3 pop      rbp
IN0060: 0000C4 ret      

G_M18993_IG07:        ; offs=0x0000C5, size=0x0040, bbWeight=0.70, PerfScore 21.30, gcVars=0000000000000800 {V23}, gcrefRegs=0000 {}, byrefRegs=14ECB {rax rcx rbx rsi rdi r9 r10 r11 r14 r16}, BB12 [0014], gcvars, byref, isz

IN002e: 0000C5 vxorps   ymm0, ymm0, ymm0
IN002f: 0000C9 vmovdqu  ymmword ptr [rdx], ymm0
IN0030: 0000CD vmovdqu  ymmword ptr [rdx+0x20], ymm0
IN0031: 0000D2 vmovdqu  xmmword ptr [rdx+0x38], xmm0
IN0032: 0000D7 mov      ecx, dword ptr [rcx]
IN0033: 0000D9 mov      dword ptr [rax], ecx
IN0034: 0000DB mov      ecx, dword ptr [r10]
IN0035: 0000DE mov      dword ptr [rsi], ecx
IN0036: 0000E0 mov      ecx, dword ptr [r9]
IN0037: 0000E3 mov      dword ptr [rdi], ecx
IN0038: 0000E5 vmovdqu  ymm0, ymmword ptr [r11]
IN0039: 0000EA vmovdqu  ymmword ptr [r14], ymm0
IN003a: 0000EF mov      word  ptr [r16], 0
IN003b: 0000F6 mov      rcx, gword ptr [rbx]
IN003c: 0000F9 mov      rdx, r16
IN003d: 0000FD call     [<unknown method>]
IN003e: 000103 jmp      SHORT G_M18993_IG09

G_M18993_IG08:        ; offs=0x000105, size=0x0027, bbWeight=0.20, PerfScore 2.86, gcVars=0000000000001800 {V05 V23}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB16 [0019], gcvars, byref, isz

IN003f: 000105 mov      rcx, bword ptr [V23 rbp-0x30]
IN0040: 000109 call     [<unknown method>]
IN0041: 00010F mov      rdx, qword ptr [V01 rbp+0x18]
IN0042: 000113 vxorps   ymm0, ymm0, ymm0
IN0043: 000117 vmovdqu  ymmword ptr [rdx], ymm0
IN0044: 00011B vmovdqu  ymmword ptr [rdx+0x20], ymm0
IN0045: 000120 vmovdqu  xmmword ptr [rdx+0x38], xmm0
IN0046: 000125 cmp      gword ptr [V05 rbp-0x28], 0
IN0047: 00012A jne      SHORT G_M18993_IG10

G_M18993_IG09:        ; offs=0x00012C, size=0x000E, bbWeight=0.79, PerfScore 3.76, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, gcvars, byref, epilog, nogc

IN0061: 00012C vzeroupper 
IN0062: 00012F add      rsp, 64
IN0063: 000133 pop      rbx
IN0064: 000134 pop      rsi
IN0065: 000135 pop      rdi
IN0066: 000136 pop      r14
IN0067: 000138 pop      rbp
IN0068: 000139 ret      

G_M18993_IG10:        ; offs=0x00013A, size=0x000B, bbWeight=0, PerfScore 0.00, gcVars=0000000000001000 {V05}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB17 [0020], gcvars, byref

IN0048: 00013A mov      rcx, gword ptr [V05 rbp-0x28]
IN0049: 00013E call     [System.Runtime.ExceptionServices.ExceptionDispatchInfo:Throw():this]
IN004a: 000144 int3     

G_M18993_IG11:        ; func=01, offs=0x000145, size=0x0017, bbWeight=0, PerfScore 0.00, gcVars=0000000000000800 {V23}, gcrefRegs=0004 {rdx}, byrefRegs=0000 {}, gcvars, byref, funclet prolog, nogc

IN0069: 000145 push     rbp
IN006a: 000146 push     r14
IN006b: 000148 push     rdi
IN006c: 000149 push     rsi
IN006d: 00014A push     rbx
IN006e: 00014B sub      rsp, 48
IN006f: 00014F mov      rbp, qword ptr [rcx+0x20]
IN0070: 000153 mov      qword ptr [rsp+0x20], rbp
IN0071: 000158 lea      rbp, [rbp+0x60]

G_M18993_IG12:        ; offs=0x00015C, size=0x0014, bbWeight=0, PerfScore 0.00, gcVars=0000000000000800 {V23}, gcrefRegs=0004 {rdx}, byrefRegs=0000 {}, BB13 [0015], gcvars, byref

IN004b: 00015C mov      rcx, rdx
IN004c: 00015F call     [<unknown method>]
IN004d: 000165 mov      gword ptr [V05 rbp-0x28], rax
IN004e: 000169 lea      rax, G_M18993_IG08

G_M18993_IG13:        ; offs=0x000170, size=0x000E, bbWeight=0, PerfScore 0.00, funclet epilog, nogc, extend

IN0072: 000170 vzeroupper 
IN0073: 000173 add      rsp, 48
IN0074: 000177 pop      rbx
IN0075: 000178 pop      rsi
IN0076: 000179 pop      rdi
IN0077: 00017A pop      r14
IN0078: 00017C pop      rbp
IN0079: 00017D ret      


*************** Finishing PHASE Emit code

*************** Starting PHASE Emit GC+EH tables
Unwind Info:
  >> Start offset   : 0x000000 (not in unwind data)
  >>   End offset   : 0x000145 (not in unwind data)
  Version           : 1
  Flags             : 0x00
  SizeOfProlog      : 0x0A
  CountOfUnwindCodes: 6
  FrameRegister     : none (0)
  FrameOffset       : N/A (no FrameRegister) (Value=0)
  UnwindCodes       :
    CodeOffset: 0x0A UnwindOp: UWOP_ALLOC_SMALL (2)     OpInfo: 7 * 8 + 8 = 64 = 0x40
    CodeOffset: 0x06 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbx (3)
    CodeOffset: 0x05 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rsi (6)
    CodeOffset: 0x04 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rdi (7)
    CodeOffset: 0x03 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r14 (14)
    CodeOffset: 0x01 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbp (5)
allocUnwindInfo(pHotCode=0x000001BDF2142760, pColdCode=0x0000000000000000, startOffset=0x0, endOffset=0x145, unwindSize=0x10, pUnwindBlock=0x000001BDF4CFECB0, funKind=0 (main function))
Unwind Info:
  >> Start offset   : 0x000145 (not in unwind data)
  >>   End offset   : 0x00017e (not in unwind data)
  Version           : 1
  Flags             : 0x00
  SizeOfProlog      : 0x0A
  CountOfUnwindCodes: 6
  FrameRegister     : none (0)
  FrameOffset       : N/A (no FrameRegister) (Value=0)
  UnwindCodes       :
    CodeOffset: 0x0A UnwindOp: UWOP_ALLOC_SMALL (2)     OpInfo: 5 * 8 + 8 = 48 = 0x30
    CodeOffset: 0x06 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbx (3)
    CodeOffset: 0x05 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rsi (6)
    CodeOffset: 0x04 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rdi (7)
    CodeOffset: 0x03 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r14 (14)
    CodeOffset: 0x01 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbp (5)
allocUnwindInfo(pHotCode=0x000001BDF2142760, pColdCode=0x0000000000000000, startOffset=0x145, endOffset=0x17e, unwindSize=0x10, pUnwindBlock=0x000001BDF4CFEEE8, funKind=1 (handler))
*************** EH table for (dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)
1 EH table entries, 0 duplicate clauses, 0 cloned finallys, 1 total EH entries reported to VM
setEHcount(cEH=1)
EH#0: try [00C5..0105) handled by [0145..017E) (class: 200000A)
*************** In gcInfoBlockHdrSave()
Set code length to 382.
Set ReturnKind to Scalar.
Set stack base register to rbp.
Set PSPSym stack slot to 32.
Set WantsReportOnlyLeaf.
Set Outgoing stack arg area size to 32.
Stack slot id for offset -40 (-0x28) (frame) = 0.
Stack slot id for offset -48 (-0x30) (frame) (byref) = 1.
Register slot id for reg rbx (byref) = 2.
Register slot id for reg rcx = 3.
Register slot id for reg rcx (byref) = 4.
Register slot id for reg rax (byref) = 5.
Register slot id for reg r10 (byref) = 6.
Register slot id for reg r9 (byref) = 7.
Register slot id for reg r11 (byref) = 8.
Register slot id for reg r16 (byref) = 9.
Register slot id for reg rsi (byref) = 10.
Register slot id for reg rdi (byref) = 11.
Register slot id for reg r14 (byref) = 12.
Register slot id for reg rax = 13.
Register slot id for reg rdx = 14.
Register slot id for reg rdx (byref) = 15.
Set state of slot 0 at instr offset 0x20 to Live.
Set state of slot 0 at instr offset 0x89 to Dead.
Set state of slot 1 at instr offset 0x72 to Live.
Set state of slot 1 at instr offset 0xa5 to Dead.
Set state of slot 1 at instr offset 0xc5 to Live.
Set state of slot 1 at instr offset 0x109 to Dead.
Set state of slot 0 at instr offset 0x105 to Live.
Set state of slot 0 at instr offset 0x12c to Dead.
Set state of slot 0 at instr offset 0x13a to Live.
Set state of slot 0 at instr offset 0x13e to Dead.
Set state of slot 1 at instr offset 0x145 to Live.
Set state of slot 1 at instr offset 0x17e to Dead.
Set state of slot 0 at instr offset 0x169 to Live.
Set state of slot 0 at instr offset 0x17e to Dead.
Set state of slot 2 at instr offset 0x1a to Live.
Set state of slot 3 at instr offset 0x1c to Live.
Set state of slot 3 at instr offset 0x23 to Dead.
Set state of slot 4 at instr offset 0x23 to Live.
Set state of slot 5 at instr offset 0x27 to Live.
Set state of slot 6 at instr offset 0x34 to Live.
Set state of slot 7 at instr offset 0x38 to Live.
Set state of slot 8 at instr offset 0x4a to Live.
Set state of slot 9 at instr offset 0x5d to Live.
Set state of slot 9 at instr offset 0x6d to Dead.
Set state of slot 10 at instr offset 0x77 to Live.
Set state of slot 11 at instr offset 0x77 to Live.
Set state of slot 12 at instr offset 0x77 to Live.
Set state of slot 9 at instr offset 0x77 to Live.
Set state of slot 5 at instr offset 0x8b to Dead.
Set state of slot 4 at instr offset 0x8f to Dead.
Set state of slot 4 at instr offset 0xa5 to Live.
Set state of slot 13 at instr offset 0xab to Live.
Set state of slot 4 at instr offset 0xab to Dead.
Set state of slot 10 at instr offset 0xab to Dead.
Set state of slot 11 at instr offset 0xab to Dead.
Set state of slot 7 at instr offset 0xab to Dead.
Set state of slot 6 at instr offset 0xab to Dead.
Set state of slot 8 at instr offset 0xab to Dead.
Set state of slot 12 at instr offset 0xab to Dead.
Set state of slot 9 at instr offset 0xab to Dead.
Set state of slot 14 at instr offset 0xae to Live.
Set state of slot 4 at instr offset 0xb1 to Live.
Set state of slot 13 at instr offset 0xb6 to Dead.
Set state of slot 14 at instr offset 0xb6 to Dead.
Set state of slot 4 at instr offset 0xb6 to Dead.
Set state of slot 2 at instr offset 0xb6 to Dead.
Set state of slot 5 at instr offset 0xc5 to Live.
Set state of slot 4 at instr offset 0xc5 to Live.
Set state of slot 2 at instr offset 0xc5 to Live.
Set state of slot 10 at instr offset 0xc5 to Live.
Set state of slot 11 at instr offset 0xc5 to Live.
Set state of slot 7 at instr offset 0xc5 to Live.
Set state of slot 6 at instr offset 0xc5 to Live.
Set state of slot 8 at instr offset 0xc5 to Live.
Set state of slot 12 at instr offset 0xc5 to Live.
Set state of slot 9 at instr offset 0xc5 to Live.
Set state of slot 4 at instr offset 0xd9 to Dead.
Set state of slot 3 at instr offset 0xf9 to Live.
Set state of slot 15 at instr offset 0xfd to Live.
Set state of slot 3 at instr offset 0x103 to Dead.
Set state of slot 5 at instr offset 0x103 to Dead.
Set state of slot 15 at instr offset 0x103 to Dead.
Set state of slot 2 at instr offset 0x103 to Dead.
Set state of slot 10 at instr offset 0x103 to Dead.
Set state of slot 11 at instr offset 0x103 to Dead.
Set state of slot 7 at instr offset 0x103 to Dead.
Set state of slot 6 at instr offset 0x103 to Dead.
Set state of slot 8 at instr offset 0x103 to Dead.
Set state of slot 12 at instr offset 0x103 to Dead.
Set state of slot 9 at instr offset 0x103 to Dead.
Set state of slot 4 at instr offset 0x109 to Live.
Set state of slot 4 at instr offset 0x10f to Dead.
Set state of slot 3 at instr offset 0x13e to Live.
Set state of slot 3 at instr offset 0x144 to Dead.
Set state of slot 14 at instr offset 0x145 to Live.
Set state of slot 3 at instr offset 0x15f to Live.
Set state of slot 13 at instr offset 0x165 to Live.
Set state of slot 3 at instr offset 0x165 to Dead.
Set state of slot 14 at instr offset 0x165 to Dead.
Set state of slot 13 at instr offset 0x170 to Dead.
Defining interruptible range: [0x1a, 0xba).
Defining interruptible range: [0xc5, 0x12f).
Defining interruptible range: [0x13a, 0x145).
Defining interruptible range: [0x15c, 0x173).

*************** Finishing PHASE Emit GC+EH tables
"(dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)",2,1,0,0,0,0,1,8,0,0,0,1,0,0,8,0,17,0,0,0,0,51.35
Method code size: 382

Allocations for (dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref) (MethodHash=972eb5ce)
count:       4798, size:     369946, max =       7544
allocateMemory:     393216, nraUsed:     378216

Alloc'd bytes by kind:
                  kind |       size |     pct
  ---------------------+------------+--------
                   ABI |          0 |   0.00%
         AssertionProp |       7300 |   1.97%
               ASTNode |      33072 |   8.94%
              InstDesc |      12792 |   3.46%
              ImpStack |        648 |   0.18%
            BasicBlock |       7832 |   2.12%
              CallArgs |        576 |   0.16%
              FlowEdge |       1080 |   0.29%
      DepthFirstSearch |      12424 |   3.36%
                 Loops |        276 |   0.07%
     TreeStatementList |          0 |   0.00%
               SiScope |          0 |   0.00%
       DominatorMemory |        440 |   0.12%
                  LSRA |      11960 |   3.23%
         LSRA_Interval |       4512 |   1.22%
      LSRA_RefPosition |      13760 |   3.72%
          Reachability |        216 |   0.06%
                   SSA |       5144 |   1.39%
           ValueNumber |      23664 |   6.40%
              LvaTable |       5156 |   1.39%
            UnwindInfo |         32 |   0.01%
                hashBv |         40 |   0.01%
                bitset |       1792 |   0.48%
          FixedBitVect |        128 |   0.03%
               Generic |       2454 |   0.66%
   LocalAddressVisitor |        400 |   0.11%
         FieldSeqStore |          0 |   0.00%
          MemorySsaMap |         40 |   0.01%
          MemoryPhiArg |         80 |   0.02%
                   CSE |       2952 |   0.80%
                    GC |       8120 |   2.19%
       CorTailCallInfo |          0 |   0.00%
              Inlining |       4536 |   1.23%
            ArrayStack |        512 |   0.14%
             DebugInfo |          0 |   0.00%
             DebugOnly |     200064 |  54.08%
               Codegen |       2904 |   0.78%
               LoopOpt |          0 |   0.00%
             LoopClone |          0 |   0.00%
            LoopUnroll |          0 |   0.00%
             LoopHoist |          0 |   0.00%
            LoopIVOpts |          0 |   0.00%
               Unknown |       1032 |   0.28%
            RangeCheck |          0 |   0.00%
              CopyProp |       2720 |   0.74%
             Promotion |        624 |   0.17%
           SideEffects |          0 |   0.00%
       ObjectAllocator |          0 |   0.00%
    VariableLiveRanges |         40 |   0.01%
           ClassLayout |        224 |   0.06%
       TailMergeThrows |          0 |   0.00%
             EarlyProp |          0 |   0.00%
              ZeroInit |        224 |   0.06%
                   Pgo |        176 |   0.05%

Final metrics:
PhysicallyPromotedFields                  : 0
LoopsFoundDuringOpts                      : 0
LoopsCloned                               : 0
LoopsUnrolled                             : 0
LoopAlignmentCandidates                   : 0
LoopsAligned                              : 0
LoopsIVWidened                            : 0
WidenedIVs                                : 0
UnusedIVsRemoved                          : 0
LoopsMadeDownwardsCounted                 : 0
LoopsStrengthReduced                      : 0
VarsInSsa                                 : 20
HoistedExpressions                        : 0
RedundantBranchesEliminated               : 0
JumpThreadingsPerformed                   : 0
CseCount                                  : 0
BasicBlocksAtCodegen                      : 9
PerfScore                                 : 51.350657
BytesAllocated                            : 378216
ImporterBranchFold                        : 0
ImporterSwitchFold                        : 0
DevirtualizedCall                         : 0
DevirtualizedCallUnboxedEntry             : 0
DevirtualizedCallRemovedBox               : 0
GDV                                       : 0
ClassGDV                                  : 0
MethodGDV                                 : 0
MultiGuessGDV                             : 0
ChainedGDV                                : 0
InlinerBranchFold                         : 0
InlineAttempt                             : 0
InlineCount                               : 0
ProfileConsistentBeforeInline             : 1
ProfileConsistentAfterInline              : 1
ProfileSynthesizedBlendedOrRepaired       : 1
ProfileInconsistentInitially              : 0
ProfileInconsistentResetLeave             : 0
ProfileInconsistentImporterBranchFold     : 0
ProfileInconsistentImporterSwitchFold     : 0
ProfileInconsistentChainedGDV             : 0
ProfileInconsistentScratchBB              : 0
ProfileInconsistentInlinerBranchFold      : 0
ProfileInconsistentInlineeScale           : 0
ProfileInconsistentInlinee                : 0
ProfileInconsistentNoReturnInlinee        : 0
ProfileInconsistentMayThrowInlinee        : 0
NewRefClassHelperCalls                    : 0
StackAllocatedRefClasses                  : 0
NewBoxedValueClassHelperCalls             : 0
StackAllocatedBoxedValueClasses           : 0

****** DONE compiling (dynamicClass):IL_STUB_StructMarshal(byref,ulong,int,byref)
